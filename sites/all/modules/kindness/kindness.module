<?php
define("KINDNESS_REC_PER_PAGE", 5000);
require 'vendor/autoload.php';

/**
 * Display help and module information
 * @param $sPath		- which path of the site we're displaying help
 * @param $aArg array	- holds the current path as would be returned from arg() function
 * @return help			- text for the path
 **/



function kindness_help($sPath, $aArg){
	$sOutput = '';

	switch ($sPath){
		case "admin/help#kindness":
			$sOutput = '<p>'. "Kindness module.".'</p>';
			break;
	}

	return $sOutput;
}

function kindness_perm(){
	return array('access kindness content', 'access kindness child content', 'administer kindness');
}

function kindness_menu(){
	$aItems = array();
	
	$aItems['kindness'] = array(
		'title' => 'Good Deeds',
		'page callback' => 'kindness_dashboard',
		'access arguments' => array('administer kindness'),
		'type' => MENU_NORMAL_ITEM
	);
	
	$aItems['kindness/mentor/deactivate'] = array(
		'page callback' => 'kindness_mentor_deactivate',
		'access arguments' => array('access kindness content'),
		'type' => MENU_CALLBACK
	);
	
	$aItems['kindness/mentor'] = array(
		'title' => 'eMentor Volunteer',
		'page callback' => 'kindness_mentor',
		'access arguments' => array('access content'),
		'type' => MENU_CALLBACK
	);
	
	$aItems['kindness/callback/comments'] = array(
		'page callback' => 'kindness_callback_comments',
		'access arguments' => array('access kindness content'),
		'type' => MENU_CALLBACK
	);
	
	$aItems['kindness/callback/boosted-comments'] = array(
		'page callback' => 'workz2_boosted_comments',
		'access arguments' => array('access kindness content'),
		'type' => MENU_CALLBACK
	);
	
	$aItems['kindness/mentor/pending'] = array(
		'title' => 'Mentor - Pending Citation',
		'page callback' => 'kindness_mentor_pending',
		'access arguments' => array('access kindness content'),
		'type' => MENU_CALLBACK
	);
	
	$aItems['kindness/mentor/pending/process'] = array(
		'title' => 'Mentor - Pending Citation',
		'page callback' => 'kindness_mentor_pending_process',
		'access arguments' => array('access kindness content'),
		'type' => MENU_CALLBACK
	);
	
	$aItems['kindness/reviewer/process'] = array(
		'title' => 'Mentor - Pending Citation',
		'page callback' => 'kindness_reviewer_process',
		'access arguments' => array('access kindness content'),
		'type' => MENU_CALLBACK
	);
	
	$aItems['kindness/booster/boost'] = array(
		'title' => 'Booster',
		'page callback' => 'kindness_boost',
		'access arguments' => array('access kindness content'),
		'type' => MENU_CALLBACK
	);
	
	$aItems['kindness/reviewer/dashboard-status'] = array(
		'title' => 'Status',
		'page callback' => 'kindness_reviewer_dashboard_status',
		'access arguments' => array('access kindness content'),
		'type' => MENU_CALLBACK
	);
	
	$aItems['kindness/reviewer/assigned-samaritan'] = array(
		'title' => 'Assigned Samaritan',
		'page callback' => 'kindness_reviewer_assigned_samaritan',
		'access arguments' => array('access kindness content'),
		'type' => MENU_CALLBACK
	);
	
	$aItems['kindness/callback/delete'] = array(
		'title' => 'Mentor - Pending Citation',
		'page callback' => 'kindess_callback_delete',
		'access arguments' => array('access kindness content'),
		'type' => MENU_CALLBACK
	);
	
	$aItems['kindness/mentor/approve'] = array(
		'title' => 'Mentor - Approved Citation',
		'page callback' => 'kindness_mentor_approved',
		'access arguments' => array('access kindness content'),
		'type' => MENU_CALLBACK
	);
	
	$aItems['kindness/mentor/disapprove'] = array(
		'title' => 'Mentor - Disapproved Citation',
		'page callback' => 'kindness_mentor_disapproved',
		'access arguments' => array('access kindness content'),
		'type' => MENU_CALLBACK
	);
	
	$aItems['kindness/%/enroll'] = array(
		'page callback' => 'kindness_volunteer_enrol',
		'page arguments' => array(1),
		'access arguments' => array('access content'),
		'type' => MENU_CALLBACK
	);
	
	$aItems['kindness/mentor/assign/hopefuls'] = array(
		'page callback' => 'kindness_volunteer_assign_hopeful',
		'access arguments' => array('access kindness content'),
		'type' => MENU_CALLBACK
	);
	
	$aItems['kindness/dashboard'] = array(
		'title' => 'Dashboard',
		'page callback' => 'kindness_dashboard',
		'access arguments' => array('access kindness content'),
		'type' => MENU_DEFAULT_LOCAL_TASK,
		'weight' => 1
	);
	
	$aItems['kindness/create'] = array(
		'title' => 'Kindness Form',
		'page callback' => 'drupal_get_form',
		'page arguments' => array('kindness_create'),
		'access arguments' => array('access kindness child content'),
		'type' => MENU_LOCAL_TASK,
		'weight' => 2
	);
	
	$aItems['kindness/list'] = array(
		'title' => 'Pending',
		'page callback' => 'kindness_list',
		'access arguments' => array('access kindness content'),
		'type' => MENU_LOCAL_TASK,
		'weight' => 3
	);
	
	$aItems['kindness/approved'] = array(
		'title' => 'Approved',
		'page callback' => 'kindness_approved',
		'access arguments' => array('access kindness content'),
		'type' => MENU_LOCAL_TASK,
		'weight' => 4
	);
	
	$aItems['kindness/settings'] = array(
		'title' => 'Settings',
		'page callback' => 'drupal_get_form',
		'page arguments' => array('kindness_settings'),
		'access arguments' => array('access administration pages'),
		'type' => MENU_LOCAL_TASK,
		'weight' => 5
	);
	
	$aItems['kindness/convert'] = array(
		'title' => 'Convert',
		'page callback' => 'drupal_get_form',
		'page arguments' => array('kindness_convert'),
		'access arguments' => array('access kindness child content'),
		'type' => MENU_LOCAL_TASK,
		'weight' => 6
	);
		
	$aItems['kindness/details/%/%'] = array(
		'title' => 'Good Deed Details',
		'page callback' => 'kindness_list_details',
		'page arguments' => array(2, 3),
		'access arguments' => array('access kindness content'),
		'type' => MENU_CALLBACK
	);
	
	$aItems['kindness/details2/%/%/%'] = array(
		'title' => 'Good Deed Details',
		'page callback' => 'kindness_list_details2',
		'page arguments' => array(2, 3),
		'access arguments' => array('access kindness content'),
		'type' => MENU_CALLBACK
	);
	
	$aItems['kindness/details/submit'] = array(
		'title' => 'Good Deed Approval/Denial',
		'page callback' => 'kindness_list_details_submit',
		'access arguments' => array('access kindness content'),
		'type' => MENU_CALLBACK
	);
	
	$aItems['kindness/details/%/edit'] = array(
		'title' => 'Kindness Form Update',
		'page callback' => 'drupal_get_form',
		'page arguments' => array('kindness_list_details_edit', 2),
		'access arguments' => array('access kindness child content'),
		'type' => MENU_CALLBACK
	);
	
	$aItems['kindness/callback/details'] = array(
		'page callback' => 'kindness_callback_details',
		'access arguments' => array('access kindness content'),
		'type' => MENU_CALLBACK
	);
	
	$aItems['kindness/callback/convert'] = array(
		'page callback' => 'kindness_callback_convert',
		'access arguments' => array('access kindness content'),
		'type' => MENU_CALLBACK
	);
	
	$aItems['kindness/callback/dash/%'] = array(
		'page callback' => 'kindness_callback_dash',
		'page arguments' => array(3),
		'access arguments' => array('access kindness content'),
		'type' => MENU_CALLBACK
	);
	
	$aItems['kindness/callback/dash2'] = array(
		'page callback' => 'kindness_callback_dash2',
		'access arguments' => array('access kindness content'),
		'type' => MENU_CALLBACK
	);
	
	$aItems['kindness/callback/pending'] = array(
		'page callback' => 'kindness_callback_pending',
		'access arguments' => array('access kindness content'),
		'type' => MENU_CALLBACK
	);
	
	$aItems['kindness/callback/approved'] = array(
		'page callback' => 'kindness_callback_approved',
		'access arguments' => array('access kindness content'),
		'type' => MENU_CALLBACK
	);
	
	$aItems['kindness/callback/form'] = array(
		'page callback' => 'kindness_callback_form',
		'access arguments' => array('access kindness content'),
		'type' => MENU_CALLBACK
	);
	
	$aItems['kindness-v2/callback/form'] = array(
		'page callback' => 'kindness_callback_form_v2',
		'access arguments' => array('access kindness content'),
		'type' => MENU_CALLBACK
	);
	
	$aItems['kindness/callback/workz/%'] = array(
		'page callback' => 'kindness_callback_kindness_workz',
		'page arguments' => array(3),
		'access arguments' => array('access kindness content'),
		'type' => MENU_CALLBACK
	);
	
	$aItems['kindness/callback/workz2'] = array(
		'page callback' => 'kindness_callback_kindness_workz2',
		'access arguments' => array('access kindness content'),
		'type' => MENU_CALLBACK
	);
	
	$aItems['kindness/reviewer/workz/list'] = array(
		'page callback' => 'kindness_reviewer_workz_list',
		'access arguments' => array('access kindness content'),
		'type' => MENU_CALLBACK
	);
	
	$aItems['kindness/callback/workz2_benfactors'] = array(
		'page callback' => 'kindness_callback_kindness_workz2_benfactors',
		'access arguments' => array('access kindness content'),
		'type' => MENU_CALLBACK
	);
	
	$aItems['kindness/callback/workz2_get_geocode/%'] = array(
		'page arguments' => array(3),
		'page callback' => 'kindess_callback_get_geocode',
		'access arguments' => array('access kindness content'),
		'type' => MENU_CALLBACK
	);
	
	$aItems['kindness/callback/news'] = array(
		'page callback' => 'get_news',
		'access arguments' => array('access kindness content'),
		'type' => MENU_CALLBACK
	);
	
	$aItems['kindness/callback/edit'] = array(
		'page callback' => 'kindness_list_edit_details',
		'access arguments' => array('access kindness content'),
		'type' => MENU_CALLBACK
	);
	
	$aItems['kindness/callback/workz2_enroll_report'] = array(
		'page callback' => 'workz2_enroll_report',
		'access arguments' => array('access kindness content'),
		'type' => MENU_CALLBACK
	);

	$aItems['kindness/callback/workz2_enroll_reviewer'] = array(
		'page callback' => 'workz2_enroll_reviewer',
		'access arguments' => array('access kindness content'),
		'type' => MENU_CALLBACK
	);
	
	$aItems['kindness/callback/workz2_enroll_booster'] = array(
		'page callback' => 'workz2_enroll_booster',
		'access arguments' => array('access kindness content'),
		'type' => MENU_CALLBACK
	);
	
	$aItems['kindness/callback/upload_temp_image'] = array(
		'page callback' => 'upload_temp_image',
		'access arguments' => array('access kindness content'),
		'type' => MENU_CALLBACK
	);
	
	$aItems['kindness/reviewer/request-samaritan'] = array(
		'page callback' => 'kindness_reviewer_request_samaritan',
		'access arguments' => array('access kindness content'),
		'type' => MENU_CALLBACK
	);
	
	$aItems['kindness/get-information/%'] = array(
		'page arguments' => array(2),
		'page callback' => 'kindness_get_information',
		'access arguments' => array('access kindness content'),
		'type' => MENU_CALLBACK
	);
	
	$aItems['kindness/update-information/%'] = array(
		'page arguments' => array(2),
		'page callback' => 'kindness_update_information',
		'access arguments' => array('access kindness content'),
		'type' => MENU_CALLBACK
	);
	
	$aItems['kindness/message-from-reviewer/%/%'] = array(
		'page arguments' => array(2),
		'page callback' => 'kindness_message_from_reviewer',
		'access arguments' => array('access kindness content'),
		'type' => MENU_CALLBACK
	);
	
	$aItems['kindness/react/%/%'] = array(
		'page arguments' => array(2),
		'page callback' => 'kindness_react',
		'access arguments' => array('access kindness content'),
		'type' => MENU_CALLBACK
	);
	
	$aItems['kindness/certificate/%'] = array(
		'page arguments' => array(2),
		'page callback' => 'kindness_certificate',
		'access arguments' => array('access kindness content'),
		'type' => MENU_CALLBACK
	);
	
	$aItems['kindness/delete-information/%'] = array(
		'page arguments' => array(2),
		'page callback' => 'kindness_delete_information',
		'access arguments' => array('access kindness content'),
		'type' => MENU_CALLBACK
	);
	
	$aItems['kindness/add-user-role'] = array(
		'page arguments' => array(2),
		'page callback' => 'addUserRole',
		'access arguments' => array('access kindness content'),
		'type' => MENU_CALLBACK
	);
	
	$aItems['kindness/booster/dashboard'] = array(
		'page arguments' => array(2),
		'page callback' => 'booster_dashboard',
		'access arguments' => array('access kindness content'),
		'type' => MENU_CALLBACK
	);
	
	$aItems['kindness/booster/workz/list'] = array(
		'page callback' => 'booster_workz_list',
		'access arguments' => array('access kindness content'),
		'type' => MENU_CALLBACK
	);
	
	$aItems['kindness/reporter/workz/list'] = array(
		'page callback' => 'reporter_workz_list',
		'access arguments' => array('access kindness content'),
		'type' => MENU_CALLBACK
	);
	
	$aItems['kindness/samaritan/workz/list'] = array(
		'page callback' => 'samaritan_workz_list',
		'access arguments' => array('access kindness content'),
		'type' => MENU_CALLBACK
	);
	
	$aItems['kindness/booster/all/workz/list'] = array(
		'page callback' => 'all_workz_list',
		'access arguments' => array('access kindness content'),
		'type' => MENU_CALLBACK
	);
	
	$aItems['admin/workz/dashboard'] = array(
		'page arguments' => array(0),
		'page callback' => 'admin_workz_dashboard',
		'access arguments' => array('access kindness content'),
		'type' => MENU_CALLBACK
	);
	
	$aItems['admin/workz/all'] = array(
		'page arguments' => array(0),
		'page callback' => 'admin_workz_all',
		'access arguments' => array('access kindness content'),
		'type' => MENU_CALLBACK
	);
	
	$aItems['admin/workz/approved'] = array(
		'page arguments' => array(0),
		'page callback' => 'admin_workz_approved',
		'access arguments' => array('access kindness content'),
		'type' => MENU_CALLBACK
	);
	
	$aItems['admin/workz/disapproved'] = array(
		'page arguments' => array(0),
		'page callback' => 'admin_workz_disapproved',
		'access arguments' => array('access kindness content'),
		'type' => MENU_CALLBACK
	);
	
	$aItems['admin/workz/pending'] = array(
		'page arguments' => array(0),
		'page callback' => 'admin_workz_pending',
		'access arguments' => array('access kindness content'),
		'type' => MENU_CALLBACK
	);
	
	return $aItems;
}

function kindness_reviewer_workz_list()
{
	$type = $_REQUEST['type'];

	if ($type === 'pending') {
		$workz = reviewer_pending_list($iUserId);
	} else if ($type === 'approved') {
		$workz = reviewer_approved_list($iUserId);
	} else if ($type === 'disapproved') {
		$workz = reviewer_disapproved_list($iUserId);
	}

	echo json_encode($workz);exit;
}

function admin_workz_dashboard()
{
	return '<div>
		<div class="workz-dashboard-panel">
			<div style="min-height:60px">Total # of Workz</div>
			<div><a href="/admin/workz/all">'. admin_all_count() .'</a></div>
		</div>
		<div class="workz-dashboard-panel">
			<div style="min-height:60px">Total # of pending workz</div>
			<div><a href="/admin/workz/pending">'. admin_pending_count() .'</a></div>
		</div>
		<div class="workz-dashboard-panel">
			<div style="min-height:60px">Total # of approved workz</div>
			<div><a href="/admin/workz/approved">'. admin_approved_count() . '</a></div>
		</div>
		<div class="workz-dashboard-panel">
			<div style="min-height:60px">Total # of disapproved workz</div>
			<div><a href="/admin/workz/disapproved">'. admin_disapproved_count() .'</a></div>
		</div>
	</div>';
}

function admin_workz_all()
{
	global $user;

	$sqlKindness = "SELECT A.id, A.iUserId, B.uid, B.name as samaritan_name, REPLACE_THIS, A.iDuration, A.sTitle, A.sDesc, A.sToWhom, A.sLocation, A.sToWhomType, A.workz_type, A.workz_image, A.date_submitted, 
					beneficiary.name as beneficiary_name, reporter.name as reporter_name,
					A.is_benefactor_anonymous, A.is_beneficiary_anonymous, A.bApprovedMentor
					FROM kindness_submit A
					LEFT JOIN users B ON B.uid = A.iUserId
					LEFT JOIN users beneficiary ON beneficiary.uid = A.beneficiary_id
					LEFT JOIN users reporter ON reporter.uid = A.reporter_id
					WHERE reporter.uid IS NOT NULL AND 
						(B.uid IS NOT NULL OR A.is_benefactor_anonymous = 1) AND
						(beneficiary.uid IS NOT NULL OR A.is_beneficiary_anonymous = 1)
						" . filter_admin_workz_list() . "
					ORDER BY A.id DESC";
	
	$sqlKindness = db_query(str_replace("REPLACE_THIS", "DATE_FORMAT(A.dDatetime, '%M %e, %Y') AS sDate", $sqlKindness));

	$all_workz = '';
	$iCount = 0;

	while($workz = db_fetch_object($sqlKindness)){

		$iId = $workz->id;

		$workz->duration = setDuration($workz);
		setSamaritanName($workz);
		setBeneficiaryName($workz);
		setReviewerName($workz);
		setStatusDisplayName($workz);
		$all_workz .= admin_workz_content($workz, $iCount);

		$iCount ++;
	}

	return admin_workz_list_header(). $all_workz .admin_workz_list_footer();
}

function admin_workz_pending()
{
	$sqlKindness = "SELECT A.id, A.iUserId, B.uid, B.name as samaritan_name, REPLACE_THIS, A.iDuration, A.sTitle, A.sDesc, A.sToWhom, A.sLocation, A.sToWhomType, A.workz_type, A.workz_image, A.date_submitted, 
					beneficiary.name as beneficiary_name, reporter.name as reporter_name,
					A.is_benefactor_anonymous, A.is_beneficiary_anonymous, A.bApprovedMentor
		FROM kindness_submit A
		LEFT JOIN users B ON B.uid = A.iUserId
		LEFT JOIN users beneficiary ON beneficiary.uid = A.beneficiary_id
		LEFT JOIN users reporter ON reporter.uid = A.reporter_id
		WHERE A.bApprovedMentor = '0' AND
			reporter.uid IS NOT NULL AND 
			(B.uid IS NOT NULL OR A.is_benefactor_anonymous = 1) AND
			(beneficiary.uid IS NOT NULL OR A.is_beneficiary_anonymous = 1) AND 
			A.id NOT IN 
	        (Select iSubmitId 
	          from kindness_comment
	        )
			" . filter_admin_workz_list() . "
		ORDER BY A.id DESC";

	$sqlKindness = db_query(str_replace("REPLACE_THIS", "DATE_FORMAT(A.dDatetime, '%M %e, %Y') AS sDate", $sqlKindness));

	$all_workz = '';
	$iCount = 0;

	while($workz = db_fetch_object($sqlKindness)){

		$iId = $workz->id;

		$workz->duration = setDuration($workz);
		setSamaritanName($workz);
		setBeneficiaryName($workz);
		setReviewerName($workz);
		setStatusDisplayName($workz);
		$all_workz .= admin_workz_content($workz, $iCount);

		$iCount ++;
	}

	return admin_workz_list_header(). $all_workz .admin_workz_list_footer();
}

function admin_workz_approved()
{
	$sqlKindness = "SELECT A.id, A.iUserId, B.uid, B.name as samaritan_name, REPLACE_THIS, A.iDuration, A.sTitle, A.sDesc, A.sToWhom, A.sLocation, A.sToWhomType, A.workz_type, A.workz_image, A.date_submitted, 
					beneficiary.name as beneficiary_name, reporter.name as reporter_name,
					A.is_benefactor_anonymous, A.is_beneficiary_anonymous, A.bApprovedMentor
					FROM kindness_submit A
					LEFT JOIN users B ON B.uid = A.iUserId
					LEFT JOIN users beneficiary ON beneficiary.uid = A.beneficiary_id
					LEFT JOIN users reporter ON reporter.uid = A.reporter_id
					INNER JOIN kindness_comment C ON C.iSubmitId = A.id
					WHERE A.bApprovedMentor = '1'
						AND C.bApproved = '1'
						AND
						reporter.uid IS NOT NULL AND 
						(B.uid IS NOT NULL OR A.is_benefactor_anonymous = 1) AND
						(beneficiary.uid IS NOT NULL OR A.is_beneficiary_anonymous = 1)
					" . filter_admin_workz_list() . "
					ORDER BY A.id DESC";
	
	$sqlKindness = db_query(str_replace("REPLACE_THIS", "DATE_FORMAT(A.dDatetime, '%M %e, %Y') AS sDate", $sqlKindness));

	$all_workz = '';
	$iCount = 0;

	while($workz = db_fetch_object($sqlKindness)){

		$iId = $workz->id;

		$workz->duration = setDuration($workz);
		setSamaritanName($workz);
		setBeneficiaryName($workz);
		setReviewerName($workz);
		setStatusDisplayName($workz);
		$all_workz .= admin_workz_content($workz, $iCount);

		$iCount ++;
	}

	return admin_workz_list_header(). $all_workz .admin_workz_list_footer();
}

function admin_workz_disapproved()
{
	$sqlKindness = "SELECT A.id, A.iUserId, B.uid, B.name as samaritan_name, REPLACE_THIS, A.iDuration, A.sTitle, A.sDesc, A.sToWhom, A.sLocation, A.sToWhomType, A.workz_type, A.workz_image, A.date_submitted, 
					beneficiary.name as beneficiary_name, reporter.name as reporter_name,
					A.is_benefactor_anonymous, A.is_beneficiary_anonymous, A.bApprovedMentor
					FROM kindness_submit A
					LEFT JOIN users B ON B.uid = A.iUserId
					LEFT JOIN users beneficiary ON beneficiary.uid = A.beneficiary_id
					LEFT JOIN users reporter ON reporter.uid = A.reporter_id
					INNER JOIN kindness_comment C ON C.iSubmitId = A.id
					WHERE A.bApprovedMentor = '0'
						AND C.bApproved = '0'
						AND
						reporter.uid IS NOT NULL AND 
						(B.uid IS NOT NULL OR A.is_benefactor_anonymous = 1) AND
						(beneficiary.uid IS NOT NULL OR A.is_beneficiary_anonymous = 1) AND
						A.id IN 
				        (Select iSubmitId 
				          from kindness_comment
				        )
					" . filter_admin_workz_list() . "
					ORDER BY A.id DESC";
	
	$sqlKindness = db_query(str_replace("REPLACE_THIS", "DATE_FORMAT(A.dDatetime, '%M %e, %Y') AS sDate", $sqlKindness));

	$all_workz = '';
	$iCount = 0;

	while($workz = db_fetch_object($sqlKindness)){

		$iId = $workz->id;

		$workz->duration = setDuration($workz);
		setSamaritanName($workz);
		setBeneficiaryName($workz);
		setReviewerName($workz);
		setStatusDisplayName($workz);
		$all_workz .= admin_workz_content($workz, $iCount);

		$iCount ++;
	}

	return admin_workz_list_header(). $all_workz .admin_workz_list_footer();
}


function admin_workz_list_header(){
	$output = '<div><div class="container-inline"><fieldset><legend>Universal Search</legend><div class="form-item" id="edit-operation-wrapper">'.$keytext.'<br/><form id="" name="" action="">Search: <input type="input" name="keyword" id="" value="'.$_GET['keyword'].'" /> <input type="submit" id="" name="search" value="Search"></form></fieldset></div></div>
		<div style="width:100%;overflow: auto;">';
	return $output.'<table>
			<tr style="font-size:0.8em;">
				<th class="select-all" style="padding:5px;"><input type="checkbox" id="kindness_master_admin_bCheckAll" name="kindness_master_admin_bCheckAll" title="Select all rows in this table" /></th>
				<th style="width:120px;">Reporter</th>
				<th style="width:72px;">Workz Title</th>
				<th>Samaritan</th>
				<th style="text-align:center;">Reviewer</th>
				<th style="text-align:center;">Date Reported</th>
				<th style="text-align:center;">Status</th>
				<th style="text-align:center;">View Report</th>
			</tr>';
}

function admin_workz_list_footer(){

	$edit_workz = file_get_contents($_SERVER['DOCUMENT_ROOT'].'/hud_files/edit_workz.php');

	return '</table></div> 
		<div id="KSPopUp">
			<div id="workz-status-container">

			<div id="workz-status-close-modal"><a onmouseover=\'this.style.cursor="pointer" \' onfocus=\'this.blur();\' onclick="document.getElementById(\'KSPopUp\').style.display = \'none\';document.getElementById(\'KSPopUpOverlay\').style.display = \'none\';document.getElementById(\'out\').style.display = \'none\';document.getElementById(\'in\').style.display = \'block\';document.getElementById(\'KSPopUp\').style.display = \'none\'; " >X</a></div>
				<div id="workz-status-header">
					<h1>Samaritan Report</h1>
				</div>
				<div id="hud_KSText">loading..</div>
			</div>
		</div>
			<div id="KSPopUpOverlay" style="    width: 100%;
			    height: 100%;
			    position: fixed;
			    background-color: #000;
			    opacity: .6;
			    z-index: 100;
			    top: 0px;
			    left: 0px;display: none;">
			    	
			</div>
			<div id="hud-loading"></div>
		';
}

function admin_workz_content($workz, $iCount) {

	$sRowClass = ($iCount % 2 == 0) ? 'even':'odd';
	return '<tr class="'. $sRowClass .'">
			<td><input type="checkbox" id="workz" name="workz[]" value="'.$iUserId.'-'.$sRole.'" /></td>
			<td>'. $workz->reporter_name .'</td>
			<td>'. $workz->sTitle .'</td>
			<td>'. $workz->samaritan_name .'</td>
			<td>'. $workz->reviewer_name .'</td>
			<td>'. $workz->date_submitted .'</td>
			<td>'. $workz->status_display_name .'</td>
			<td>
				<a class="workz-mobile-column-clickable" kindness_id="'. $workz->id .'">
					View report
				</a>
			</td>
		</tr>
	';
}

function filter_admin_workz_list() {

	$filter = '';
	if (isset($_REQUEST['search']) && isset($_REQUEST['keyword']) ) {
		if (!empty($_REQUEST['keyword'])) {
			$keyword = $_REQUEST['keyword'];

			$filter = ' && A.sTitle like "% '. $keyword .'%"';
		}
	}

	return $filter;
}

function reviewer_pending_list()
{
	global $user;

	$aHopefuls = _kindness_mentor_hopeful($user->uid);
	$sqlKindness = "SELECT A.id, A.iUserId, B.uid, B.name as samaritan_name, REPLACE_THIS, A.iDuration, A.sTitle, A.sDesc, A.sToWhom, A.sLocation, A.sToWhomType, A.workz_type, A.workz_image, A.date_submitted, 
					beneficiary.name as beneficiary_name, reporter.name as reporter_name,
					A.is_benefactor_anonymous, A.is_beneficiary_anonymous
					FROM kindness_submit A
					LEFT JOIN users B ON B.uid = A.iUserId
					LEFT JOIN users beneficiary ON beneficiary.uid = A.beneficiary_id
					LEFT JOIN users reporter ON reporter.uid = A.reporter_id
					WHERE A.bApprovedMentor = '0'
						AND A.iUserId IN (%s)
						AND
						reporter.uid IS NOT NULL AND 
						(B.uid IS NOT NULL OR A.is_benefactor_anonymous = 1) AND
						(beneficiary.uid IS NOT NULL OR A.is_beneficiary_anonymous = 1) 
					ORDER BY A.id DESC";
	
	$sqlKindness = sprintf($sqlKindness, implode(",", $aHopefuls));
	
	$sqlKindness = db_query(str_replace("REPLACE_THIS", "DATE_FORMAT(A.dDatetime, '%M %e, %Y') AS sDate", $sqlKindness));


	$pending_workz = array();

	while($workz = db_fetch_object($sqlKindness)){

		$iId = $workz->id;
		
		$sqlCheck = "SELECT COUNT(id) FROM kindness_comment WHERE bApproved = '0' AND iSubmitId = %d";
		$iCheckCount = db_result(db_query($sqlCheck, $iId));
		
		if ($iCheckCount > 0){
			continue;
		}else{
			$workz->duration = setDuration($workz);
			setSamaritanName($workz);
			setBeneficiaryName($workz);
			array_push($pending_workz, $workz);
		}
	}

	return $pending_workz;
}

function reviewer_approved_list()
{
	global $user;

	$iUserId = $user->uid;
	$aHopefuls = _kindness_mentor_hopeful($iUserId);
	$sqlKindness = "SELECT A.id, A.iUserId, B.uid, B.name as samaritan_name, REPLACE_THIS, A.iDuration, A.sTitle, A.sDesc, A.sToWhom, A.sLocation, A.sToWhomType, A.workz_type, A.workz_image, A.date_submitted,
					beneficiary.name as beneficiary_name, reporter.name as reporter_name,
					A.is_benefactor_anonymous, A.is_beneficiary_anonymous
					FROM kindness_submit A
					LEFT JOIN users B ON B.uid = A.iUserId
					LEFT JOIN users beneficiary ON beneficiary.uid = A.beneficiary_id
					LEFT JOIN users reporter ON reporter.uid = A.reporter_id
					INNER JOIN kindness_comment C ON C.iSubmitId = A.id
					WHERE A.bApprovedMentor = '1'
						AND A.iUserId IN (%s)
						AND C.iUserId = %d
						AND C.bApproved = '1'
						AND
						reporter.uid IS NOT NULL AND 
						(B.uid IS NOT NULL OR A.is_benefactor_anonymous = 1) AND
						(beneficiary.uid IS NOT NULL OR A.is_beneficiary_anonymous = 1)
					ORDER BY A.id DESC";
	
	$sqlKindness = sprintf($sqlKindness, implode(",", $aHopefuls), $iUserId);
	
	$sqlKindness = db_query(str_replace("REPLACE_THIS", "DATE_FORMAT(A.dDatetime, '%M %e, %Y') AS sDate", $sqlKindness));


	$approved_workz = array();

	while($workz = db_fetch_object($sqlKindness)){

		$iId = $workz->id;
		$workz->duration = setDuration($workz);
		setSamaritanName($workz);
		setBeneficiaryName($workz);
		array_push($approved_workz, $workz);
	}

	return $approved_workz;
}

function reviewer_disapproved_list()
{
	global $user;

	$iUserId = $user->uid;
	$aHopefuls = _kindness_mentor_hopeful($iUserId);
	$sqlKindness = "SELECT A.id, A.iUserId, B.uid, B.name as samaritan_name, REPLACE_THIS, A.iDuration, A.sTitle, A.sDesc, A.sToWhom, A.sLocation, A.sToWhomType, A.workz_type, A.workz_image, A.date_submitted,
					beneficiary.name as beneficiary_name, reporter.name as reporter_name,
					A.is_benefactor_anonymous, A.is_beneficiary_anonymous
					FROM kindness_submit A
					LEFT JOIN users B ON B.uid = A.iUserId
					LEFT JOIN users beneficiary ON beneficiary.uid = A.beneficiary_id
					LEFT JOIN users reporter ON reporter.uid = A.reporter_id
					INNER JOIN kindness_comment C ON C.iSubmitId = A.id
					WHERE A.bApprovedMentor = '0'
						AND A.iUserId IN (%s)
						AND C.iUserId = %d
						AND C.bApproved = '0'
						AND
						reporter.uid IS NOT NULL AND 
						(B.uid IS NOT NULL OR A.is_benefactor_anonymous = 1) AND
						(beneficiary.uid IS NOT NULL OR A.is_beneficiary_anonymous = 1)
					ORDER BY A.id DESC";
	
	$sqlKindness = sprintf($sqlKindness, implode(",", $aHopefuls), $iUserId);
	
	$sqlKindness = db_query(str_replace("REPLACE_THIS", "DATE_FORMAT(A.dDatetime, '%M %e, %Y') AS sDate", $sqlKindness));


	$disapproved_workz = array();

	while($workz = db_fetch_object($sqlKindness)){

		$iId = $workz->id;
		$workz->duration = setDuration($workz);
		setSamaritanName($workz);
		setBeneficiaryName($workz);
		array_push($disapproved_workz, $workz);
	}

	return $disapproved_workz;
}

function admin_all_count()
{
	global $user;

	$sqlKindness = "SELECT count(1)
					FROM kindness_submit A
					LEFT JOIN users B ON B.uid = A.iUserId
					LEFT JOIN users beneficiary ON beneficiary.uid = A.beneficiary_id
					LEFT JOIN users reporter ON reporter.uid = A.reporter_id
					WHERE
						reporter.uid IS NOT NULL AND 
						(B.uid IS NOT NULL OR A.is_benefactor_anonymous = 1) AND
						(beneficiary.uid IS NOT NULL OR A.is_beneficiary_anonymous = 1)
					ORDER BY A.id DESC";
	
	$sqlKindness = db_query($sqlKindness);

	return db_result($sqlKindness);
}

function admin_pending_count()
{
	global $user;

	$sqlKindness = "SELECT count(1)
					FROM kindness_submit A
					LEFT JOIN users B ON B.uid = A.iUserId
					LEFT JOIN users beneficiary ON beneficiary.uid = A.beneficiary_id
					LEFT JOIN users reporter ON reporter.uid = A.reporter_id
					WHERE A.bApprovedMentor = '0' AND
						reporter.uid IS NOT NULL AND 
						(B.uid IS NOT NULL OR A.is_benefactor_anonymous = 1) AND
						(beneficiary.uid IS NOT NULL OR A.is_beneficiary_anonymous = 1) AND 
					A.id NOT IN 
			        (Select iSubmitId 
			          from kindness_comment
			        )
					ORDER BY A.id DESC";
	
	$sqlKindness = db_query($sqlKindness);

	return db_result($sqlKindness);
}

function admin_approved_count()
{
	global $user;

	$sqlKindness = "SELECT COUNT(1)
					FROM kindness_submit A
					LEFT JOIN users B ON B.uid = A.iUserId
					LEFT JOIN users beneficiary ON beneficiary.uid = A.beneficiary_id
					LEFT JOIN users reporter ON reporter.uid = A.reporter_id
					INNER JOIN kindness_comment C ON C.iSubmitId = A.id
					WHERE A.bApprovedMentor = '1'
						AND C.bApproved = '1'
						AND
						reporter.uid IS NOT NULL AND 
						(B.uid IS NOT NULL OR A.is_benefactor_anonymous = 1) AND
						(beneficiary.uid IS NOT NULL OR A.is_beneficiary_anonymous = 1)
					ORDER BY A.id DESC";
	
	$sqlKindness = db_query($sqlKindness);

	return db_result($sqlKindness);
}

function admin_disapproved_count()
{
	global $user;

	$sqlKindness = "SELECT COUNT(1)
					FROM kindness_submit A
					LEFT JOIN users B ON B.uid = A.iUserId
					LEFT JOIN users beneficiary ON beneficiary.uid = A.beneficiary_id
					LEFT JOIN users reporter ON reporter.uid = A.reporter_id
					INNER JOIN kindness_comment C ON C.iSubmitId = A.id
					WHERE A.bApprovedMentor = '0'
						AND C.bApproved = '0'
						AND
						reporter.uid IS NOT NULL AND 
						(B.uid IS NOT NULL OR A.is_benefactor_anonymous = 1) AND
						(beneficiary.uid IS NOT NULL OR A.is_beneficiary_anonymous = 1) AND
						A.id IN 
				        (Select iSubmitId 
				          from kindness_comment
				        )
					ORDER BY A.id DESC";
	
	$sqlKindness = db_query($sqlKindness);

	return db_result($sqlKindness);
}

function setDuration($oKindness)
{
	$iDuration = $oKindness->iDuration/60;
	$iTimeHour = intval($iDuration);
	$iTimeMin = str_pad(round(($iDuration - floor($iDuration)) * 60), 2, '0', STR_PAD_LEFT);

	return $iTimeHour.' Hour'.(($iTimeHour > 1) ? 's':'').' and '.$iTimeMin.' Minute'.(($iTimeMin > 1) ? 's':'');
}

function setSamaritanName(&$workz){

	$is_benefactor_anonymous = $workz->workz_type == 'Random Kindness Workz' || $workz->is_benefactor_anonymous;

	if ($is_benefactor_anonymous) {
		$workz->samaritan_name = 'Anonymous';
	}
}

function setReviewerName(&$workz) {
	$sqlSelect = "SELECT B.name
				FROM volunteer_mentor_hopeful A
				INNER JOIN users B ON B.uid = A.iMentorId
				WHERE A.iHopefulId = %d";

	if ($workz->is_benefactor_anonymous) {
		$workz->reviewer_name = 'All Anonymous Reviewer';
	} else {
		$oSelectResult = db_query($sqlSelect, $workz->iUserId);
		// var_dump($oSelectResult->num_rows);exit;
		if ($oSelectResult->num_rows > 0) {
			$workz->reviewer_name = db_result($oSelectResult);
		}else{
			$workz->reviewer_name = 'Not assigned yet';
		}
	}
}

function setStatusDisplayName(&$workz) {
	$status = '';
	if ($workz->bApprovedMentor == 1) {
		$workz->status_display_name = 'Approved';
	}else{
		$sqlSelect = "SELECT * FROM kindness_comment
					WHERE iSubmitId = %d";

		$oSelectResult = db_query($sqlSelect, $workz->id);

		if ($oSelectResult->num_rows > 0) {
			$workz->status_display_name = 'Disapproved';
		}else{
			$workz->status_display_name = 'Pending';
		}
	}
}

function setBeneficiaryName(&$workz){

	$is_beneficiary_anonymous = $workz->workz_type == 'Random Kindness Workz' || $workz->is_beneficiary_anonymous;
	
	if ($is_beneficiary_anonymous) {
		$workz->beneficiary_name = 'Anonymous';
	}
}

function upload_temp_image()
{
	$upload_folder = $_SERVER['DOCUMENT_ROOT'].'/hud_files/uploads/';
	$benefactor_upload_directory = $upload_folder.'temp/';

	if (!file_exists($benefactor_upload_directory)) {
	    mkdir($benefactor_upload_directory, 0777, true);
	}

	$benefactor_filename = 'temp-'.time().'-'.$_FILES['image']['name'];
	move_uploaded_file($_FILES['image']['tmp_name'], $benefactor_upload_directory.$benefactor_filename);


	echo json_encode([
		'original_name' => $benefactor_filename,
		'upload_name' => $_FILES['image']['name'],
	]);
}

function workz2_enroll_report(){
	global $user;

	$user_role_ids = array_keys($user->roles);
	array_push($user_role_ids, 25);//25 = Reporter role
	$new_roles = [];

	$enrol_reporter_role = [
		'roles' => array_combine($user_role_ids, $user_role_ids),
	];

	$saved = user_save($user, $enrol_reporter_role);

	echo $saved->uid;
}

function workz2_enroll_reviewer(){
	global $user;

	$user_role_ids = array_keys($user->roles);
	array_push($user_role_ids, 6);//6 = Reviewer role
	$new_roles = [];

	$enrol_reporter_role = [
		'roles' => array_combine($user_role_ids, $user_role_ids),
	];

	$saved = user_save($user, $enrol_reporter_role);

	$iUserId = $saved->uid;
	$sqlInsert1 = "INSERT INTO volunteer_optin VALUES(NULL, %d, '%s', 0, '0', '0')";
	
	$test = db_query($sqlInsert1, array($iUserId, 'mentor'));

	echo $saved->uid;
}

function workz2_enroll_booster(){
	global $user;

	$user_role_ids = array_keys($user->roles);
	array_push($user_role_ids, 26);//26 = Booster role
	$new_roles = [];

	$enrol_reporter_role = [
		'roles' => array_combine($user_role_ids, $user_role_ids),
	];

	$saved = user_save($user, $enrol_reporter_role);

	echo $saved->uid;
}

function kindness_list_edit_details(){
	global $user;

	$aKindnessReply = array();

	foreach ($_REQUEST as $sKey => $sData){
		${$sKey} = $sData;
	}

	$iHour = $iKindnessHour;
	$iMinute = $iKindnessMinute;
	
	if ($iHour == 0 && $iMinute == 0){
	//if ($iMinute == 0){
		$aKindnessReply["ERR_MSG"]="You must specify a valid time for the Duration (hours) and (minutes).";
		$aReply = array("STATUS" => "Fail", "RETURN" => $aKindnessReply["ERR_MSG"]);
	}else{
		$dDate = $iKindnessYear."-".str_pad($iKindnessMonth, 2, '0', STR_PAD_LEFT)."-".str_pad($iKindnessDay, 2, '0', STR_PAD_LEFT);
		$iDurationMins = $iKindnessHour + $iKindnessMinute;
		
		$sqlUpdate = db_query("UPDATE {kindness_submit}
					SET 
						dDatetime = '{$dDate}',
						iDuration = '{$iDurationMins}',
						sTitle = '".ucwords($sKindnessTitle)."',
						sDesc = '".ucfirst($sKindnessDesc)."',
						sToWhom = '".ucwords($sKindnessWhom)."',
						sLocation = '".ucwords($sKindnessLocation)."',
						sToWhomType = '".ucwords($sKindnessRecipientType)."'
					WHERE id = '{$sKindnessSubmitID}' AND iUserId = '{$user->uid}'");
					
		if($iKindnessType == 'resubmitkindness'){
			$sqlDelete = "DELETE FROM kindness_comment WHERE iSubmitId = '%d'";
			db_query($sqlDelete, $sKindnessSubmitID);
        }
		
		$aReply = array("STATUS" => "Success", "RETURN" => "Your Kindness Form has been updated.");
	}
	
	echo json_encode($aReply);
	exit;
}

function _kindness_load_template($sPage) {
	return file_get_contents(drupal_get_path('module', 'kindness') . '/templates/' . $sPage . '.tpl.php');
}

function _kindness_volunteer_check($iUserId, $sType){
	$sqlCheck = "SELECT vid FROM volunteer_optin WHERE uid = %d AND `type` = '%s'";
	$iVolunteerId = db_result(db_query($sqlCheck, array($iUserId, $sType)));
	
	return ($iVolunteerId > 0);
}

function kindness_mentor(){
	global $user, $sEnroll, $iHopePoints, $iAssignedHopeful, $iPendingWorkz, $iWaitingHopefuls, $iApprovedWorkz, $iRequest, $iAvailableHopefuls;
	
	/*drupal_set_breadcrumb(
		array(
			l("Home", "<front>"),
			l("Get Involved", "mystudies/getinvolved"),
			l("Volunteer", "mystudies/getinvolved/volunteer"),
			l("eMentoring", "mystudies/getinvolved/ementoring-volunteers"),
			l("Dashboard", "kindness/mentor")
		)
	);*/
	
	drupal_set_breadcrumb(
		array(
			l("Home", "mystudies/getinvolved/volunteer"),
			l("eMentoring", "mystudies/getinvolved/ementoring-volunteers")
		)
	);
	
	drupal_add_js(
		'$(document).ready(
			function(){
				//$("div.main_content h2").remove();
				//$("td").find(".jboxh").parent().remove();
			}
		);',
		"inline"
	);
	
	$iUserId = $user->uid;
	$iAvailableHopefuls =_kindness_mentor_hopeful_available();
	$iAvailableHopefuls = empty($iAvailableHopefuls) ? 0 : $iAvailableHopefuls;
	$iRequest = _kindness_mentor_request_count($iUserId);
	$iRequest = empty($iRequest) ? 0 : $iRequest;
	$iHopePoints = userpoints_get_current_points($iUserId, "all");
	$iAssignedHopeful = _kindness_mentor_hopeful_count($iUserId) * 1;
	$aAssignedHopeful = _kindness_mentor_hopeful_count($iUserId, "list");
	$iPendingWorkz = _kindness_mentor_kindness($iUserId);
	$iWaitingHopefuls = _kindness_mentor_kindness($iUserId, "hopeful");
	$iApprovedWorkz = _kindness_mentor_kindness($iUserId, "all") == null ? 0 : _kindness_mentor_kindness($iUserId, "all");
	
	$bEnrolled = _kindness_volunteer_check($iUserId, "mentor");
	$bActive = _kindness_volunteer_status($iUserId, "mentor");

	if(_mystudies_check_hopeful($iUserId) == 'notahopeful'){	
		if (!$bEnrolled && $iUserId > 1){
			$sEnroll = '<br /><br /><p>To enroll as a Reviewer, click '.l("here", "kindness/mentor/enroll").'. </p>';
		}elseif (!$bActive){
			$sEnroll = '<br /><br /><h3>You have enrolled as a Reviewer but is not cleared by the admin, yet. Until then, you cannot use this feature.</h3>';
		}
	}
	
	$sOutput = drupal_eval(_kindness_load_template("page-mentor"));
	
	if ($bEnrolled && $bActive){
		if (count($aAssignedHopeful) > 0){
			for ($x=0; $x<count($aAssignedHopeful); $x++){
				$aHopeful = $aAssignedHopeful[$x];
				$iHopefulId = $aHopeful["uid"];
				$sHopefulName = $aHopeful["name"];
				
				$sHopeful .= '<div>'.l($sHopefulName, "user/".$iHopefulId, array('attributes' => array("target" => "_blank"))).'</div>';
			}
		}else{
			$sHopeful .= '<div>No Hopefuls have been assigned to you, yet.</div>';
		}
		
		$sOutput .= '<div id="kindness_hopeful_block" style="display:none; width:240px; padding:5px; position:absolute; left:650px; top:780px; z-index:1000; background-color:#FFFFFF; border:2px solid #acacac;">
						<h3>Your assigned Hopefuls are:</h3>
						'.$sHopeful.'
					</div>';
		
		$sOutput .= drupal_eval(_kindness_load_template("page-mentor-dash"));
	}
	
	if (isset($_GET["deactivated"])){
		$sJavaScript = '$(document).ready(
							function(){
								$("#kindness_VolunteerDeactivateSuccessDialog").dialog(
									{
										modal: true,
										autoOpen: true,
										resizable: false,
										width: 450,
										buttons: {
											"Ok": function(){
												$(this).dialog("close");
											}
										}
									}
								);
							}
						)';
		
		drupal_add_js($sJavaScript, "inline");
		
		$sOutput .= '<div id="kindness_VolunteerDeactivateSuccessDialog" title="Account Deactivated">
						<p>You successfully deactivated your Volunteer- Mentor account.</p>
					</div>';
	}
	
	return $sOutput;
}

function _kindness_volunteer_status($iUserId, $sUserType){
	$sqlCheck = "SELECT bStatus FROM volunteer_optin WHERE uid = %d AND type = '%s'";
	$iStatus = db_result(db_query($sqlCheck, array($iUserId, $sUserType)));

	return ($iStatus > 0);
}

function _kindness_converttoID($user){

	$sqlGET = "SELECT uid FROM users WHERE name = '%s'";
	$iID = db_result(db_query($sqlGET, $user));

	return $iID;
}

function kindness_volunteer_enrol($sType){
	global $user;
	
	$iUserId = $user->uid;
	$sqlInsert1 = "INSERT INTO volunteer_optin VALUES(NULL, %d, '%s', 0, '0')";
	$sqlInsert2 = "INSERT INTO users_roles VALUES(%d, %d)";
	
	db_query($sqlInsert1, array($iUserId, $sType));
	db_query($sqlInsert2, array($iUserId, 6));
	
	// Point System for Volunteer Opt-in
	userpoints_userpointsapi(array("uid" => $iUserId, "tid" => 198, "description" => "User opted-in to be a Volunteer - Mentor."));
	
	drupal_goto("kindness/mentor");
}

function kindness_reviewer_request_samaritan(){
	global $user;
	
	$iUserId = $user->uid;
	$oldAnonymousReviewerStatus = _reviewer_anonymous_status($user);


	$iReqCount = $_REQUEST["kindness_mentor_hopefuls_count"];
	$review_anonymous_citation = $_REQUEST["review_anonymous_citation"] =='true' ? '1' : '0';
	$to_update_anonymous_status = $oldAnonymousReviewerStatus != $review_anonymous_citation;

	$iRequest = _kindness_mentor_request_count($iUserId);
	$aHopefuls = _kindness_mentor_hopeful_count($iUserId, 'list');
	$aHopefulsToDelete = [];

	if ($iReqCount < count($aHopefuls)) {
		$toDeleteCount = $iRequest - $iReqCount;
		for ($i=0; $i < $toDeleteCount; $i++) { 
			$aHopefulsToDelete[] = $aHopefuls[$i]['uid'];
		}
	}
	
	if ($iReqCount <= 5){
		$iHopefulToAdd = $iReqCount;
		$sqlUpdate = "UPDATE volunteer_optin
						SET iRequest = %d
						WHERE uid = %d
							AND type = 'mentor'";
		db_query($sqlUpdate, array($iHopefulToAdd, $iUserId));

		if (count($aHopefulsToDelete) > 0) {
			$sqlUpdate = "DELETE FROM volunteer_mentor_hopeful
						WHERE iHopefulId IN(%s)
							AND iMentorId = %d";
			db_query($sqlUpdate, array(implode(",", $aHopefulsToDelete), $iUserId));
		}
	} else {
		$iHopefulToAdd = 0;
	}

	if($to_update_anonymous_status){
		$sqlUpdate = "UPDATE volunteer_optin
						SET isAnonymousReviewer = %d
						WHERE uid = %d
							AND type = 'mentor'";
		db_query($sqlUpdate, array($review_anonymous_citation, $iUserId));
	}

	echo json_encode([
		'iHopefulToAdd' => $iHopefulToAdd,
		'to_update_anonymous_status' => $to_update_anonymous_status,
	]);
}

function kindness_volunteer_assign_hopeful(){
	global $user;
	
	drupal_set_breadcrumb(
		array(
			l("Home", "<front>"),
			l("Get Involved", "mystudies/getinvolved"),
			l("Volunteer", "mystudies/getinvolved/volunteer"),
			l("eMentoring", "mystudies/getinvolved/ementoring-volunteers"),
			l("Dashboard", "kindness/mentor")
		)
	);
	
	drupal_add_js('setTimeout("location=\''.base_path().'kindness/mentor\'", 5000)', "inline");
	
	$iUserId = $user->uid;
	$iReqCount = $_REQUEST["kindness_mentor_hopefuls_count"];
	$iCurrHopefulCount = _kindness_mentor_hopeful_count($iUserId);

	if ($iReqCount < $iCurrHopefulCount && $iCurrHopefulCount > 0){
		$iHopefulToRemove = $iCurrHopefulCount - $iReqCount;
		$sqlGetHopeful = "SELECT iHopefulId FROM volunteer_mentor_hopeful WHERE iMentorId = %d ORDER BY RAND() LIMIT %d";
		$oGetHopefulResult = db_query($sqlGetHopeful, array($iUserId, $iHopefulToRemove));
		$aHopefulToRemove = array();

		while ($oGetHopeful = db_fetch_object($oGetHopefulResult)){
			$aHopefulToRemove[] = $oGetHopeful->iHopefulId;
		}
		
		$sqlDelete = "DELETE FROM volunteer_mentor_hopeful WHERE iHopefulId IN (%s)";
		db_query($sqlDelete, implode(",", $aHopefulToRemove));
		
		// -- BEGIN User Hierarchy
		$sqlHierarchy = "DELETE FROM hopefuls_volunteer WHERE iHopefulId IN (%s) AND iVolunteerId = %d AND iRoleId = %d";
		db_query($sqlHierarchy, array(implode(",", $aHopefulToRemove), $iUserId, 6));
		// -- END User Hierarchy
		
		$sqlUpdate = "UPDATE volunteer_optin
						SET iRequest = IF(iRequest=0, 0, iRequest - %d)
						WHERE uid = %d
							AND type = 'mentor'";
		db_query($sqlUpdate, array($iHopefulToRemove, $iUserId));
		
		$sMessage = $iHopefulToRemove." Hopeful".(($iHopefulToRemove > 1) ? "s have":" has")." been removed from your roster.";
	}elseif ($iReqCount > $iCurrHopefulCount && $iCurrHopefulCount > 0){
		$iHopefulToAdd = $iReqCount - $iCurrHopefulCount;
		$sqlUpdate = "UPDATE volunteer_optin
						SET iRequest = iRequest + %d
						WHERE uid = %d
							AND type = 'mentor'";
		db_query($sqlUpdate, array($iHopefulToAdd, $iUserId));

		$sMessage = "You have requested ".$iHopefulToAdd." additional Hopeful(s).";
		
		/* $iHopefulToAdd = $iReqCount - $iCurrHopefulCount;
		
		$sqlGetHopeful = "SELECT uid
							FROM users_roles
							WHERE uid NOT IN (SELECT iHopefulId FROM volunteer_mentor_hopeful)
								AND rid = 9
							ORDER BY RAND()
							LIMIT %d";
		$oGetHopefulResult = db_query($sqlGetHopeful, $iHopefulToAdd);
		$iCount = 0;
		
		while ($oGetHopeful = db_fetch_object($oGetHopefulResult)){
			$iHopefulId = $oGetHopeful->uid;
			
			$sqlInsert = "INSERT INTO volunteer_mentor_hopeful VALUES(NULL, %d, %d)";
			db_query($sqlInsert, array($iUserId, $oGetHopeful->uid));
			
			$iCount++;
			
			// -- BEGIN User Hierarchy
			$sqlHierarchy = "INSERT INTO hopefuls_volunteer
							SET iHopefulId = '" . $oGetHopeful->uid . "',
								iVolunteerId = '" . $iUserId . "',
								iRoleId = '" . 6 . "'";
			db_query($sqlHierarchy);
			//db_query($sqlHierarchy, array($oGetHopeful->uid, $iUserId, 6));
			// -- END User Hierarchy
		}
		
		$sqlUpdate = "UPDATE volunteer_optin
						SET iRequest = iRequest + %d
						WHERE uid = %d
							AND type = 'mentor'";
		db_query($sqlUpdate, array($iCount, $iUserId));
		
		$sMessage = "You have been assigned ".$iCount." additional Hopeful".(($iCount > 1) ? "s":"")."."; */
	}elseif ($iReqCount == $iCurrHopefulCount && $iCurrHopefulCount > 0){
		$sMessage = 'You already have '.$iCurrHopefulCount.' Hopeful'.(($iCurrHopefulCount > 1) ? "s":"").'.';
	}else{
		$sqlUpdate = "UPDATE volunteer_optin
						SET iRequest = %d
						WHERE uid = %d
							AND type = 'mentor'";
		db_query($sqlUpdate, array($iReqCount, $iUserId));

		$sMessage = "You have requested ".$iReqCount." Hopeful(s).";
		
		/* $sqlGetHopeful = "SELECT uid
							FROM users_roles
							WHERE uid NOT IN (SELECT iHopefulId FROM volunteer_mentor_hopeful)
								AND rid = 9
							ORDER BY RAND()
							LIMIT %d";
		$oGetHopefulResult = db_query($sqlGetHopeful, $iReqCount);
		$iCount = 0;
		
		while ($oGetHopeful = db_fetch_object($oGetHopefulResult)){
			$iHopefulId = $oGetHopeful->uid;
			
			$sqlInsert = "INSERT INTO volunteer_mentor_hopeful VALUES(NULL, %d, %d)";
			db_query($sqlInsert, array($iUserId, $iHopefulId));
			
			$iCount++;
			
			// -- BEGIN User Hierarchy
			//$sqlHierarchy = "INSERT INTO hopefuls_volunteer SET 
			//					iHopefulId = '".$oGetHopeful->uid."',
			//					iVolunteerId = '".$iUserId."',
			//					iRoleId = '" . 6 . "'";
			//db_query($sqlHierarchy);
			$sqlHierarchy = "INSERT INTO hopefuls_volunteer SET 
								iHopefulId = %d,
								iVolunteerId = %d,
								iRoleId = %d";
			db_query($sqlHierarchy, array($iHopefulId, $iUserId, 6));
			// -- END User Hierarchy
		}
		
		$sqlUpdate = "UPDATE volunteer_optin
						SET iRequest = %d
						WHERE uid = %d
							AND type = 'mentor'";
		db_query($sqlUpdate, array($iCount, $iUserId));
		
		$sMessage = "You have been assigned ".$iCount." Hopeful".(($iCount > 1) ? "s":"")."."; */
	}
	
	$sOutput = '<div class="jboxh" style="width:980px"><div class="jboxhead"><h2>Pending Citation</h2></div></div>
					<div class="jbox" style="width:980px">
						<div class="jboxhead"><h2></h2></div>
						<div class="jboxbody">
							<div class="jboxcontent" style="color:#000">
								<center>'.$sMessage.'</center>
							</div>
						</div>
						<div class="jboxfoot"><p></p></div>
					</div>';
	
	return $sOutput;
}

function _kindness_mentor_hopeful_available(){
	$sqlCount = "SELECT COUNT(users_roles.uid)
					FROM users_roles
					JOIN users ON users.uid = users_roles.uid
					WHERE users_roles.rid = 23
						AND users_roles.uid NOT IN (SELECT iHopefulId FROM volunteer_mentor_hopeful)";
	$iCount = db_result(db_query($sqlCount));
	
	return $iCount;
}

function _kindness_mentor_request_count($iUserId){
	$sqlCount = "SELECT iRequest FROM volunteer_optin WHERE uid = %d";
	$iCount = db_result(db_query($sqlCount, $iUserId));
	
	return $iCount;
}

function _kindness_mentor_hopeful_count($iUserId, $sType="count"){

	$sField = ($sType == "count") ? "COUNT(A.id)":"A.iHopefulId, B.name";
	$sqlCount = "SELECT %s
				FROM volunteer_mentor_hopeful A
				INNER JOIN users B ON B.uid = A.iHopefulId
				INNER JOIN users_roles C ON C.uid = B.uid
				WHERE C.rid = 9
					AND A.iMentorId = %d
					ORDER BY A.id DESC";
	$oSQLResult = db_query($sqlCount, array($sField, $iUserId));
	
	if ($sType == "count"){
		$iCount = db_result($oSQLResult);
        
		return $iCount;
	}elseif ($sType == "list"){
		$aAssignedHopeful = array();
		while ($oSQL = db_fetch_object($oSQLResult)){
			$aAssignedHopeful[] = array("uid" => $oSQL->iHopefulId, "name" => $oSQL->name);
		}
		
		return $aAssignedHopeful;
	}
}

function _kindness_hopeful_mentor($iUserId, $sType="id"){
	$sqlMentor = "SELECT A.iMentorId, B.name
				FROM volunteer_mentor_hopeful A
				INNER JOIN users B ON B.uid = A.iMentorId
				WHERE iHopefulId = %d";
	
	/*$sqlMentor = "SELECT A.iVolunteerId, B.name
				FROM hopefuls_volunteer A
				INNER JOIN users B ON B.uid = A.iVolunteerId
				WHERE iHopefulId = %d AND iRoleId = 6";*/
				
	$oMentorResult = db_query($sqlMentor, $iUserId);
	$oMentor = db_fetch_object($oMentorResult);
	
	$iMentorId = $oMentor->iMentorId;
	$sMentorName = $oMentor->name;
	
	return ($sType == "id") ? $iMentorId:$sMentorName;
}

function _kindness_mentor_hopeful($iUserId){
	global $user;

	$sqlSelect = "SELECT A.iHopefulId
					FROM volunteer_mentor_hopeful A
					INNER JOIN users B ON B.uid = A.iHopefulId
					WHERE A.iMentorId = %d";
	/*
	$sqlSelect = "SELECT A.iHopefulId
					FROM hopefuls_volunteer A
					INNER JOIN users B ON B.uid = A.iHopefulId
					WHERE A.iVolunteerId = %d AND iRoleId = 6";*/
	
	$oSelectResult = db_query($sqlSelect, $iUserId);
	$aHopefuls = array();
	
	while ($oSelect = db_fetch_object($oSelectResult)){
		$aHopefuls[] = $oSelect->iHopefulId;
	}

	//For Anonymous
	$reviewer_anonymous_status = _reviewer_anonymous_status($user);

	if ($reviewer_anonymous_status) {
		$aHopefuls[] = 0;
	}
	
	return $aHopefuls;
}

function _kindness_mentor_by_hopeful($iUserId){
	global $user;

	$sqlSelect = "SELECT A.iMentorId, B.name, B.mail
					FROM volunteer_mentor_hopeful A
					INNER JOIN users B ON B.uid = A.iMentorId
					WHERE A.iHopefulId = %d";
	
	$oSelectResult = db_query($sqlSelect, $iUserId);
	$mentors = array();
	
	while ($oSelect = db_fetch_object($oSelectResult)){
		$mentors[] = $oSelect;
	}
	
	return $mentors;
}

function _kindness_anonymous_reviewers(){
	global $user;

	$sqlCheck = "SELECT A.uid, B.name, B.mail 
					FROM volunteer_optin A 
					INNER JOIN users B ON B.uid = A.uid
					WHERE A.isAnonymousReviewer = 1 AND 
					A.type = 'mentor'";
	
	$oSelectResult = db_query($sqlCheck);
	$mentors = array();
	
	while ($oSelect = db_fetch_object($oSelectResult)){
		$mentors[] = $oSelect;
	}
	
	return $mentors;
}

function _kindness_mentor_kindness($iUserId, $sType="kindness"){
	global $user;
	
	$iMentorId = $user->uid;
	$aHopefuls = _kindness_mentor_hopeful($iMentorId);

	if (count($aHopefuls) > 0){
		switch ($sType){
			case "kindness":
				$sqlMentor = "SELECT id FROM kindness_submit 
					LEFT JOIN users B ON B.uid = kindness_submit.beneficiary_id
					LEFT JOIN users beneficiary ON beneficiary.uid = kindness_submit.beneficiary_id
					LEFT JOIN users reporter ON reporter.uid = kindness_submit.reporter_id
					WHERE 
					(B.uid IS NOT NULL OR is_benefactor_anonymous = 1) 
					AND (beneficiary.uid IS NOT NULL OR is_beneficiary_anonymous = 1)
					AND (reporter.uid IS NOT NULL)
					AND iUserId IN (%s) 
					AND bApprovedMentor = '0'";
				$oMentorResult = db_query($sqlMentor, implode(",", $aHopefuls));
				$iCount = 0;
				
				while ($oMentor = db_fetch_object($oMentorResult)){
					$sqlCheck = "SELECT COUNT(id) FROM kindness_comment WHERE bApproved = '0' AND iSubmitId = %d AND iUserId = %d";
					$iCheckCount = db_result(db_query($sqlCheck, $oMentor->id, $iMentorId));
					
					if ($iCheckCount == 0) $iCount++;
				}
				
				break;
			case "hopeful":
				$sqlMentor = "SELECT id, iUserId FROM kindness_submit WHERE iUserId IN (%s) AND bApprovedMentor = '0'";
				$oMentorResult = db_query($sqlMentor, implode(",", $aHopefuls));
				$aHopeful = array();
				
				while ($oMentor = db_fetch_object($oMentorResult)){
					$sqlCheck = "SELECT COUNT(id) FROM kindness_comment WHERE iSubmitId = %d AND iUserId = %d";
					$iCheckCount = db_result(db_query($sqlCheck, $oMentor->id, $iMentorId));
					
					if ($iCheckCount == 0) $aHopeful[] = $oMentor->iUserId;
				}
				
				$iCount = count(array_unique($aHopeful));
				
				break;
			case "all":
				$sqlMentor = "SELECT COUNT(A.id)
								FROM kindness_submit A
								INNER JOIN kindness_comment B ON B.iSubmitId = A.id 
								WHERE A.iUserId IN (%s)
									AND B.iUserId = %d";
				$iCount = db_result(db_query($sqlMentor, array(implode(",", $aHopefuls), $iMentorId)));
				
				break;
		}

		return $iCount;
	}
	
	return 0;
}

function kindness_mentor_pending(){
	global $user;
	global $base_url;
	
	drupal_set_breadcrumb(
		array(
			l("Home", "<front>"),
			l("Get Involved", "mystudies/getinvolved"),
			l("Volunteer", "mystudies/getinvolved/volunteer"),
			l("eMentoring", "mystudies/getinvolved/ementoring-volunteers"),
			l("Dashboard", "kindness/mentor"),
			l("Pending", "kindness/mentor/pending")
		)
	);

	/*
	drupal_add_js(
		'$(document).ready(
			function(){
				//$("div.main_content h2").remove();
				//$("td").find(".jboxh").parent().remove();
			}
		);',
		"inline"
	);
	*/

	$iUserId = $user->uid;
	$aHopefuls = _kindness_mentor_hopeful($user->uid);
	$sqlKindness = "SELECT A.id, A.iUserId, B.uid, B.name, REPLACE_THIS, A.iDuration, A.sTitle, A.sDesc, A.sToWhom, A.sLocation, A.sToWhomType
					FROM kindness_submit A
					LEFT JOIN users B ON B.uid = A.iUserId
					WHERE A.bApprovedMentor = '0'
						AND A.iUserId IN (%s)
						AND
						A.reporter_id IS NOT NULL AND 
						(A.iUserId IS NOT NULL OR A.is_benefactor_anonymous = 1) AND
						(A.beneficiary_id IS NOT NULL OR A.is_beneficiary_anonymous = 1)
					ORDER BY B.name ASC, A.dDatetime DESC";
	$sqlCount = "SELECT COUNT(id) FROM kindness_submit A LEFT JOIN users B ON B.uid = A.iUserId WHERE A.bApprovedMentor = '1' AND A.iUserId IN (%s) AND (A.iUserId IS NOT NULL OR A.is_benefactor_anonymous = 1) AND
						(A.beneficiary_id IS NOT NULL OR A.is_beneficiary_anonymous = 1)";
	
	$sqlKindness = sprintf($sqlKindness, implode(",", $aHopefuls));
	$sqlCount = sprintf($sqlCount, implode(",", $aHopefuls));
	
	$sqlKindness = str_replace("REPLACE_THIS", "DATE_FORMAT(A.dDatetime, '%M %e, %Y') AS sDate", $sqlKindness);
	$oKindnessResult = pager_query($sqlKindness, KINDNESS_REC_PER_PAGE, 0, $sqlCount);
	
	$sOutput = "";
	$sPrevName = "";
	$iKindnessCount = 0;

	$sTableHeader = '<div class="divider"></div>
					<div id="cbtop">
						<div class="cbb">
							<div class="left-border">
								<div class="right-border">
								<form action="'.$base_url.'/kindness/mentor/pending/process" method="post" onsubmit="" name="KindnessPendingForm" id="KindnessPendingForm">';

	$sTableFooter = '				</form>
								</div>
							</div>
						</div>
					</div>';
	

	while ($oKindness = db_fetch_object($oKindnessResult)){

		$iId = $oKindness->id;
		
		$sqlCheck = "SELECT COUNT(id) FROM kindness_comment WHERE bApproved = '0' AND iSubmitId = %d";
		$iCheckCount = db_result(db_query($sqlCheck, $iId));
		
		if ($iCheckCount > 0){
			continue;
		}else{
			$iKindnessCount++;
		}
		
		$iDuration = $oKindness->iDuration/60;
		$iTimeHour = intval($iDuration);
		$iTimeMin = str_pad(round(($iDuration - floor($iDuration)) * 60), 2, '0', STR_PAD_LEFT);
		$sDuration = $iTimeHour.":".$iTimeMin;
		
		$sHopeful = $oKindness->name;
		$iHopefulId = $oKindness->uid;
		$sTitle = ucwords(stripslashes($oKindness->sTitle));
		
		if ($sPrevName != $sHopeful){
			$sOutput .= '<div class="jboxh" style="width:980px;'.(($sPrevName != "") ? ' padding-top:5px;':'').'">
							<div class="jboxhead">
								<h2>Pending Citation of <em>'.$sHopeful.'</em></h2>
							</div>
						</div>';
		}else{
			if ($iKindnessCount > 0) $sOutput .= '<hr class="divider" style="width:980px;margin:5px 0 5px 0" />';
		}
		
		$sIdUid = $iId.'_'.$oKindness->iUserId;
		
		$sOutput .= '<div class="jbox" style="width:980px">
							<div class="jboxhead"><h2></h2></div>
							<div class="jboxbody">
								<div class="jboxcontent" style="color:#000">
									<table>
										<tr>
											<td style="padding:3px 10px 0 0;"><input type="checkbox" id="id_uid" name="id_uid" value="'.$sIdUid.'" /></td>
											<td>
												<input type="hidden" id="'.$sIdUid.'_duration" name="'.$sIdUid.'_duration" value="'.$oKindness->iDuration.'" />
												<table>
													<tr>
														<td colspan="3"><b>Title</b>: '.$sTitle.'</td>
													</tr>
													<tr>
														<td style="width:300px;"><b>Date Submitted</b>: '.$oKindness->sDate.'</td>
														<td style="width:415px;"><b>Beneficiary Name</b>: '.stripslashes($oKindness->sToWhom).'</td>
														<td rowspan="2"><a href="/messages/new/'.$iHopefulId.'/'.urlencode('Message regarding '.$sTitle).'" target="_blank"><span><img src="/themes/theme2010/images/btn_blue_kindness_message.gif"></span></a></td>
													</tr>
													<tr>
														<td><b>Duration</b>: '.$iTimeHour.' Hour'.(($iTimeHour > 1) ? 's':'').' and '.$iTimeMin.' Minute'.(($iTimeMin > 1) ? 's':'').'</td>
														<td><b>Beneficiary Relationship</b>: '.$oKindness->sToWhomType.'</td>
													</tr>
													<tr>
														<td colspan="3" style="padding-top:10px;">
															<b>Description</b>:<br/>'.stripslashes($oKindness->sDesc).'
														</td>
													</tr>
												</table>
											</td>
										</tr>
									</table>
								</div>
							</div>
							<div class="jboxfoot"><p></p></div>
						</div>';
		
		$sPrevName = $oKindness->name;
	}
	
	if ($iKindnessCount > 0){
		$sOutput .= '<div style="text-align:right;padding:5px 30px 0 0;">
						<span>'.theme("pager", null, KINDNESS_REC_PER_PAGE).'</span>
					
						<button type="button" class="light-button-blue-gradient" id="kindness_btn_approve" style="min-width:100px" name="kindness_btn_approve" value="approve">Approve</button>
						<button type="button" class="light-button-blue-gradient" id="kindness_btn_approve" style="min-width:100px" name="kindness_btn_approve" value="disapprove">Disapprove</button>
						<button type="button" class="danger-button-gradient" id="delete_kindness" style="min-width:100px" name="delete_kindness" value="delete">Delete</button>
					</div>
					
					<div id="kindness_mentor_comment" style="display:none; width:350px; border: 5px solid #173102; padding:5px; background-color:#E2E2D3;">
						<form action="'.$base_url.'/kindness/mentor/pending/process" method="post">
							<input type="hidden" id="iItemId" name="iItemId" value="" />
							<input type="hidden" id="iChildId" name="iChildId" value="" />
							<input type="hidden" id="iAdultId" name="iAdultId" value="'.$iUserId.'" />
							<input type="hidden" id="iDuration" name="iDuration" value="" />
							<input type="hidden" id="bApprove" name="bApprove" value="" />
							
							Comment for <span id="kindness_mentor_comment_type"></span> the selected Citation(s):<br />
							<textarea id="sComment" name="sComment" style="width:350px; height:100px;"></textarea><br />
							<div align="right" style="padding-top:5px;">
								<input type="button" name="kindness_button_Cancel" id="kindness_button_Cancel" value="Cancel" class="form-submit" />
								<input type="submit" name="kindness_button_Submit" id="kindness_button_Submit" value="Submit" class="form-submit" />
							</div>
						</form>
					</div>';
	}else{
		$sOutput .= '<div class="jboxh" style="width:980px"><div class="jboxhead"><h2>Pending Citation</h2></div></div>
					<div class="jbox" style="width:980px">
						<div class="jboxhead"><h2></h2></div>
						<div class="jboxbody">
							<div class="jboxcontent" style="color:#000">
								<center>No pending deeds to approve, yet.</center>
							</div>
						</div>
						<div class="jboxfoot"><p></p></div>
					</div>';
	}

	$sPreHTML = drupal_eval(_kindness_load_template("page-mentor"));
	$sOutput = $sPreHTML.$sTableHeader.$sOutput.$sTableFooter;
	return $sOutput;
}

function kindess_callback_delete(){
	$workz_to_delete = $_REQUEST['workz_to_delete'];

	foreach($workz_to_delete as $workz_id){
		$workz_id = explode('_', $workz_id)[0];

		$sqlDeleteKindness = "DELETE FROM kindness_submit WHERE id = '%d'";
		db_query($sqlDeleteKindness, $workz_id);

		$sqlDeleteStatement = "DELETE FROM kindness_statement WHERE iRefId = '%d'";
		db_query($sqlDeleteStatement, $workz_id);
		
		$sqlDeleteComment = "DELETE FROM kindness_comment WHERE iSubmitId = '%d'";
		db_query($sqlDeleteComment, $workz_id);
	}
}

function kindness_reviewer_assigned_samaritan()
{
	global $user;

	$iUserId = $user->uid;
	$aAssignedHopeful = _kindness_mentor_hopeful_count($iUserId, "list");

	$samaritans = [];
	foreach ($aAssignedHopeful as $key => $samaritan) {
		$user_info = user_load(['uid' => $samaritan['uid']]);

		array_push($samaritans, [
			'uid' => $user_info->uid,
			'grade' => $user_info->profile_grade,
			'school' => $user_info->profile_school,
			'email' => $user_info->mail,
			'name' => $user_info->name,
		]);
	}

	echo json_encode($samaritans);exit;
}

function kindness_reviewer_dashboard_status()
{
	global $user;

	$iUserId = $user->uid;
	$iAvailableHopefuls =_kindness_mentor_hopeful_available();
	$iAvailableHopefuls = empty($iAvailableHopefuls) ? 0 : $iAvailableHopefuls;
	$iRequest = _kindness_mentor_request_count($iUserId);
	$iRequest = empty($iRequest) ? 0 : $iRequest;
	$iHopePoints = userpoints_get_current_points($iUserId, "all");
	$iAssignedHopeful = _kindness_mentor_hopeful_count($iUserId) * 1;
	$aAssignedHopeful = _kindness_mentor_hopeful_count($iUserId, "list");
	$iPendingWorkz = _kindness_mentor_kindness($iUserId);
	$iWaitingHopefuls = _kindness_mentor_kindness($iUserId, "hopeful");

	$aHopefuls = _kindness_mentor_hopeful($iUserId);
	$approveWorkzCount	= "SELECT COUNT(DISTINCT A.id) as total_approved
					FROM kindness_submit A
					LEFT JOIN users B ON B.uid = A.iUserId
					INNER JOIN kindness_comment C ON C.iSubmitId = A.id
					WHERE A.bApprovedMentor = '1'
						AND A.iUserId IN (%s)
						AND C.iUserId = %d
						AND C.bApproved = '1'
						AND (A.iUserId IS NOT NULL OR A.is_benefactor_anonymous = 1) AND
						(A.beneficiary_id IS NOT NULL OR A.is_beneficiary_anonymous = 1)
						ORDER BY B.name ASC, A.dDatetime DESC";
	$approveWorkzCount = db_query(sprintf($approveWorkzCount, implode(",", $aHopefuls), $iUserId));
	$iApprovedWorkz = db_fetch_object($approveWorkzCount)->total_approved;

	$disApproveWorkzCount = "SELECT COUNT(A.id) as total_disapproved
				FROM kindness_submit A
				LEFT JOIN users B ON B.uid = A.iUserId
				INNER JOIN kindness_comment C ON C.iSubmitId = A.id
				WHERE A.bApprovedMentor = '0'
					AND A.iUserId IN (%s)
					AND C.iUserId = %d
					AND C.bApproved = '0'
					AND (A.iUserId IS NOT NULL OR A.is_benefactor_anonymous = 1) AND
					(A.beneficiary_id IS NOT NULL OR A.is_beneficiary_anonymous = 1)
					ORDER BY B.name ASC, A.dDatetime DESC";
	$disApproveWorkzCount = db_query(sprintf($disApproveWorkzCount, implode(",", $aHopefuls), $iUserId));
	$iDisApprovedWorkz = db_fetch_object($disApproveWorkzCount)->total_disapproved;

	echo json_encode([
		'iAvailableHopefuls' => $iAvailableHopefuls,
		'iRequest' => $iRequest,
		'iHopePoints' => $iHopePoints,
		'iAssignedHopeful' => $iAssignedHopeful,
		'aAssignedHopeful' => $aAssignedHopeful,
		'iPendingWorkz' => $iPendingWorkz,
		'iWaitingHopefuls' => $iWaitingHopefuls,
		'iApprovedWorkz' => is_null($iApprovedWorkz) ? 0 : $iApprovedWorkz,
		'iDisApprovedWorkz' => is_null($iDisApprovedWorkz) ? 0 : $iDisApprovedWorkz,
	]);
}

function kindness_reviewer_process()
{
	global $user;

	$workzs = $_REQUEST['workz'];
	$approve = $_REQUEST['approve'];
	$comment = $_REQUEST['comment'];

	$sqlKindness = "SELECT A.*,
					B.mail as samaritan_mail, B.name as samaritan_name, 
					C.name as beneficiary_name, C.mail as beneficiary_mail, 
					D.name as reporter_name, D.mail as reporter_mail 
					FROM kindness_submit A
					LEFT JOIN users B ON B.uid = A.iUserId
					LEFT JOIN users C ON C.uid = A.beneficiary_id
					LEFT JOIN users D ON D.uid = A.reporter_id
					WHERE id = %d";

	$sqlUpdate = "UPDATE kindness_submit SET bApprovedMentor = '%s' WHERE id = %d";
	$sqlInsert1 = "INSERT INTO kindness_comment VALUES(NULL, %d, %d, '%s', '%s', '%s')";
	$sqlInsert2 = "INSERT INTO kindness_statement VALUES(NULL, %d, %d, %d, '%s')";
	$sqlInsertCertificate = "INSERT INTO kindness_certificates VALUES(NULL, %d, %d, '%s')";

	foreach ($workzs as $key => $workz) {
		$oKindness = db_fetch_object(db_query($sqlKindness, $workz));

		_add_reviewer_gold($user->uid);

		db_query($sqlUpdate, array($approve, $oKindness->id));
		db_query($sqlInsert1, 
			array(
				$oKindness->id, 
				$user->uid, 
				$comment, 
				$approve, date("Y-m-d H:i:s")
			)
		);

		if ($approve == '1') {
			_add_gold(
				$oKindness->iUserId, 
				$oKindness->iDuration, 
				$oKindness->workz_type, 
				$oKindness->valor_act_type, 
				$oKindness->kindness_act_type
			);

			_add_reporter_gold($oKindness->reporter_id, $oKindness->workz_type);

			db_query($sqlInsert2, 
				array(
					$oKindness->id, 
					$oKindness->iUserId, 
					$oKindness->iDuration, 
					date("Y-m-d H:i:s")
				)
			);

			db_query($sqlInsertCertificate, 
				array(
					$oKindness->id, 
					$oKindness->iUserId, 
					date("Y-m-d H:i:s")
				)
			);

			$certificate_id = db_last_insert_id('kindness_certificates', 'id');

			sendCustomMailer($oKindness->samaritan_mail, 'Samaritan Citation Notification', 'Hi, '. $oKindness->samaritan_name .',<br>
				<br><br>
				Your samaritan workz is now approved! 
				<br /><br />
				You may check your certificate here: 
				<a href="https://www.samaritancitation.com/kindness/certificate/'. $certificate_id .'">https://www.samaritancitation.com/kindness/certificate/'. $certificate_id .'</a>
				<br /><br />
				Visit us at <a href="https://www.samaritancitation.com/">https://www.samaritancitation.com/</a> and see your reward!');

			sendCustomMailer($oKindness->beneficiary_mail, 'Samaritan Citation Notification', 'Hi, '. $oKindness->beneficiary_name .',<br>
				<br><br>
				The samaritan workz that you\'ve been part of is now approved! Visit us at <a href="https://www.samaritancitation.com/">https://www.samaritancitation.com/</a> and see your reward!');

			sendCustomMailer($oKindness->reporter_mail, 'Samaritan Citation Notification', 'Hi, '. $oKindness->reporter_name .',<br>
				<br><br>
				The samaritan workz you reported is now approved! Visit us at <a href="https://www.samaritancitation.com/">https://www.samaritancitation.com/</a> and see your reward!');

			sendCustomMailer($user->mail, 'Samaritan Citation Notification', 'Hi, '. $user->name .',<br>
				<br><br>
				You successfully approved a samaritan workz report. Visit us at <a href="https://www.samaritancitation.com/">https://www.samaritancitation.com/</a> and see your reward!');
		}else{
			sendCustomMailer($oKindness->samaritan_mail, 'Samaritan Citation Notification', 'Hi, '. $oKindness->samaritan_name .',<br>
				<br><br>
				Sorry to inform you that your samaritan workz was dissaproved for the following reason:
				<br><br>' . $comment . 
				'<br><br>
				Please don\'t stop doing samaritan workz!
				');

			sendCustomMailer($oKindness->beneficiary_mail, 'Samaritan Citation Notification', 'Hi, '. $oKindness->beneficiary_name .',<br>
				<br><br>
				Sorry to inform you that the samaritan workz which you\'ve been part of was dissaproved for the following reason:
				<br><br>' . $comment);

			sendCustomMailer($oKindness->reporter_mail, 'Samaritan Citation Notification', 'Hi, '. $oKindness->reporter_name .',<br>
				<br><br>
				Sorry to inform you that the samaritan workz which you\'ve been part of was dissaproved for the following reason:
				<br><br>' . $comment.
				'<br><br>
				Keep reporting samaritan workz!');

			sendCustomMailer($user->mail, 'Samaritan Citation Notification', 'Hi, '. $user->name .',<br>
				<br><br>
				You successfully disapproved a samaritan report.');
		}
	}
}

function kindness_boost()
{
	global $user;

	$workzs = $_REQUEST['workz'];
	$comment = $_REQUEST['comment'];

	$sqlKindness = "SELECT *
					FROM kindness_submit
					WHERE id = %d";

	$sqlInsert1 = "INSERT INTO booster_comments VALUES(NULL, %d, %d, '%s', '%s')";
	foreach ($workzs as $key => $workz) {

		$sqlCheckBoosted = 'SELECT COUNT(1) FROM booster_comments WHERE iSubmitId =  %d AND iUserId = %d';

		$checkBoosted = db_result(db_query($sqlCheckBoosted, $workz, $user->uid));

		if ($checkBoosted == 0) {
			$comment = db_query($sqlInsert1, 
				array(
					$workz, 
					$user->uid, 
					$comment, 
					date("Y-m-d H:i:s")
				)
			);

			_add_booster_gold($user->uid);
		}
	}
}

function kindness_mentor_pending_process(){

	global $user;
	global $base_url;
	echo '<pre>';
	echo json_encode($_REQUEST);exit;
	foreach ($_REQUEST as $sKey => $sData) {
		${$sKey} = $sData;
	}

	$sBasePath = $base_url;

	drupal_add_js('setTimeout("location=\''.$sBasePath.'/kindness/mentor/pending\'", 5000)', "inline");
	
	drupal_set_breadcrumb(
		array(
			l("Home", "<front>"),
			l("Get Involved", "mystudies/getinvolved"),
			l("Volunteer", "mystudies/getinvolved/volunteer"),
			l("eMentoring", "mystudies/getinvolved/ementoring-volunteers"),
			l("Dashboard", "kindness/mentor"),
			l("Pending", "kindness/mentor/pending")
		)
	);
	
	$aItemId = explode(",", $iItemId);

	$aChildId = explode(",", $iChildId);
	$aDuration = explode(",", $iDuration);

	$sqlKindness = "SELECT *
					FROM kindness_submit
					WHERE id = %d";

	$sqlUpdate = "UPDATE kindness_submit SET bApprovedMentor = '%s' WHERE id = %d";
	$sqlInsert1 = "INSERT INTO kindness_comment VALUES(NULL, %d, %d, '%s', '%s', '%s')";
	$sqlInsert2 = "INSERT INTO kindness_statement VALUES(NULL, %d, %d, %d, '%s')";
	
	for ($i=0; $i<count($aItemId); $i++){
		if ($aItemId[$i] > 0){

			$oKindness = db_fetch_object(db_query($sqlKindness, $aItemId[0]));

			_add_gold(
				$oKindness->iUserId, 
				$oKindness->iDuration, 
				$oKindness->workz_type, 
				$oKindness->valor_act_type, 
				$oKindness->kindness_act_type
			);

			db_query($sqlUpdate, array($bApprove, $aItemId[$i]));
			db_query($sqlInsert1, array($aItemId[$i], $user->uid, $sComment, $bApprove, date("Y-m-d H:i:s")));
		}
		
		if ($bApprove == 1) db_query($sqlInsert2, array($aItemId[$i], $aChildId[$i], $aDuration[$i], date("Y-m-d H:i:s")));
	}
	
	$sOutput .= '<div class="jboxh" style="width:980px"><div class="jboxhead"><h2>Pending Citation</h2></div></div>
					<div class="jbox" style="width:980px">
						<div class="jboxhead"><h2></h2></div>
						<div class="jboxbody">
							<div class="jboxcontent" style="color:#000">
								<center>The selected Citation have been '.(($bApprove == 1) ? "approved":"disapproved").'.</center>
							</div>
						</div>
						<div class="jboxfoot"><p></p></div>
					</div>';
	
	return $sOutput;
	
	//drupal_goto("kindness/mentor/pending");
}

function kindness_mentor_approved(){
	global $user;
	
	drupal_set_breadcrumb(
		array(
			l("Home", "<front>"),
			l("Get Involved", "mystudies/getinvolved"),
			l("Volunteer", "mystudies/getinvolved/volunteer"),
			l("eMentoring", "mystudies/getinvolved/ementoring-volunteers"),
			l("Dashboard", "kindness/mentor"),
			l("Pending", "kindness/mentor/pending")
		)
	);
	
	drupal_add_js(
		'$(document).ready(
			function(){
				//$("div.main_content h2").remove();
				//$("td").find(".jboxh").parent().remove();
			}
		);',
		"inline"
	);
	
	$iUserId = $user->uid;
	$aHopefuls = _kindness_mentor_hopeful($iUserId);
	$sqlKindness = "SELECT DISTINCT A.id, A.iUserId, B.name, REPLACE_THIS, A.iDuration, A.sTitle, A.sDesc, A.sToWhom, A.sLocation, A.sToWhomType, A.dDatetime
					FROM kindness_submit A
					LEFT JOIN users B ON B.uid = A.iUserId
					INNER JOIN kindness_comment C ON C.iSubmitId = A.id
					WHERE A.bApprovedMentor = '1'
						AND A.iUserId IN (%s)
						AND C.iUserId = %d
						AND C.bApproved = '1'
						AND
					A.reporter_id IS NOT NULL AND
					(A.iUserId IS NOT NULL OR A.is_benefactor_anonymous = 1) AND
					(A.beneficiary_id IS NOT NULL OR A.is_beneficiary_anonymous = 1)
					ORDER BY B.name ASC, A.dDatetime DESC";
	$sqlCount	= "SELECT COUNT(DISTINCT A.id) 
					FROM kindness_submit A
					LEFT JOIN users B ON B.uid = A.iUserId
					INNER JOIN kindness_comment C ON C.iSubmitId = A.id
					WHERE A.bApprovedMentor = '1'
						AND A.iUserId IN (%s)
						AND C.iUserId = %d
						AND C.bApproved = '1'
						AND
						A.reporter_id IS NOT NULL AND
						(A.iUserId IS NOT NULL OR A.is_benefactor_anonymous = 1) AND
						(A.beneficiary_id IS NOT NULL OR A.is_beneficiary_anonymous = 1)";
	
	$sqlKindness = sprintf($sqlKindness, implode(",", $aHopefuls), $iUserId);
	$sqlCount = sprintf($sqlCount, implode(",", $aHopefuls), $iUserId);
	
	$sqlKindness = str_replace("REPLACE_THIS", "DATE_FORMAT(A.dDatetime, '%M %e, %Y') AS sDate", $sqlKindness);
	$oKindnessResult = pager_query($sqlKindness, KINDNESS_REC_PER_PAGE, 0, $sqlCount);
	
	$sOutput = "";
	$sPrevName = "";
	$iKindnessCount = 0;
	
	$sTableHeader = '<div class="divider"></div>
					<div id="cbtop">
						<div class="cbb">
							<div class="left-border">
								<div class="right-border">';
	
	$sTableFooter = '			</div>
							</div>
						</div>
					</div>';
	
	while ($oKindness = db_fetch_object($oKindnessResult)){
		$iKindnessCount++;
		
		$iId = $oKindness->id;
		$iDuration = $oKindness->iDuration/60;
		$iTimeHour = intval($iDuration);
		$iTimeMin = round(($iDuration - floor($iDuration)) * 60);
		$sDuration = $iTimeHour.":".$iTimeMin;
		
		$sHopeful = $oKindness->name;
		
		if ($sPrevName != $sHopeful){
			$sOutput .= '<div class="jboxh" style="width:980px;'.(($sPrevName != "") ? ' padding-top:5px;':'').'"><div class="jboxhead"><h2>Approved Citation of <em>'.$sHopeful.'</em></h2></div></div>';
		}else{
			if ($iKindnessCount > 0) $sOutput .= '<hr class="divider" style="width:980px;margin:5px 0 5px 0" />';
		}
		
		$sIdUid = $iId.'_'.$oKindness->iUserId;
		$sTitle = ucwords(stripslashes($oKindness->sTitle));
		
		$sOutput .= '<div class="jbox" style="width:980px">
							<div class="jboxhead"><h2></h2></div>
							<div class="jboxbody">
								<div class="jboxcontent" style="color:#000">
									<table>
										<tr>
											<td style="padding:3px 10px 0 0;"><input type="checkbox" id="id_uid" name="id_uid" value="'.$sIdUid.'" /></td>
											<td>
												<input type="hidden" id="'.$sIdUid.'_duration" name="'.$sIdUid.'_duration" value="'.$oKindness->iDuration.'" />
												
												<div id="kindness_workz_comments_container_'.$iId.'" title="Comments for <em>'.$sTitle.'</em>">
													<div id="kindness_workz_comments_data_'.$iId.'">Loading...</div>
												</div>
												
												<table>
													<tr>
														<td colspan="3"><b>Title</b>: '.$sTitle.'</td>
													</tr>
													<tr>
														<td style="width:300px;"><b>Date Submitted</b>: '.$oKindness->sDate.'</td>
														<td style="width:415px;"><b>Beneficiary Name</b>: '.stripslashes($oKindness->sToWhom).'</td>
														<td rowspan="2"><img id="kindness_workz_comments_'.$iId.'" style="cursor:pointer;" src="/themes/theme2010/images/btn_blue_kindness_comments.gif" border="0" /></td>
													</tr>
													<tr>
														<td><b>Duration</b>: '.$iTimeHour.' Hour'.(($iTimeHour > 1) ? 's':'').' and '.$iTimeMin.' Minute'.(($iTimeMin > 1) ? 's':'').'</td>
														<td><b>Beneficiary Relationship</b>: '.$oKindness->sToWhomType.'</td>
													</tr>
													<tr>
														<td colspan="3" style="padding-top:10px;">
															<b>Description</b>:<br/>'.stripslashes($oKindness->sDesc).'
														</td>
													</tr>
												</table>
											</td>
										</tr>
									</table>
								</div>
							</div>
							<div class="jboxfoot"><p></p></div>
						</div>';
		
		$sPrevName = $oKindness->name;
	}

	if ($iKindnessCount > 0){
		$sOutput .= '<div style="text-align:right;padding:5px 30px 0 0;">
						<button type="button" class="danger-button-gradient" id="delete_kindness" style="min-width:100px" name="delete_kindness" value="delete">Delete</button>
					</div>';
	} else {
		$sOutput .= '<div class="jboxh" style="width:980px"><div class="jboxhead"><h2>Approved Citation</h2></div></div>
					<div class="jbox" style="width:980px">
						<div class="jboxhead"><h2></h2></div>
						<div class="jboxbody">
							<div class="jboxcontent" style="color:#000">
								<center>You have no approved Citation to display, yet.</center>
							</div>
						</div>
						<div class="jboxfoot"><p></p></div>
					</div>';
	}
	
	$sPreHTML = drupal_eval(_kindness_load_template("page-mentor"));
	$sOutput = $sPreHTML.$sTableHeader.$sOutput.$sTableFooter;
	
	return $sOutput;
}

function kindness_mentor_disapproved(){
	global $user;
	
	drupal_set_breadcrumb(
		array(
			l("Home", "<front>"),
			l("Get Involved", "mystudies/getinvolved"),
			l("Volunteer", "mystudies/getinvolved/volunteer"),
			l("eMentoring", "mystudies/getinvolved/ementoring-volunteers"),
			l("Dashboard", "kindness/mentor"),
			l("Pending", "kindness/mentor/pending")
		)
	);
	
	drupal_add_js(
		'$(document).ready(
			function(){
				//$("div.main_content h2").remove();
				//$("td").find(".jboxh").parent().remove();
			}
		);',
		"inline"
	);
	
	$iUserId = $user->uid;
	$aHopefuls = _kindness_mentor_hopeful($iUserId);
	$sqlKindness = "SELECT DISTINCT A.id, A.iUserId, B.name, REPLACE_THIS, A.iDuration, A.sTitle, A.sDesc, A.sToWhom, A.sLocation, A.sToWhomType, A.dDatetime
					FROM kindness_submit A
					LEFT JOIN users B ON B.uid = A.iUserId
					INNER JOIN kindness_comment C ON C.iSubmitId = A.id
					WHERE A.bApprovedMentor = '0'
						AND A.iUserId IN (%s)
						AND C.iUserId = %d
						AND C.bApproved = '0'
						AND
						A.reporter_id IS NOT NULL AND
						(A.iUserId IS NOT NULL OR A.is_benefactor_anonymous = 1) AND
						(A.beneficiary_id IS NOT NULL OR A.is_beneficiary_anonymous = 1)
						ORDER BY B.name ASC, A.dDatetime DESC";
	$sqlCount = "SELECT COUNT(A.id)
				FROM kindness_submit A
				LEFT JOIN users B ON B.uid = A.iUserId
				INNER JOIN kindness_comment C ON C.iSubmitId = A.id
				WHERE A.bApprovedMentor = '0'
					AND A.iUserId IN (%s)
					AND C.iUserId = %d
					AND C.bApproved = '0'
					AND
						A.reporter_id IS NOT NULL AND
						(A.iUserId IS NOT NULL OR A.is_benefactor_anonymous = 1) AND
						(A.beneficiary_id IS NOT NULL OR A.is_beneficiary_anonymous = 1)";
	
	$sqlKindness = sprintf($sqlKindness, implode(",", $aHopefuls), $iUserId);
	$sqlCount = sprintf($sqlCount, implode(",", $aHopefuls), $iUserId);
	
	$sqlKindness = str_replace("REPLACE_THIS", "DATE_FORMAT(A.dDatetime, '%M %e, %Y') AS sDate", $sqlKindness);
	$oKindnessResult = pager_query($sqlKindness, KINDNESS_REC_PER_PAGE, 0, $sqlCount);
	
	$sOutput = "";
	$sPrevName = "";
	$iKindnessCount = 0;
	
	$sTableHeader = '<div class="divider"></div>
					<div id="cbtop">
						<div class="cbb">
							<div class="left-border">
								<div class="right-border">';

	$sTableFooter = '			</div>
							</div>
						</div>
					</div>';
	
	while ($oKindness = db_fetch_object($oKindnessResult)){
		$iKindnessCount++;
		
		$iId = $oKindness->id;
		$iDuration = $oKindness->iDuration/60;
		$iTimeHour = intval($iDuration);
		$iTimeMin = str_pad(round(($iDuration - floor($iDuration)) * 60), 2, '0', STR_PAD_LEFT);
		$sDuration = $iTimeHour.":".$iTimeMin;
		
		$sHopeful = $oKindness->name;
		
		if ($sPrevName != $sHopeful){
			$sOutput .= '<div class="jboxh" style="width:980px"><div class="jboxhead"><h2>Disapproved Citation of <em>'.$sHopeful.'</em></h2></div></div>';
		}else{
			if ($iKindnessCount > 0) $sOutput .= '<hr class="divider" style="width:980px;margin:5px 0 5px 0" />';
		}
		
		$sIdUid = $iId.'_'.$oKindness->iUserId;
		$sTitle = ucwords(stripslashes($oKindness->sTitle));
		
		$sOutput .= '<div class="jbox" style="width:980px">
							<div class="jboxhead"><h2></h2></div>
							<div class="jboxbody">
								<div class="jboxcontent" style="color:#000">
									<table>
										<tr>
											<td style="padding:3px 10px 0 0;"><input type="checkbox" id="id_uid" name="id_uid" value="'.$sIdUid.'" /></td>
											<td>
												<input type="hidden" id="'.$sIdUid.'_duration" name="'.$sIdUid.'_duration" value="'.$oKindness->iDuration.'" />
												
												<div id="kindness_workz_comments_container" title="Comments for <em>'.$sTitle.'</em>">
													<div id="kindness_workz_comments_container_data">Loading...</div>
												</div>
												
												<table>
													<tr>
														<td colspan="3"><b>Title</b>: '.$sTitle.'</td>
													</tr>
													<tr>
														<td style="width:300px;"><b>Date Submitted</b>: '.$oKindness->sDate.'</td>
														<td style="width:415px;"><b>Beneficiary Name</b>: '.stripslashes($oKindness->sToWhom).'</td>
														<td rowspan="2"><img id="kindness_workz_comments_'.$iId.'" style="cursor:pointer;" src="/themes/theme2010/images/btn_blue_kindness_comments.gif" border="0" /></td>
													</tr>
													<tr>
														<td><b>Duration</b>: '.$iTimeHour.' Hour'.(($iTimeHour > 1) ? 's':'').' and '.$iTimeMin.' Minute'.(($iTimeMin > 1) ? 's':'').'</td>
														<td><b>Beneficiary Relationship</b>: '.$oKindness->sToWhomType.'</td>
													</tr>
													<tr>
														<td colspan="3" style="padding-top:10px;">
															<b>Description</b>:<br/>'.stripslashes($oKindness->sDesc).'
														</td>
													</tr>
												</table>
											</td>
										</tr>
									</table>
								</div>
							</div>
							<div class="jboxfoot"><p></p></div>
						</div>';
		
		$sPrevName = $oKindness->name;
	}
	
	if ($iKindnessCount > 0){
		$sOutput .= '<div style="text-align:right;padding:5px 30px 0 0;">
						<button type="button" class="danger-button-gradient" id="delete_kindness" style="min-width:100px" name="delete_kindness" value="delete">Delete</button>
					</div>';
	} else {
		$sOutput .= '<div class="jboxh" style="width:980px"><div class="jboxhead"><h2>Disapproved Citation</h2></div></div>
					<div class="jbox" style="width:980px">
						<div class="jboxhead"><h2></h2></div>
						<div class="jboxbody">
							<div class="jboxcontent" style="color:#000">
								<center>You have no disapproved Citation to display, yet.</center>
							</div>
						</div>
						<div class="jboxfoot"><p></p></div>
					</div>';
	}
	
	$sPreHTML = drupal_eval(_kindness_load_template("page-mentor"));
	$sOutput = $sPreHTML.$sTableHeader.$sOutput.$sTableFooter;
	
	return $sOutput;
}

function kindness_mentor_deactivate(){
	global $user;
	
	$iUserId = $user->uid;
	$sqlDelete1 = "DELETE FROM volunteer_optin WHERE uid = %d AND `type` = 'mentor'";
	$sqlDelete2 = "DELETE FROM users_roles WHERE uid = %d AND rid = 6";
	$sqlDelete3 = "DELETE FROM volunteer_mentor_hopeful WHERE iMentorId = %d";
	
	db_query($sqlDelete1, $iUserId);
	db_query($sqlDelete2, $iUserId);
	db_query($sqlDelete3, $iUserId);
	
	// Point System for Volunteer Opt-out
	userpoints_userpointsapi(array("uid" => $user->uid, "tid" => 199, "description" => "User deactivated his/her Volunteer - Mentor account."));
	
	header("Location: kindness/mentor?deactivated");
}

function kindness_callback_details(){
	$iKindnessHours = _kindness_get_hours();
	$iKindnessHours = ($iKindnessHours > 0) ? number_format($iKindnessHours, 2):0;
	$iTimeHour = intval($iKindnessHours);
	$iTimeMin = round(($iKindnessHours - floor($iKindnessHours)) * 60);
	
	//$sKindnessNotice = "You have accumulated a total of ".$iKindnessHours." Kindness Hours. That's ".$iTimeHour." hours(s) and ".$iTimeMin." minute(s).";
	$sKindnessNotice = "Workz Hours - Balance: ".$iTimeHour." hours(s) and ".$iTimeMin." minute(s).";
	
	echo json_encode(array("RETURN" => array("HOURS" => $iKindnessHours, "NOTICE" => $sKindnessNotice)));
	
	exit;
}

function kindness_callback_convert(){
	global $user;
	
	$oBankAdmin = _bank_account(1);
	$oBankChild = _bank_account();
	$iTime = $_REQUEST["iTime"];
	

	if($iTime > 0){
		$iDuration = ($iTime * 60) * -1;
		$mKindnessRate = variable_get("kindness_rate", 1);
		$mAmount = number_format($iTime * $mKindnessRate, 2);
		date_default_timezone_set('Asia/Manila');
		
		$aReqParam = array(
						"key" => $oBankAdmin->account_number, 
						"pass" => $oBankAdmin->account_pass, 
						"amount" => $mAmount,
						"recipient" => $oBankChild->account_number,
						"description" => "Converted ".$iTime." Kindness Hour(s) to Valiant(s). Conversion Rate: ".$mKindnessRate
					);
		$aBankReply = _bank_post("create", $aReqParam);

//		$aReply = array("STATUS" => "Fail", "RETURN" => "yo".$aBankReply["STATUS"].$oBankChild->account_number);
		
		if ($aBankReply["STATUS"] == "Success"){
			
			$sqlInsert = "INSERT INTO {kindness_statement} VALUES(NULL, 0, %d, %d, '%s')";
			db_query($sqlInsert, array($user->uid, $iDuration, date("Y-m-d H:i:s")));
			
			$aReply = array("STATUS" => "Success", "RETURN" => "Kindness Rate:".$mKindnessRate." | Duration:".$iDuration." The ".$iTime." Kindness Hour(s) was successfully converted to ".$mAmount." Valiant(s) and was credited to your Bank Account (".$oBankChild->account_number.") with Reference Number ".$aBankReply["RETURN"]["REF"].".");
		}else{
			$aReply = array("STATUS" => "Fail", "RETURN" => $aBankReply["ERR_MSG"], "Account Number:" => $oBankAdmin->account_number, "Account PASS:" => $oBankAdmin->account_pass);
		}


	} else{
		$aBankReply["ERR_MSG"] = 'Conversion error, 0 value cannot be converted.';
		$aReply = array("STATUS" => "Fail", "RETURN" => $aBankReply["ERR_MSG"]);
	}
	
	echo json_encode($aReply);
	
	exit;
}

function kindness_callback_dash ( $sAccountId ) {
	$sOutput = _kindness_callback_dashboard_child( $sAccountId );

	// global $user;
	// $sUserType = _kindness_check_user_type();

	// error_log( '$sUserType: '. $sUserType );
	
	// if ( $user->uid == 1 ) {
	// 	$sOutput = _kindness_dashboard_adult( $user->uid, "admin" );
	// } else {
	// 	switch ($sUserType){
	// 		case "child":
	// 			$sOutput = _kindness_callback_dashboard_child( $sAccountId );
				
	// 			break;
	// 		case "mentor":
	// 		case "mod":
	// 			$sOutput = _kindness_dashboard_adult( $sAccountId, $sUserType );
				
	// 			break;
	// 	}
	// }

	echo json_encode(array("RETURN" => $sOutput));
	
	exit;
}

function _kindness_callback_dashboard_child($iChildId){
	$sqlDeeds = "SELECT COUNT(id)
				FROM {kindness_submit}
				WHERE iUserId = %d
					AND bApprovedMentor = '1'
					/* AND bApprovedMod = '1'
					AND bApprovedAdmin = '1'*/";
	
	$sqlPending = "SELECT COUNT(id)
					FROM {kindness_submit}
					WHERE iUserId = %d
						AND bApprovedMentor = '%s'
						AND bApprovedMod = '%s'
						AND bApprovedAdmin = '%s'";
	
	$iKindnessHours = _kindness_get_hours();
	$iTimeHour = intval($iKindnessHours);
	$iTimeMin = ($iKindnessHours - floor($iKindnessHours)) * 60;
	
	$iCovertedHours = _kindness_get_hours(null, true);
	$iConvertedTimeHour = intval($iCovertedHours);
	$iConvertedTimeMin = ($iCovertedHours - floor($iCovertedHours)) * 60;
	
	$iTotalHours = $iKindnessHours + $iCovertedHours;
	$iTotalTimeHour = intval($iTotalHours);
	$iTotalTimeMin = ($iTotalHours - floor($iTotalHours)) * 60;
	
	$iDeedCount = db_result(db_query($sqlDeeds, $iChildId));
	$iDeedCount = ($iDeedCount == '') ? 0:$iDeedCount;
	$iPendingMentor = db_result(db_query($sqlPending, array($iChildId, 0, 0, 0)));
	$iPendingMod = db_result(db_query($sqlPending, array($iChildId, 1, 0, 0)));
	$iPendingAdmin = db_result(db_query($sqlPending, array($iChildId, 1, 1, 0)));
	
	$iMentorId = _kindness_hopeful_mentor($iChildId);
	$sMentorName = _kindness_hopeful_mentor($iChildId, "name");
	$sMentorNameHTML = ($sMentorName == '') ? 'No Mentor assigned, yet.':l($sMentorName, 'user/'.$iMentorId, array('attributes' => array("target" => "_blank", "style" => "color:#4FDE19")));
	
    $sOutput = '<h3>Workz Hours - General Status :</h3>
				<div class="kindness_panel_area">
					<div class="kindness_left_panel_1">Total Hours Earned:</div>
					<div class="kindness_right_panel_1" >'.$iTotalTimeHour.' hrs and '.$iTotalTimeMin.' min</div>
					<div class="kindness_left_panel_1">Hours Converted to Bucks:</div>
					<div class="kindness_right_panel_1" >'.$iConvertedTimeHour.' hrs and '.$iConvertedTimeMin.' min</div>
					<div class="kindness_left_panel_1">Hours Balance:</div>
					<div class="kindness_right_panel_1" >'.$iTimeHour.' hrs and '.$iTimeMin.' min</div>
				</div>
				<div class="kindness-strip">&nbsp;</div>
				<div class="kindness_panel_area">
					<div class="kindness_left_panel"><span>Your Citation Mentor :</span></div>
					<div class="kindness_right_panel">
						'.$sMentorNameHTML.'
					</div>
					<div class="kindness_left_panel"><span >Approved # of Citation:</span></div>
					<div class="kindness_right_panel">'.$iDeedCount.'</div>
				</div>
				
				<!--<div class="kindness_panel_area"> Pending<br /><br />
					<div class="kindness_left_panel_1" style="width:80px;">Mentor:</div>
					<div class="kindness_right_panel_1" style="width:300px;">'.$iPendingMentor.' deed (s) waiting to be approved</div>
					<div class="kindness_left_panel_1" style="width:80px;">Moderator:</div>
					<div class="kindness_right_panel_1" style="width:300px;">'.$iPendingMod.' deed (s) waiting to be approved</div>
					<div class="kindness_left_panel_1" style="width:80px;">Admin:</div>
					<div class="kindness_right_panel_1" style="width:300px;">'.$iPendingAdmin.' deed (s) waiting to be approved</div>
				</div>-->';
	
	return $sOutput;
}

function kindness_callback_dash2(){
    $env = $_POST['env'];
	$userid = $_POST['uid'];
	
	$sOutput = _kindness_callback_dashboard_child2($userid, $env);

	echo json_encode(array("RETURN" => $sOutput));
	
	exit;
}

function _kindness_callback_dashboard_child2($iChildId, $env){
	$sqlDeeds = "SELECT COUNT(id)
				FROM {kindness_submit}
				WHERE iUserId = %d
					AND bApprovedMentor = '1'";
	
	$sqlPendingCount = "SELECT COUNT(id)
				FROM {kindness_submit}
				WHERE iUserId = %d
					AND bApprovedMentor = '0'";
					
	$sqlPending = "SELECT COUNT(id)
					FROM {kindness_submit}
					WHERE iUserId = %d
						AND bApprovedMentor = '%s'
						AND bApprovedMod = '%s'
						AND bApprovedAdmin = '%s'";
	
	$iKindnessHours = _kindness_get_hours($iChildId);
	$iTimeHour = intval($iKindnessHours);
	$iTimeMin = round(($iKindnessHours - floor($iKindnessHours)) * 60);
	
	$iCovertedHours = _kindness_get_hours($iChildId, true);
	$iConvertedTimeHour = intval($iCovertedHours);
	$iConvertedTimeMin = ($iCovertedHours - floor($iCovertedHours)) * 60;
	
	$iTotalHours = $iKindnessHours + $iCovertedHours;
	$iTotalTimeHour = intval($iTotalHours);
	$iTotalTimeMin = ($iTotalHours - floor($iTotalHours)) * 60;
	$iDeedCount = db_result(db_query($sqlDeeds, $iChildId));
	$iPendingCount = db_result(db_query($sqlPendingCount, $iChildId));
	$iPendingMentor = db_result(db_query($sqlPending, array($iChildId, 0, 0, 0)));
	$iPendingMod = db_result(db_query($sqlPending, array($iChildId, 1, 0, 0)));
	$iPendingAdmin = db_result(db_query($sqlPending, array($iChildId, 1, 1, 0)));
	
	$iMentorId = _kindness_hopeful_mentor($iChildId);
	$sMentorName = _kindness_hopeful_mentor($iChildId, "name");

	$oDetails = _bank_account();
	$aBalances = _bank_post("balance", array("key" => $oDetails->account_number, "pass" => $oDetails->account_pass));
	$mBalance = (int)$aBalances["RETURN"]["BALANCE"];

	if($env == 'ext'){
    $sOutput = '<h3 style="color:#444">Workz Hours - General Status :</h3>
				<div class="kindness_panel_area">
					<div class="kindness_left_panel_1" style="color:#444">Total Workz Hours Earned:</div>
					<div class="kindness_right_panel_1" style="color:#444">'.$iTotalTimeHour.' hrs and '.$iTotalTimeMin.' min</div>
				</div>
				<div class="kindness_panel_area">
					<div class="kindness_left_panel_1" style="color:#444"><span style="color:#444">Citaiton Approved:</span></div>
					<div class="kindness_right_panel_1">'.$iDeedCount.'</div><div style="clear:both"></div>
					<div class="kindness_left_panel_1" style="color:#444"><span style="color:#444">Citation Pending:</span></div>
					<div class="kindness_right_panel_1">'.$iPendingCount.'</div>
				</div>
				<div style="clear:both"></div>
				<div style="font-weight:normal;color:#444">
							To see the details click on the title of the Citation Below.
				</div>';
	} else{
	// Workz Status header
	$sOutput = '
			<div style="margin-right:auto;width:70%">
				<button class="button-blue-gradient" id="my-status-button">My Status</button><br/>
				<button class="button-blue-gradient" id="benefactor-status-button">My Samaritan Status</button>
			</div>
		</div>
		<div style="display:flex;margin-top:20px;">
			<div style="margin-right:auto;width:60%">
				<h2 class="workz-status-header">Workz Status</h1>
				<h3>Performed: <span class="data-h3" id="all_workz_count">0</span></h3>
				<h3>Approved: <span class="data-h3" id="approved_workz_count">0</span></h3>
				<h3>Pending: <span class="data-h3" id="pending_workz_count">0</span></h3>
				<h3>Disapproved: <span class="data-h3" id="disapproved_workz_count">0</span></h3>
			</div>

			<div style="margin-right:auto;width:29%">
				<h3>Duration: <span class="data-h3" id="kindness_total_hours">' . $iTimeHour.' hour(s) and '.$iTimeMin.' minute(s)' . '</span></h3>
				<h3>My Valiant: <span class="data-h3" id="kindness_total_wgold">'. $mBalance .'</span></h3>
				</div>
		</div>
		<h3 id="workz-status-info">For Details click on the title of the Workz below</h3>
	';
	}
	
	return $sOutput;
}

//BACKUP
// function _kindness_callback_dashboard_child2($iChildId, $env){
// 	$sqlDeeds = "SELECT COUNT(id)
// 				FROM {kindness_submit}
// 				WHERE iUserId = %d
// 					AND bApprovedMentor = '1'";
	
// 	$sqlPendingCount = "SELECT COUNT(id)
// 				FROM {kindness_submit}
// 				WHERE iUserId = %d
// 					AND bApprovedMentor = '0'";
					
// 	$sqlPending = "SELECT COUNT(id)
// 					FROM {kindness_submit}
// 					WHERE iUserId = %d
// 						AND bApprovedMentor = '%s'
// 						AND bApprovedMod = '%s'
// 						AND bApprovedAdmin = '%s'";
	
// 	$iKindnessHours = _kindness_get_hours($iChildId);
// 	$iTimeHour = intval($iKindnessHours);
// 	$iTimeMin = ($iKindnessHours - floor($iKindnessHours)) * 60;
	
// 	$iCovertedHours = _kindness_get_hours($iChildId, true);
// 	$iConvertedTimeHour = intval($iCovertedHours);
// 	$iConvertedTimeMin = ($iCovertedHours - floor($iCovertedHours)) * 60;
	
// 	$iTotalHours = $iKindnessHours + $iCovertedHours;
// 	$iTotalTimeHour = intval($iTotalHours);
// 	$iTotalTimeMin = ($iTotalHours - floor($iTotalHours)) * 60;
// 	$iDeedCount = db_result(db_query($sqlDeeds, $iChildId));
// 	$iPendingCount = db_result(db_query($sqlPendingCount, $iChildId));
// 	$iPendingMentor = db_result(db_query($sqlPending, array($iChildId, 0, 0, 0)));
// 	$iPendingMod = db_result(db_query($sqlPending, array($iChildId, 1, 0, 0)));
// 	$iPendingAdmin = db_result(db_query($sqlPending, array($iChildId, 1, 1, 0)));
	
// 	$iMentorId = _kindness_hopeful_mentor($iChildId);
// 	$sMentorName = _kindness_hopeful_mentor($iChildId, "name");
	
// 	if($env == 'ext'){
//     $sOutput = '<h3 style="color:#444">Workz Hours - General Status :</h3>
// 				<div class="kindness_panel_area">
// 					<div class="kindness_left_panel_1" style="color:#444">Total Workz Hours Earned:</div>
// 					<div class="kindness_right_panel_1" style="color:#444">'.$iTotalTimeHour.' hrs and '.$iTotalTimeMin.' min</div>
// 				</div>
// 				<div class="kindness_panel_area">
// 					<div class="kindness_left_panel_1" style="color:#444"><span style="color:#444">Citation Approved:</span></div>
// 					<div class="kindness_right_panel_1">'.$iDeedCount.'</div><div style="clear:both"></div>
// 					<div class="kindness_left_panel_1" style="color:#444"><span style="color:#444">Citation Pending:</span></div>
// 					<div class="kindness_right_panel_1">'.$iPendingCount.'</div>
// 				</div>
// 				<div style="clear:both"></div>
// 				<div style="font-weight:normal;color:#444">
// 							To see the details click on the title of the Citation Below.
// 				</div>';
// 	} else{
// 	 $sOutput = '<h3>Workz Hours - General Status :</h3>
// 				<div class="kindness_panel_area">
// 					<div class="kindness_left_panel_1">Total Workz Hours Earned:</div>
// 					<div class="kindness_right_panel_1">'.$iTotalTimeHour.' hrs and '.$iTotalTimeMin.' min</div>
// 				</div>
// 				<div class="kindness_panel_area">
// 					<div class="kindness_left_panel_1"><span>Citation Approved:</span></div>
// 					<div class="kindness_right_panel_1">'.$iDeedCount.'</div><div style="clear:both"></div>
// 					<div class="kindness_left_panel_1"><span>Citation Pending:</span></div>
// 					<div class="kindness_right_panel_1">'.$iPendingCount.'</div>
// 				</div>
// 				<div style="clear:both"></div>
// 				<div style="font-weight:normal;">
// 							To see the details click on the title of the Citation Below.
// 				</div>';
// 	}
	
// 	return $sOutput;
// }

function kindness_callback_form(){
	global $user;

	$aKindnessReply = array();

	foreach ($_REQUEST as $sKey => $sData){
		${$sKey} = $sData;
	}

	$iHour = $iKindnessHour;
	$iMinute = $iKindnessMinute;
	
	if ($iHour == 0 && $iMinute == 0){
	//if ($iMinute == 0){
		$aKindnessReply["ERR_MSG"]="You must specify a valid time for the Duration (hours) and (minutes).";
		$aReply = array("STATUS" => "Fail", "RETURN" => $aKindnessReply["ERR_MSG"]);
	}else if ($iForTruePromise == 0){
		$aKindnessReply["ERR_MSG"]="You must promise that this Good Deed is true." ;
		$aReply = array("STATUS" => "Fail", "RETURN" => $aKindnessReply["ERR_MSG"]);
	}else{
		$dDate = $iKindnessYear."-".str_pad($iKindnessMonth, 2, '0', STR_PAD_LEFT)."-".str_pad($iKindnessDay, 2, '0', STR_PAD_LEFT);
		$iDurationMins = $iKindnessHour + $iKindnessMinute;
		
		$sqlInsert = "INSERT INTO {kindness_submit} VALUES(NULL, %d, '%s', %d, '%s', '%s', '%s', '%s', '%s', '%s', '0', '0', '0','%s')";
		db_query($sqlInsert, array($user->uid, $dDate, $iDurationMins, ucwords($sKindnessTitle), ucfirst($sKindnessDesc), ucwords($sKindnessWhom), ucwords($sKindnessLocation), $iForTruePromise, $sKindnessRecipientType,$unique_kindness_report_id));
		$aReply = array("STATUS" => "Success", "RETURN" => "Your Kindness Form has been submitted.");
	}
	
	echo json_encode($aReply);
	
	exit;
}

function kindness_callback_form_v2(){

	global $user;

	$upload_folder = $_SERVER['DOCUMENT_ROOT'].'/hud_files/uploads/';

	$aKindnessReply = array();
	foreach ($_REQUEST as $sKey => $sData){
		${$sKey} = $sData;
	}

	$benefactor = new stdClass;
	$benefactor->uid = 0;
	$benefactor->name = '';
	$benefactor->mail = '';

	$beneficiary = new stdClass;
	$benefactor->uid = 0;

	if ($workz_type != 'Random Kindness Workz') {
		if ($_REQUEST['is_benefactor_same_user'] !== 'on') {
			if ($_REQUEST['is_benefactor_anonymous'] !== 'on') {
				$default_pass = 'pass123';
				//Benefactor Data
				$benefactor_name = "$benefactor_first_name $benefactor_last_name";
				$benefactor_data = [
					'name' => $benefactor_name,
					'profile_first_name' => $benefactor_first_name,
					'profile_last_name' => $benefactor_last_name,
					'pass' => $default_pass,
				    'mail' => $benefactor_email,
				    'profile_address' => $benefactor_address,
				    'profile_phone' => $benefactor_phone,
				    'profile_benefactor_department_name' => $benefactor_department_name,
				    'profile_benefactor_department_address' => $benefactor_department_address,
				    'profile_benefactor_department_phone' => $benefactor_department_phone,
				    'profile_benefactor_department_email' => $benefactor_department_email,
				    'status' => 1,
				    'roles' => [
				    	23 => 23,
				    	2 => 2,
				    	9 => 9,
				    ],
				];

				$benefactor = db_fetch_object(db_query("SELECT * FROM {users} WHERE name = '%s'", $benefactor_name));

				if (!$benefactor) {
					$benefactor = user_save(NULL, $benefactor_data);
				}else{
					$benefactor_info = user_load(['uid' => $benefactor->uid]);
					$role_ids = (array_keys($benefactor_info->roles));
					$role_ids = array_unique(array_merge($role_ids, [
				    	23,
				    	2,
				    	9,
				    ]));
					$role_ids = array_combine($role_ids, $role_ids);

					$benefactor_data = [
						'roles' => $role_ids
					];

					$benefactor = user_save($benefactor, $benefactor_data);
				}

				if (!empty($_REQUEST['benefactor-picture-filename'])) {
					$benefactor_filename = $benefactor->uid.'-'.end(explode('-', $_REQUEST['benefactor-picture-filename']));
					rename($upload_folder.'/temp/'.$_REQUEST['benefactor-picture-filename'], $upload_folder.'users/' . $benefactor_filename);

					$benefactor = user_save($benefactor, [
						'picture' => 'hud_files/uploads/users/'.$benefactor_filename
					]);
				}

				sendCustomMailer($benefactor_email, 'Someone recognized your samaritan workz!', _setSamaritanWorkzMailContent($benefactor, [
					'title' => $sKindnessTitle,
					'description' => $sKindnessDesc,
					'location' => $sKindnessLocation,
					'date' => $dDate,
				]));
			}
		}else{
			$benefactor = $user;
		}

		$reviewers = _kindness_mentor_by_hopeful($benefactor->uid);

		if (count($reviewers) > 0) {
			foreach ($reviewers as $reviewer) {
				sendCustomMailer($reviewer->mail, 'A reporter submitted a citation workz for your review', _setReviewerWorkzMailContent($reviewer, [
					'title' => $sKindnessTitle,
					'description' => $sKindnessDesc,
					'location' => $sKindnessLocation,
					'date' => $dDate,
				]));
			}
		}

		if ($_REQUEST['is_beneficiary_anonymous'] !== 'on') {
			//Beneficiary Data
			$sToWhom = "$sToWhomFirstName $sToWhomLastName";
			$beneficiary_data = $data = [
				'name' => $sToWhom,
				'profile_first_name' => $sToWhomFirstName,
				'profile_last_name' => $sToWhomLastName,
				'pass' => $default_pass,
			    'mail' => $beneficiary_email,
			    'profile_address' => $beneficiary_address,
			    'profile_phone' => $beneficiary_phone,
			    'status' => 1,
			    'roles' => [
			    	24 => 24,
			    	2 => 2,
			    	9 => 9,
			    ],
			];

			$beneficiary = db_fetch_object(db_query("SELECT * FROM {users} WHERE name = '%s'", $sToWhom));

			if (!$beneficiary) {
				$beneficiary = user_save(NULL, $beneficiary_data);
			}
			
			if (!empty($_REQUEST['beneficiary-picture-filename'])) {
				$beneficiary_filename = $beneficiary->uid.'-'.end(explode('-', $_REQUEST['beneficiary-picture-filename']));
				rename($upload_folder.'/temp/'.$_REQUEST['beneficiary-picture-filename'], $upload_folder.'users/' . $beneficiary_filename);

				$beneficiary = user_save($beneficiary, [
					'picture' => 'hud_files/uploads/users/'.$beneficiary_filename
				]);
			}

			sendCustomMailer($beneficiary_email, 'Samaritan Citation Notification', _setBeneficiaryWorkzMailContent($beneficiary, [
					'title' => $sKindnessTitle,
					'description' => $sKindnessDesc,
					'location' => $sKindnessLocation,
					'date' => $dDate,
				]));
		}
	}

	if ($benefactor->uid == 0) {
		$reviewers = _kindness_anonymous_reviewers();
		if (count($reviewers) > 0) {
			foreach ($reviewers as $reviewer) {
				sendCustomMailer($reviewer->mail, 'A reporter submitted a citation workz for your review', _setReviewerWorkzMailContent($reviewer, [
					'title' => $sKindnessTitle,
					'description' => $sKindnessDesc,
					'location' => $sKindnessLocation,
					'date' => $dDate,
				]));
			}
		}
	}

	$iHour = $iKindnessHour;
	$iMinute = $iKindnessMinute;
	// $dDate = $iKindnessYear."-".str_pad($iKindnessMonth, 2, '0', STR_PAD_LEFT)."-".str_pad($iKindnessDay, 2, '0', STR_PAD_LEFT);
	$iDurationMins = 0;//$iKindnessHour + $iKindnessMinute;

	if($workz_type === 'Kindness Workz'){
		$iDurationMins = $iKindnessHour + $iKindnessMinute;
	}

	$sqlInsert = "INSERT INTO {kindness_submit} VALUES(
		NULL,
		%d,
		'%s',
		%d,
		'%s',
		'%s',
		'%s',
		'%s',
		'%s',
		'1',
		'%s',
		'0',
		'0',
		'0',
		NULL,
		'%s',
		'%s',
		'%s',
		'%s',
		%d,
		'%s',
		'%s',
		'%s',
		'%s',
		'%s',
		'%s',
		'%s',
		NULL,
		%d,
		NULL,
		'%s',
		'%s',
		'%s',
		'%s',
		'%s',
		'%s'
	)";

	db_query($sqlInsert, 
		array(
			$benefactor->uid, 
			$dDate, 
			$iDurationMins, 
			ucwords($sKindnessTitle), 
			ucfirst($sKindnessDesc), 
			ucwords($sToWhom), 
			ucwords($sKindnessLocation), 
			json_encode(get_geocode_address(ucwords($sKindnessLocation))), 
			$sToWhomType,
			$benefactor->name,
			$benefactor_address,
			$benefactor_phone,
			$benefactor->mail,
			$is_benefactor_anonymous == 'on' ? 1 : 0,
			$benefactor_department_name,
			$benefactor_department_address,
			$benefactor_department_phone,
			$benefactor_department_email,
			$beneficiary_address,
			$beneficiary_phone,
			$beneficiary_email,
			$is_beneficiary_anonymous == 'on' ? 1 : 0,
			$workz_type,
			$beneficiary->uid,
			$user->uid,
			$valor_act_type,
			$kindness_act_type,
			date('Y-m-d H:i:s')
		)
	);
	$workz_id = db_last_insert_id('kindness_submit', 'uid');

	if (!empty($_REQUEST['workz-picture-filename'])) {
		$workz_filename = $workz_id.'-'.end(explode('-', $_REQUEST['workz-picture-filename']));
		$workz_image = "hud_files/uploads/workz/$workz_filename";
		rename($upload_folder.'/temp/'.$_REQUEST['workz-picture-filename'], $upload_folder.'workz/' . $workz_filename);

		$query = db_query("UPDATE {kindness_submit} SET workz_image = '%s' WHERE id = %d", array($workz_filename , $workz_id));
	}

	$aReply = array("STATUS" => "Success", "RETURN" => "Your Kindness Form has been submitted.");


	sendCustomMailer($user->mail, 'We received your Samaritan Citation Report', _setReporterWorkzMailContent($user, [
					'title' => $sKindnessTitle,
					'description' => $sKindnessDesc,
					'location' => $sKindnessLocation,
					'date' => $dDate,
				]));
	
	echo json_encode($aReply);
	
	exit;
}

function _add_gold($benefactor_id, $iDurationMins, $workz_type, $valor_act_type, $kindness_act_type){
	global $user;
	
	$oBankAdmin = _bank_account(1);
	$oBankChild = _bank_account($benefactor_id);
	$mAmount = _get_amount($iDurationMins, 
		$workz_type, 
		$valor_act_type, 
		$kindness_act_type
	);

	$type = $valor_act_type;

	if ($workz_type === 'Kindness Workz') {
		$type = $kindness_act_type;
	}

	$aReqParam = array(
					"key" => $oBankAdmin->account_number, 
					"pass" => $oBankAdmin->account_pass, 
					"amount" => $mAmount,
					"recipient" => $oBankChild->account_number,
					"description" => "Received $mAmount valiant from $workz_type with $type type"
				);
	$aBankReply = _bank_post("create", $aReqParam);

	if ($aBankReply["STATUS"] == "Success"){
		// $sqlInsert = "INSERT INTO {kindness_statement} VALUES(NULL, 0, %d, %d, '%s')";
		// db_query($sqlInsert, array($user->uid, $iDuration, date("Y-m-d H:i:s")));
		
		// drupal_set_message("The ".$iTime." Kindness Hour(s) was successfully converted to ".$mAmount." Valiant(s) and was credited to your Bank Account (".$oBankChild->account_number.") with Reference Number ".$aBankReply["RETURN"]["REF"].".");
	}else{
		// drupal_set_message($aBankReply["ERR_MSG"], "error");
	}
	
	return "";
}

function _add_reporter_gold($reporter_id, $workz_type){
	global $user;
	
	$oBankAdmin = _bank_account(1);
	$oBankChild = _bank_account($reporter_id);
	$mAmount = 2;

	$type = $valor_act_type;

	if ($workz_type === 'Random Kindness Workz') {
		$mAmount = 1;
	}

	$aReqParam = array(
					"key" => $oBankAdmin->account_number, 
					"pass" => $oBankAdmin->account_pass, 
					"amount" => $mAmount,
					"recipient" => $oBankChild->account_number,
					"description" => "Received $mAmount valiant for reporting workz"
				);

	$aBankReply = _bank_post("create", $aReqParam);

	if ($aBankReply["STATUS"] == "Success"){
		// $sqlInsert = "INSERT INTO {kindness_statement} VALUES(NULL, 0, %d, %d, '%s')";
		// db_query($sqlInsert, array($user->uid, $iDuration, date("Y-m-d H:i:s")));
		
		// drupal_set_message("The ".$iTime." Kindness Hour(s) was successfully converted to ".$mAmount." Valiant(s) and was credited to your Bank Account (".$oBankChild->account_number.") with Reference Number ".$aBankReply["RETURN"]["REF"].".");
	}else{
		// drupal_set_message($aBankReply["ERR_MSG"], "error");
	}
	
	return "";
}

function _add_reviewer_gold($reviewer_id){
	global $user;
	
	$oBankAdmin = _bank_account(1);
	$oBankChild = _bank_account($reviewer_id);
	$mAmount = 1;

	$aReqParam = array(
					"key" => $oBankAdmin->account_number, 
					"pass" => $oBankAdmin->account_pass, 
					"amount" => $mAmount,
					"recipient" => $oBankChild->account_number,
					"description" => "Received $mAmount valiant for reviewing workz"
				);

	$aBankReply = _bank_post("create", $aReqParam);

	if ($aBankReply["STATUS"] == "Success"){
		// $sqlInsert = "INSERT INTO {kindness_statement} VALUES(NULL, 0, %d, %d, '%s')";
		// db_query($sqlInsert, array($user->uid, $iDuration, date("Y-m-d H:i:s")));
		
		// drupal_set_message("The ".$iTime." Kindness Hour(s) was successfully converted to ".$mAmount." Valiant(s) and was credited to your Bank Account (".$oBankChild->account_number.") with Reference Number ".$aBankReply["RETURN"]["REF"].".");
	}else{
		// drupal_set_message($aBankReply["ERR_MSG"], "error");
	}
	
	return "";
}

function _add_booster_gold($booster_id){
	global $user;
	
	$oBankAdmin = _bank_account(1);
	$oBankChild = _bank_account($booster_id);
	$mAmount = 1;

	$aReqParam = array(
					"key" => $oBankAdmin->account_number, 
					"pass" => $oBankAdmin->account_pass, 
					"amount" => $mAmount,
					"recipient" => $oBankChild->account_number,
					"description" => "Received $mAmount valiant for boosting workz"
				);

	$aBankReply = _bank_post("create", $aReqParam);

	if ($aBankReply["STATUS"] == "Success"){
		// $sqlInsert = "INSERT INTO {kindness_statement} VALUES(NULL, 0, %d, %d, '%s')";
		// db_query($sqlInsert, array($user->uid, $iDuration, date("Y-m-d H:i:s")));
		
		// drupal_set_message("The ".$iTime." Kindness Hour(s) was successfully converted to ".$mAmount." Valiant(s) and was credited to your Bank Account (".$oBankChild->account_number.") with Reference Number ".$aBankReply["RETURN"]["REF"].".");
	}else{
		// drupal_set_message($aBankReply["ERR_MSG"], "error");
	}
	
	return "";
}

function _get_amount($iDurationMins, $workz_type, $valor_act_type, $kindness_act_type)
{
	$mKindnessRate = variable_get("kindness_rate", 1);
	$amount = 0;


	// it would be auto converted for both Kindness and Valor.  Commendation - 5 wGold, Meritorious = 10 wGold, Distinguished = 15 wGold, Bronze = 5 wGold, Silver = 10 wGold, Gold = 15 wGold.  
	switch ($workz_type) {
		case 'Valor Workz':
			if ($valor_act_type === 'Gold') {
				$amount = 15;
			} else if ($valor_act_type === 'Silver') {
				$amount = 10;
			} else if ($valor_act_type === 'Bronze') {
				$amount = 5;
			}

			break;
		
		default:
			if ($kindness_act_type === 'Commendation') {
				$amount = 15;
			} else if ($kindness_act_type === 'Meritorious') {
				$amount = 10;
			} else if ($kindness_act_type === 'Distinguished') {
				$amount = 5;
			}

			break;
	}

	return $amount;
}

function kindness_init(){
	drupal_add_css(drupal_get_path("module", "kindness")."/css/custom.css");
	drupal_add_css("hud_files/mobile.css");
	drupal_add_js(drupal_get_path("module", "kindness")."/js/kindness.js");
	drupal_add_js("hud_files/mobile.js");
	if (_kindness_in_array($_REQUEST["q"], array("kindness*"))){
		drupal_add_css(drupal_get_path("module", "mystudies")."/redmond/jquery-ui-custom.css");
		
		// For some reason, JS files are not being added via drupal_add_js.
		// Below is a workaround to add those files.
		// $sVolunteerJS = file_get_contents(drupal_get_path('module', 'kindness')."/kindness.js");
		
		// drupal_add_js($sVolunteerJS, 'inline');
		
		// Original code
		//drupal_add_js(drupal_get_path("module", "kindness")."/kindness.js");
	}
}

function _kindness_in_array($sNeedle, $aHaystack){
	foreach ($aHaystack as $sReference){
		if (strstr($sReference, "*")){
			if (stristr($sNeedle, str_replace("*", "", $sReference))) return true;
		}else{
			return ($sNeedle == $sReference);
		}
	}
	
	return false;
}

function kindness_dashboard(){
	global $user;
	
	drupal_set_breadcrumb(array(l("Home", "<front>"), l("Good Deeds", "kindness")));
	_kindness_hide_tab_from_admin();
	
	$sUserType = _kindness_check_user_type();
	
	if (!$sUserType && $user->uid != 1) drupal_access_denied();
	
	if ($user->uid == 1){
		$sOutput = _kindness_dashboard_adult($user->uid, "admin");
	}else{
		switch ($sUserType){
			case "child":
				$sOutput = _kindness_dashboard_child($user->uid);
				
				break;
			case "mentor":
			case "mod":
				$sOutput = _kindness_dashboard_adult($user->uid, $sUserType);
				
				break;
		}
	}
	
	return $sOutput;
}

function kindness_list(){
	global $user;
	
	drupal_set_breadcrumb(array(l("Home", "<front>"), l("Good Deeds", "kindness"), l("Pending", "kindness/list")));
	_kindness_hide_tab_from_admin();
	
	$sUserType = _kindness_check_user_type();
	
	if (!$sUserType && $user->uid != 1) drupal_access_denied();
	
	if ($user->uid == 1){
		$sOutput = _kindness_list_adult($user->uid, "admin");
	}else{
		switch ($sUserType){
			case "child":
				$sOutput = _kindness_list_child($user->uid);
				
				break;
			case "mentor":
			case "mod":
			case "admin":
				$sOutput = _kindness_list_adult($user->uid, $sUserType);
				
				break;
		}
	}
	
	return $sOutput;
}

function kindness_callback_pending(){
	global $user;
	
	echo json_encode(array("RETURN" => _kindness_callback_list_child($user->uid)));
	
	exit;
}

function kindness_list_details($iSubmitId, $bPending="true"){
	global $user;
	
	$sUserType = ($user->uid == 1) ? "admin":_kindness_check_user_type();
	$sLinkName = ($bPending == "true") ? "Pending":"Approved";
	$sLinkHref = ($bPending == "true") ? "list":"approved";
	
	$aTrail = array(
					l("Home", "<front>"),
					l("Good Deeds", "kindness"),
					l($sLinkName, "kindness/".$sLinkHref),
					l("Details", "kindness/details/".$iSubmitId)
				);
	
	drupal_set_breadcrumb($aTrail);
	drupal_add_js('var kindness_sBasePath = "'.base_path().'";', "inline");
	
	$sqlDetails = "SELECT A.id, A.iUserId, B.name, A.dDatetime, DATE_FORMAT(A.dDatetime, '%M %e, %Y') AS sDate, 
						A.iDuration AS iKindnessMins, (A.iDuration/60) AS iKindnessHours, A.sTitle, A.sDesc, A.sToWhom,
						A.sLocation, A.bPromised, A.sToWhomType, A.bApprovedMentor, A.bApprovedMod, A.bApprovedAdmin
					FROM kindness_submit A
					LEFT JOIN users B ON B.uid = A.iUserId AND
					(A.iUserId IS NOT NULL OR A.is_benefactor_anonymous = 1) AND
					(A.beneficiary_id IS NOT NULL OR A.is_beneficiary_anonymous = 1)
					WHERE A.id = %d";
	$oDetails = db_fetch_object(db_query($sqlDetails, $iSubmitId));
	
	$iKindnessHours = (float)$oDetails->iKindnessHours;
	$iKindnessHours = ($iKindnessHours > 0) ? $iKindnessHours:0;
	$iTimeHour = intval($iKindnessHours);
	$iTimeMin = round(($iKindnessHours - floor($iKindnessHours)) * 60);
	
	$bWithMentor = user_hierarchy_verify($oDetails->iUserId);
	$bMentor = ($oDetails->bApprovedMentor == 1) ? true:false;
	$bMod = ($oDetails->bApprovedMod == 1) ? true:false;
	$bAdmin = ($oDetails->bApprovedAdmin == 1) ? true:false;
	
	if (!$bMentor && !$bMod && !$bAdmin){
		$sStatus = "Pending (Mentor)";
	}elseif ($bMentor && !$bMod && !$bAdmin){
		$sStatus = "Pending (Moderator)";
	}elseif ($bMentor && $bMod && !$bAdmin){
		$sStatus = "Pending (Admin)";
	}elseif ($bMentor && $bMod && $bAdmin){
		$sStatus = "<b>Approved</b>";
	}

	$sOutput = '<dl>';

	$sOutput .= '<dt>Title:</dt>';
	
	if($sStatus == 'Pending (Mentor)'){
		$sOutput .= '<dd><input id="sTitle" class="report_top_search" type="text" border="0" name="sTitle" value="'.ucwords($oDetails->sTitle).'"></dd>';
	} else{
		$sOutput .= '<dd>'.ucwords($oDetails->sTitle).'</dd>';
	}
	
	$sOutput .= '<dt>Description:</dt>';
	
  if($sStatus == 'Pending (Mentor)'){
		$sOutput .= '<dd><textarea id="sDescription" class="report_top_large_search" border="0" name="sDescription">'.ucfirst($oDetails->sDesc).'</textarea></dd>';
	} else{
		$sOutput .= '<dd>'.ucfirst($oDetails->sDesc).'</dd>';
	}
	
	$sOutput .= '<dt>Did For:</dt>';
	
  if($sStatus == 'Pending (Mentor)'){
    $sOutput .= '<dd><input id="sWhom" class="report_top_search" type="text" border="0" name="sWhom" value="'.ucwords($oDetails->sToWhom).'">'.'</dd>';
	} else{
		$sOutput .= '<dd>'.ucwords($oDetails->sToWhom).'</dd>';
	}
	
	$sOutput .= '<dt>Address/Location:</dt>'; 
	
  if($sStatus == 'Pending (Mentor)'){
		$sOutput .= '<div>'.'<input id="sLocation" class="report_top_search" type="text" border="0" name="sLocation" value="'.$oDetails->sLocation.'">'.'</div>';
  } else{
		$sOutput .= '<dd>'.$oDetails->sLocation.'</dd>';
	}
	
	$sOutput .= '<dt>Relationship:</dt>';
						
	if($sStatus == 'Pending (Mentor)'){
		$arr_recipientType = array('Family/Relative','Neighbor','Stranger','Community');
	
		$sOutput .= '<dd><select id="sRecipientType" name="sRecipientType">
				 <option value="">Select your relationship...</option>';
	
		foreach($arr_recipientType as $recpients){
			if($recpients == $oDetails->sToWhomType){
				$sOutput .= '<option value="'.$recpients.'" selected>'.$recpients.'</option>';
			} else{
				$sOutput .= '<option value="'.$recpients.'">'.$recpients.'</option>';
			}
		
		}
	$sOutput .= '</select></dd>';
	} else{
		$sOutput .= '<dd>'.$oDetails->sToWhomType.'</dd>';
	}
	
	$sOutput .= '<dt>Duration:</dt>';
	
	if($sStatus == 'Pending (Mentor)'){	
		
		$arr_Hours = array(0 => "0/"."0 hour", 1 => "60/"."1 hour", 2 => "120/"."2 hours", 3 => "180/"."3 hours", 4 => "240/"."4 hours", 5 => "300/"."5 hours", 6 => "360/"."6 hours",
							7 => '420/'."7 hours", 8 => '480/'."8 hours"
					);
					
		$arr_Mins = array(0 => "00 minute", 1 => "01 minutes", 2 => "02 minutes", 3 => "03 minutes", 4 => "04 minutes", 5 => "05 minutes", 6 => "06 minutes", 7 => "07 minutes", 08 => "08 minutes", 9 => "09 minutes", 10 => "10 minutes",
						11 => "11 minutes", 12 => "12 minutes", 13 => "13 minutes", 14 => "14 minutes", 15 => "15 minutes", 16 => "16 minutes", 17 => "17 minutes", 18 => "18 minutes", 19 => "19 minutes", 20 => "20 minutes", 21 => "21 minutes", 22 => "22 minutes",
						23 => "23 minutes", 24 => "24 minutes", 25 => "25 minutes", 26 => "26 minutes", 27 => "27 minutes", 28 => "28 minutes", 29 => "29 minutes", 30 => "30 minutes", 31 => "31 minutes", 32 => "32 minutes", 33 => "33 minutes", 34 => "34 minutes",
						35 => "35 minutes", 36 => "36 minutes", 37 => "37 minutes", 38 => "38 minutes", 39 => "39 minutes", 40 => "40 minutes", 41 => "41 minutes", 42 => "42 minutes", 43 => "43 minutes", 44 => "44 minutes", 45 => "45 minutes", 46 => "46 minutes",
						47 => "47 minutes", 48 => "48 minutes", 49 => "49 minutes", 50 => "50 minutes", 51 => "51 minutes", 52 => "52 minutes", 53 => "53 minutes", 54 => "54 minutes", 55 => "55 minutes", 56 => "56 minutes", 57 => "57 minutes", 58 => "58 minutes",
						59 => "59 minutes"
						);
						
		$sOutput .= 'Hours: <select id="iHour" class="form_selectbox" name="iHour" type="text">';
		foreach($arr_Hours as $sHours => $sHourstext){
			$sHoursV = explode('/',$sHourstext);
			if($sHours == $iTimeHour){
			$sOutput .= '<option value="'.$sHoursV[0].'" selected>'.$sHoursV[1].'</option>';
			} else{
			$sOutput .= '<option value="'.$sHoursV[0].'">'.$sHoursV[1].'</option>';
			}
		}
		
		$sOutput .= '</select> Mins: <select id="iMinute" class="form_selectbox" name="iMinute" type="text">';
		
		foreach($arr_Mins as $sMin => $sMintext){
			if($sMin == $iTimeMin){
				$sOutput .= '<option value="'.$sMin.'" selected>'.$sMintext.'</option>';
			} else{
				$sOutput .= '<option value="'.$sMin.'">'.$sMintext.'</option>';
			}
		}
		$sOutput .= '</select>';
		
  } else{
		$sOutput .= '<dd>'.$iTimeHour.' hour(s) and '.$iTimeMin.' minute(s)'.'</dd>';
	}
	
	$sOutput .= '<dt>Date:</dt>';
    
	$arr_Month = array(1 => "Jan", 2 => "Feb", 3 => "Mar", 4 => "Apr", 5 => "may", 6 => "Jun", 7 => "Jul",
						8 => "Aug", 9 => "Sep", 10 => "Oct", 11 => "Nov", 12 => "Dec"
				);
				
	if($sStatus == 'Pending (Mentor)'){	
		$strdate = strtotime($oDetails->dDatetime);
		$sMonth = date("n", $strdate);	
		$sDay = date("j", $strdate);
		$sYear = date("Y", $strdate);
		
		$sOutput .= '<select id="iMonth" class="form_selectbox" name="iMonth">';
		foreach($arr_Month as $sMonthval => $sMonText){
			if($sMonthval == $sMonth){
				$sOutput .= '<option value="'.$sMonthval.'" selected>'.$sMonText.'</option>';
			} else{
				$sOutput .= '<option value="'.$sMonthval.'">'.$sMonText.'</option>';
			}
		}
		$sOutput .= '</select>';
		
		$sOutput .= ' <select id="iDay" class="form_selectbox" name="iDay">';
		$day = 1;
		while($day <= 31){
			if($day == $sDay){
				$sOutput .= '<option value="'.$day.'" selected>'.$day.'</option>';
			} else{
				$sOutput .= '<option value="'.$day.'">'.$day.'</option>';
			}
		$day++;
		}
		$sOutput .= '</select>';
		
		$sOutput .= ' <select id="iYear" class="form_selectbox" name="iYear">';
		$year = 1900;
		while($year <= 2050){
			if($year == $sYear){
				$sOutput .= '<option value="'.$year.'" selected>'.$year.'</option>';
			} else{
				$sOutput .= '<option value="'.$year.'">'.$year.'</option>';
			}
		$year++;
		}
		$sOutput .= '</select>';
		
	} else{
		$sOutput .= '<dd>'.$oDetails->sDate.'</dd>';	
	}
	
	if($sStatus == 'Pending (Mentor)'){
		$sqlCommentCount =  db_result(db_query("SELECT COUNT(id)
					FROM {kindness_comment}
					WHERE iSubmitId = '{$oDetails->id}'"));
					
		if (!$bMentor && !$bMod && !$bAdmin && $oDetails->iUserId == $user->uid && $aStatus !== false && !$aStatus["bApproved"] && $sqlCommentCount !== '0'){
			$sOutput .= '<div>'.'<input type="button" value="Resubmit Kindness Report" onclick="Kindness_EditReport('."'"."resubmitkindness"."'".', '."'".$iSubmitId."'".');" id="updateKindessReport" name="updateKindessReport" class="form-submit" /></div>';
		}else{
			$sOutput .= '<dt>'.'<input type="button" value="Update Kindness Report" onclick="Kindness_EditReport('."'"."editkindness"."'".', '."'".$iSubmitId."'".');" id="updateKindessReport" name="updateKindessReport" class="form-submit" /></div>';
		}
	}
	
	$sOutput .= '</dl>';

	$sButtonPost = '<button type="button" id="kindness_button_approve" class="form-submit" style="width:100px;display:none;">Approve</button>
					<button type="button" id="kindness_button_deny" class="form-submit" style="width:100px;display:none;">Deny</button>';
	
	$sButtons = ( (!$bWithMentor) ?
		'<div align="center" style="padding-top:15px; color:red;">You cannot approve nor deny this Good Deed because there are no mentors and moderator assigned to this child, yet.</div>'
		:
		'<div id="kindness_button" align="right">'.$sButtonPost.'</div>').'
				
				<div id="kindness_comment" style="display:none; width:300px; border: 5px solid #173102; padding:5px; background-color:#E2E2D3;">
					<form action="'.base_path().'kindness/details/submit" method="post">
						<input type="hidden" id="iSubmitId" name="iSubmitId" value="'.$oDetails->id.'" />
						<input type="hidden" id="iChildId" name="iChildId" value="'.$oDetails->iUserId.'" />
						<input type="hidden" id="iAdultId" name="iAdultId" value="'.$user->uid.'" />
						<input type="hidden" id="iDuration" name="iDuration" value="'.$oDetails->iKindnessMins.'" />
						<input type="hidden" id="bApprove" name="bApprove" value="" />
						
						Comment for <span id="kindness_comment_type"></span> this good deed:<br />
						<textarea id="sComment" name="sComment" style="width:300px; height:100px;"></textarea><br />
						<div align="right" style="padding-top:5px;">
							<button id="btnCancel" type="button" name="btnCancel" class="form-submit">Cancel</button>
							<button id="btnSubmit" type="submit" name="btnSubmit" class="form-submit">Submit</button>
						</div>
					</form>
				</div>';
	
	$aStatus = _kindness_get_status($oDetails->id);
	
	if ($aStatus !== false){
		$sCommentUserType = ($aStatus["iUserId"] == 1) ? "admin":_kindness_check_user_type($aStatus["iUserId"]);
	}
	
	if (!$bMentor && !$bMod && !$bAdmin && $oDetails->iUserId == $user->uid && 
			$aStatus !== false && !$aStatus["bApproved"]){
		
		/*$sOutput .= '<div align="right" style="padding-top:5px;">
						<button id="btnEdit" type="button" name="btnEdit" class="form-submit"">Edit Kindness Form</button>
					</div>';*/
	}
	
	// Temporariliy disable the buttons unconditional
	// TODO: Analyse and fix the logic
	// $sOutput .= ($sUserType == "child" || ($bMentor && $bMod && $bAdmin)) ? "":$sButtons;
	
	$iCommentCount = 0;
	$sCommentHeader = '<table style="margin-top:10px; width:100%;">
						<tr>
							<td colspan="2"><h2>Comments</h2></td>
						</tr>';
	$sCommentFooter = '</table>';
	$sComment = "";
	$sqlComment = "SELECT A.iUserId, B.name, A.sComment, 
						DATE_FORMAT(A.dDatetime, '%M %e, %Y') AS sDate, 
						IF(A.bApproved = '1', 'Approved', 'Denied') AS sStatus
					FROM kindness_comment A
					INNER JOIN users B ON B.uid = A.iUserId
					WHERE A.iSubmitId = %d";
	$oCommentResult = db_query($sqlComment, $oDetails->id);
	
	while ($oComment = db_fetch_object($oCommentResult)){
		$iCommentCount++;
		
		$sComment .= ($sComment != "") ? '<tr><td style="padding-bottom:10px;"></td></tr>':'';
		$sComment .= '<tr>
							<td style="width:100px;">Name:</td>
							<td>'._kindness_get_name($oComment->iUserId).' <em>('.$oComment->name.')</em></td>
						</tr>
						<tr>
							<td>Date:</td>
							<td>'.$oComment->sDate.'</td>
						</tr>
						<tr>
							<td>Comment:</td>
							<td>'.$oComment->sComment.'</td>
						</tr>
						<tr>
							<td>Status:</td>
							<td>'.$oComment->sStatus.'</td>
						</tr>';
	}
	
	$sComment = ($iCommentCount > 0) ? $sCommentHeader.$sComment.$sCommentFooter:'';
        
	$user_post = user_ext_profile_user_wall_display_account_page($user,$oDetails->id);
	//if ($bAjax)
		die($sOutput.$sComment.$user_post);
	//else
	//return $sOutput.$sComment;
}


function kindness_list_details2($iSubmitId, $bPending="true", $env){
	global $user;
	
	$sUserType = ($user->uid == 1) ? "admin":_kindness_check_user_type();
	$sLinkName = ($bPending == "true") ? "Pending":"Approved";
	$sLinkHref = ($bPending == "true") ? "list":"approved";
	
	$aTrail = array(
					l("Home", "<front>"),
					l("Good Deeds", "kindness"),
					l($sLinkName, "kindness/".$sLinkHref),
					l("Details", "kindness/details/".$iSubmitId)
				);
	
	drupal_set_breadcrumb($aTrail);
	drupal_add_js('var kindness_sBasePath = "'.base_path().'";', "inline");
	
	$sqlDetails = "SELECT A.id, A.iUserId, A.workz_image, B.name, B.picture as benefactor_picture, C.picture as beneficiary_picture, D.picture as reporter_picture,D.name as reporter_name, A.dDatetime, DATE_FORMAT(A.dDatetime, '%M %e, %Y') AS sDate, 
						A.iDuration AS iKindnessMins, (A.iDuration/60) AS iKindnessHours, A.sTitle, A.sDesc, A.sToWhom,
						A.sLocation, A.beneficiary_address, A.bPromised, A.sToWhomType, A.bApprovedMentor, A.bApprovedMod, A.bApprovedAdmin, A.*
					FROM kindness_submit A
					LEFT JOIN users B ON B.uid = A.iUserId
					LEFT JOIN users C ON C.uid = A.beneficiary_id
					LEFT JOIN users D ON D.uid = A.reporter_id
					WHERE A.id = %d ORDER BY A.date_submitted AND
					(A.iUserId IS NOT NULL OR A.is_benefactor_anonymous = 1) AND
					(A.beneficiary_id IS NOT NULL OR A.is_beneficiary_anonymous = 1)";
	$oDetails = db_fetch_object(db_query($sqlDetails, $iSubmitId));
	
	$iKindnessHours = (float)$oDetails->iKindnessHours;
	$iKindnessHours = ($iKindnessHours > 0) ? $iKindnessHours:0;
	$iTimeHour = intval($iKindnessHours);
	$iTimeMin = round(($iKindnessHours - floor($iKindnessHours)) * 60);
	
	$bWithMentor = user_hierarchy_verify($oDetails->iUserId);
	$bMentor = ($oDetails->bApprovedMentor == 1) ? true:false;
	$bMod = ($oDetails->bApprovedMod == 1) ? true:false;
	$bAdmin = ($oDetails->bApprovedAdmin == 1) ? true:false;
	
	if (!$bMentor && !$bMod && !$bAdmin){
		$sStatus = "Pending (Mentor)";
	}elseif ($bMentor && !$bMod && !$bAdmin){
		$sStatus = "Pending (Moderator)";
	}elseif ($bMentor && $bMod && !$bAdmin){
		$sStatus = "Pending (Admin)";
	}elseif ($bMentor && $bMod && $bAdmin){
		$sStatus = "<b>Approved</b>";
	}
	
	if($env == 'ext'){
	$colork = '#444';
	} else{
	$colork = '#444';
	}

	$sComment = "";
	$sqlComment = "SELECT A.iUserId, B.name, A.sComment, 
						DATE_FORMAT(A.dDatetime, '%M %e, %Y') AS sDate,
						A.dDatetime as commentDateTime
					FROM kindness_comment A
					INNER JOIN users B ON B.uid = A.iUserId
					WHERE A.iSubmitId = %d
					UNION ALL
					SELECT D.iUserId, E.name, D.sComment, 
						DATE_FORMAT(D.dDatetime, '%M %e, %Y') AS sDate,
						D.dDatetime as commentDateTime
					FROM booster_comments D
					INNER JOIN users E ON E.uid = D.iUserId
					WHERE D.iSubmitId = %d
					ORDER BY commentDateTime ASC";
	$oCommentResult = db_query($sqlComment, $oDetails->id, $oDetails->id);
	
	$sComment .= '<div id="commentModalContainer">';
	while ($oComment = db_fetch_object($oCommentResult)){
		$iCommentCount++;
		
		$sComment .= '<div>'. $oComment->name . '</div><div style="margin-bottom:10px;">' .$oComment->sComment .'</div>';
	}
	$sComment .= '</div>';
	
	$sComment = ($iCommentCount > 0) ? $sCommentHeader.$sComment.$sCommentFooter:'<div id="commentModalContainer"></div>';

	$iKindnessHours = (float)$oDetails->iDuration/60;
	$iKindnessHours = ($iKindnessHours > 0) ? $iKindnessHours:0;
	$iTimeHour = intval($iKindnessHours);
	$iTimeMin = round(($iKindnessHours - floor($iKindnessHours)) * 60);

	$likeCount = _get_workz_like($oDetails->id);

	$isLikedByLoggedInUser = '';

	if ($user->uid > 0 && $likeCount > 0) {
		$sqlIsLikeByLoggedInUser = "SELECT COUNT(id) FROM kindness_like WHERE iSubmitId = %d AND iUserId = " . $user->uid;
		$isLikedByLoggedInUser = db_result(db_query($sqlIsLikeByLoggedInUser, $oDetails->id)) > 0 ? 'active' : '';
	}

	$sqlCheckBoosted = 'SELECT COUNT(1) FROM booster_comments WHERE iSubmitId =  %d AND iUserId = %d';

	$checkBoosted = db_result(db_query($sqlCheckBoosted, $iSubmitId, $user->uid));

	//_kindness_converttoID
	$sOutput = '<div >';
	$sOutput .= '<div style="    border: 2px solid #b3b1b1;
    border-radius: 30px;padding: 10px 20px 20px 10px;margin-bottom: 30px;">';
	$sOutput .= '<h2 style="padding-top:5px;color:'.$colork.';font-weight:bold;text-align:center;margin-bottom:20px;">Samaritan Workz Map</h2>';
	$sOutput .= '<iframe src="/map.php?address='. $oDetails->sLocation .'&id='. $oDetails->id .'" style="outline: none;
    border: none;
    width: 100%;
    height: 300px;"/>';

	$sOutput .= '<p style="    margin-top: 15px;
    text-align: center;">';
	$sOutput .= 'The red pin marker on the map shows the approximate location where the Samaritan workz was performed';

	$sOutput .= '</p>';
		$sOutput .= '</div>';



	$sOutput .= '<div style="border: 2px solid #b3b1b1;
    border-radius: 30px;padding: 10px 20px 20px 10px;margin-bottom: 30px;">';
	$sOutput .= '<h2 style="padding-top:5px;color:'.$colork.';font-weight:bold;text-align:center;margin-bottom:20px;">Samaritan</h2>';
	$is_benefactor_anonymous = $oDetails->workz_type == 'Random Kindness Workz' || $oDetails->is_benefactor_anonymous;
	$is_beneficiary_anonymous = $oDetails->workz_type == 'Random Kindness Workz' || $oDetails->is_beneficiary_anonymous;

	if (!$is_benefactor_anonymous) {
		$sOutput .= '<div style="display:flex;padding:20px" class="with-image-container">';
		$sOutput .= '<div style="width:48%;margin-right: auto;text-align: center;" class="left-side">';
		$sOutput .= '<img style="width: 50%;border: 1px solid #CCC;" onerror="this.onerror=null; this.src=\'hud_files/images/no_image_placeholder.png\'" alt="" src="/'. $oDetails->benefactor_picture .'" />';

		$sOutput .= '</div>';
		$sOutput .= '<div style="width:48%;margin-right: auto;">';
			$sOutput .= '<div style="padding-top:5px;color:'.$colork.';font-weight:bold;">Samaritan Name</div>';
			
			$sOutput .= '<div>'.ucwords($oDetails->benefactor_name).'</div>';

			// $sOutput .= '<div style="padding-top:5px;color:'.$colork.';font-weight:bold;">Citation Award Date</div>';
			
			// $sOutput .= '<div>'.ucwords($oDetails->sDate).'</div>';

			$sOutput .= '<div style="margin-top: 10px;padding-top:5px;color:'.$colork.';font-weight:bold;">Employer</div>';
			
			$sOutput .= '<div>' . _kindness_department_address_and_name($oDetails->iUserId) .'</div>';
			$sOutput .= '</div>';
		$sOutput .= '</div>';
		
		$sOutput .= '<hr style="margin: 10px 0px 10px 0px;border-color:'.$colork.';" />';
	}
	
	$sOutput .= '<div style="display:flex;padding:20px" class="with-image-container">';
		$sOutput .= '<div style="width:48%;margin-right: auto;">';


			$sOutput .= '<div style="width:48%;margin-right: auto;text-align: center;">';
				$sOutput .= '<img style="width: 50%;border: 1px solid #CCC;" onerror="this.onerror=null; this.src=\'hud_files/images/no_image_placeholder.png\'" src="/hud_files/uploads/workz/'. $oDetails->workz_image .'" />';
			$sOutput .= '</div>';
			// if ($is_benefactor_anonymous) {
			// 	$sOutput .= '<div style="padding-top:5px;color:'.$colork.';font-weight:bold;">Samaritan Name</div>';
					
			// 	$sOutput .= '<div>Anonymous</div>';
			// }
			$sOutput .= '<div class="citation-report-social-actions-container">
							<div class="citation-report-social-actions like '. $isLikedByLoggedInUser . '" style="margin-right:5px" rel="'. $oDetails->id .'">
								<i class="fas fa-thumbs-up"></i> <span>'. _number_format_short($likeCount) .'</pan>
							</div>';
			if (array_key_exists(26, $user->roles) && $checkBoosted == 0) {
				$sOutput .= '<div class="citation-report-social-actions boost_citation_popup" citation_id="'. $oDetails->id .'" style="margin-right:5px" id="boost">
								<i class="fas fa-comment"></i> Boost
							</div>';
			}
			$sOutput .= '<div class="citation-report-social-actions share" rel="'. $oDetails->id .'" style="	    margin-left:auto"> 
								<i class="fas fa-share"></i> Share
							</div>
						</div>';
			$sOutput .= '<div style="padding-top:5px;color:'.$colork.';font-weight:bold;">Workz Title</div>';
			
			$sOutput .= '<div>'.ucwords($oDetails->sTitle).'</div>';

			$sOutput .= '<div style="margin-top: 10px;padding-top:5px;color:'.$colork.';font-weight:bold;">Workz Description</div>';
			
			$sOutput .= '<div>'.ucwords($oDetails->sDesc).'</div>';

			$sOutput .= '<div class="read-more-container" style="margin-top: 10px;">';
				$sOutput .= '<a href="#" class="readmore" target="workz_report_details" style="margin-top: 10px;
    color: #444;">Read More</a>';
				$sOutput .= '<div id="workz_report_details" class="d-none">';
					$sOutput .= '<div style="margin-top: 10px;padding-top:5px;color:'.$colork.';font-weight:bold;">Date</div>';
					
					$sOutput .= '<div>'.$oDetails->sDate.'</div>';

					$sOutput .= '<div style="padding-top:5px;color:'.$colork.';font-weight:bold;">Location</div>';
					
					$sOutput .= '<div>'.ucwords($oDetails->sLocation).'</div>';


					$sOutput .= '<div style="margin-top: 10px;padding-top:5px;color:'.$colork.';font-weight:bold;">Type</div>';
					
					$sOutput .= '<div>'.ucwords($oDetails->workz_type).'</div>';

					$sOutput .= '<div style="margin-top: 10px;padding-top:5px;color:'.$colork.';font-weight:bold;">Duration</div>';
					
					$sOutput .= '<div style="margin-bottom: 10px;">'.$iTimeHour.' hour(s) and '.$iTimeMin.' minute(s)'.'</div>';

					$sOutput .= '<a href="#" class="showless" target="workz_report_details" style="
    color: #444;margin-top: 20px;">Show Less</a>';
				$sOutput .= '</div>';
			$sOutput .= '</div>';

			$sOutput .= '<div style="margin-top: 10px;padding-top:5px;color:'.$colork.';font-weight:bold;">Comments</div>';
					
			$sOutput .= $sComment;
			
			$sOutput .= '</div>';
		$sOutput .= '</div>';
	$sOutput .= '</div>';
	if (!$is_beneficiary_anonymous) {
		$sOutput .= '<div style="border: 2px solid #b3b1b1;
    border-radius: 30px;padding: 10px 20px 20px 10px;margin-top: 20px;">';
			$sOutput .= '<div style="display:flex;padding:20px" class="with-image-container">';
				$sOutput .= '<div style="margin-top: 10px;width:48%;margin-right: auto;">';
					$sOutput .= '<div style="padding-top:5px;color:'.$colork.';font-weight:bold;">Beneficiary Name</div>';
					
					$sOutput .= '<div>'.ucwords($oDetails->sToWhom).'</div>';

					$sOutput .= '<div style="margin-top: 10px;padding-top:5px;color:'.$colork.';font-weight:bold;">Date</div>';
					
					$sOutput .= '<div>'.ucwords($oDetails->sDate).'</div>';

					$sOutput .= '<div style="margin-top: 10px;padding-top:5px;color:'.$colork.';font-weight:bold;">Location</div>';
					
					$sOutput .= '<div>'.ucwords($oDetails->beneficiary_address).'</div>';

				$sOutput .= '</div>';
			$sOutput .= '<div style="width:48%;margin-right: auto;text-align: center;">';
				$sOutput .= '<img style="width: 50%;border: 1px solid #CCC;" onerror="this.onerror=null; this.src=\'hud_files/images/no_image_placeholder.png\'" src="'. $oDetails->beneficiary_picture .'" />';
			$sOutput .= '</div>';
		$sOutput .= '</div>';
	}else{
		$sOutput .= '<div style="border: 2px solid #b3b1b1;
    border-radius: 30px;padding: 10px 20px 20px 10px;margin-top: 20px;">';
			$sOutput .= '<div style="display:flex;padding:20px" class="with-image-container">';
				$sOutput .= '<div style="width:48%;margin-right: auto;">';
					$sOutput .= '<div style="margin-top: 10px;padding-top:5px;color:'.$colork.';font-weight:bold;">Beneficiary Name</div>';
					
					$sOutput .= '<div>Anonymous</div>';

					$sOutput .= '<div style="margin-top: 10px;padding-top:5px;color:'.$colork.';font-weight:bold;">Date</div>';
					
					$sOutput .= '<div>'.ucwords($oDetails->sDate).'</div>';

				$sOutput .= '</div>';
		$sOutput .= '</div>';
	}
	$sOutput .= '</div>';
	$sOutput .= '<div style="border: 2px solid #b3b1b1;
    border-radius: 30px;padding: 10px 20px 20px 10px;margin-top: 20px;">';
		$sOutput .= '<div style="display:flex;padding:20px" class="with-image-container">';
			$sOutput .= '<div style="width:48%;margin-right: auto;">';
				$sOutput .= '<div style="margin-top: 10px;padding-top:5px;color:'.$colork.';font-weight:bold;">Reporter Name</div>';
				
				$sOutput .= '<div>'.ucwords($oDetails->reporter_name).'</div>';

				$sOutput .= '<div style="margin-top: 10px;padding-top:5px;color:'.$colork.';font-weight:bold;">Employer</div>';
				
				$sOutput .= '<div>'. _kindness_department_address_and_name($oDetails->reporter_id) . '</div>';

			$sOutput .= '</div>';
		$sOutput .= '<div style="width:48%;margin-right: auto;text-align: center;">';
			$sOutput .= '<img style="width: 50%;border: 1px solid #CCC;" onerror="this.onerror=null; this.src=\'hud_files/images/no_image_placeholder.png\'" src="/'. $oDetails->reporter_picture .'" />';
		$sOutput .= '</div>';
	$sOutput .= '</div>';
	$sOutput .= '</div>';
	$sOutput .= '</div>';

	// TODO: Logic for editing
	if ($user->uid > 0) {

		$can_edit = false;
		if (_reviewer_anonymous_status($user) && $oDetails->iUserId == 0) {
			$can_edit = true;
		}else {
			$aHopefuls = _kindness_mentor_hopeful($user->uid);
			if (in_array($oDetails->iUserId, $aHopefuls)) {
				$can_edit = true;
			}
		}
		
		if (in_array('eVolunteer - eAdministrator', $user->roles)) {
			$can_edit = true;
		}
		
		if ($oDetails->reporter_id == $user->uid) {
			$can_edit = true;
		}

		if ($can_edit) {
			$sOutput .= '<div style="margin-top: 20px;text-align: center;">
					<a class="btn-success edit-workz" style="width: 80%;display: block;margin: auto;font-size: 1.2rem;padding: 6px;" rel="'. $oDetails->id .'">
						Edit Workz
					</a>
				</div>';
		}
	}

	if (in_array('eVolunteer - eAdministrator', $user->roles)) {

		$sOutput .= '<div style="margin-top: 20px;text-align: center;">
				<a class="btn-danger delete-single-workz" style="width: 80%;display: block;margin: auto;font-size: 1.2rem;padding: 6px;" rel="'. $oDetails->id .'">
					Delete Workz
				</a>
			</div>';
	}

	die($sOutput);
}
function kindness_list_details2_bak2($iSubmitId, $bPending="true", $env){
	global $user;
	
	$sUserType = ($user->uid == 1) ? "admin":_kindness_check_user_type();
	$sLinkName = ($bPending == "true") ? "Pending":"Approved";
	$sLinkHref = ($bPending == "true") ? "list":"approved";
	
	$aTrail = array(
					l("Home", "<front>"),
					l("Good Deeds", "kindness"),
					l($sLinkName, "kindness/".$sLinkHref),
					l("Details", "kindness/details/".$iSubmitId)
				);
	
	drupal_set_breadcrumb($aTrail);
	drupal_add_js('var kindness_sBasePath = "'.base_path().'";', "inline");
	
	$sqlDetails = "SELECT A.id, A.iUserId, B.name, A.dDatetime, DATE_FORMAT(A.dDatetime, '%M %e, %Y') AS sDate, 
						A.iDuration AS iKindnessMins, (A.iDuration/60) AS iKindnessHours, A.sTitle, A.sDesc, A.sToWhom,
						A.sLocation, A.bPromised, A.sToWhomType, A.bApprovedMentor, A.bApprovedMod, A.bApprovedAdmin, A.*
					FROM kindness_submit A
					LEFT JOIN users B ON B.uid = A.iUserId
					WHERE A.id = %d AND
					(A.iUserId IS NOT NULL OR A.is_benefactor_anonymous = 1) AND
					(A.beneficiary_id IS NOT NULL OR A.is_beneficiary_anonymous = 1)";
	$oDetails = db_fetch_object(db_query($sqlDetails, $iSubmitId));
	
	$iKindnessHours = (float)$oDetails->iKindnessHours;
	$iKindnessHours = ($iKindnessHours > 0) ? $iKindnessHours:0;
	$iTimeHour = intval($iKindnessHours);
	$iTimeMin = round(($iKindnessHours - floor($iKindnessHours)) * 60);
	
	$bWithMentor = user_hierarchy_verify($oDetails->iUserId);
	$bMentor = ($oDetails->bApprovedMentor == 1) ? true:false;
	$bMod = ($oDetails->bApprovedMod == 1) ? true:false;
	$bAdmin = ($oDetails->bApprovedAdmin == 1) ? true:false;
	
	if (!$bMentor && !$bMod && !$bAdmin){
		$sStatus = "Pending (Mentor)";
	}elseif ($bMentor && !$bMod && !$bAdmin){
		$sStatus = "Pending (Moderator)";
	}elseif ($bMentor && $bMod && !$bAdmin){
		$sStatus = "Pending (Admin)";
	}elseif ($bMentor && $bMod && $bAdmin){
		$sStatus = "<b>Approved</b>";
	}
	
	if($env == 'ext'){
	$colork = '#444';
	} else{
	$colork = '#ffe800';
	}

	//_kindness_converttoID
	$sOutput = '<div>';

	$sOutput .= '<h2 style="padding-top:5px;color:'.$colork.';font-weight:bold;">Samaritan Information</h2>';
	$sOutput .= '<div style="padding-top:5px;color:'.$colork.';font-weight:bold;">Samaritan Name</div>';
	
	$sOutput .= '<div>'.ucwords($oDetails->benefactor_name).'</div>';

	$sOutput .= '<div style="padding-top:5px;color:'.$colork.';font-weight:bold;">Samaritan Address</div>';
	
	$sOutput .= '<div>'.ucwords($oDetails->benefactor_address).'</div>';

	$sOutput .= '<div style="padding-top:5px;color:'.$colork.';font-weight:bold;">Samaritan Phone</div>';
	
	$sOutput .= '<div>'.ucwords($oDetails->benefactor_phone).'</div>';

	$sOutput .= '<div style="padding-top:5px;color:'.$colork.';font-weight:bold;">Samaritan Email</div>';
	
	$sOutput .= '<div>'.ucwords($oDetails->benefactor_email).'</div>';
	
	$sOutput .= '<div style="padding-top:5px;color:'.$colork.';font-weight:bold;">Samaritan Anonymous?</div>';
	
	$sOutput .= '<div>'.ucwords($oDetails->is_benefactor_anonymous == '1' ? 'Yes' : 'No').'</div>';

	$sOutput .= '<hr style="margin: 10px 0px 10px 0px;border-color:'.$colork.';" />';

	$sOutput .= '<h2 style="padding-top:5px;color:'.$colork.';font-weight:bold;">Workz Information</h2>';

	$sOutput .= '<div style="padding-top:5px;color:'.$colork.';font-weight:bold;">Workz Title</div>';
	
	$sOutput .= '<div>'.ucwords($oDetails->sTitle).'</div>';

	$sOutput .= '<div style="padding-top:5px;color:'.$colork.';font-weight:bold;">Workz Description</div>';
	
	$sOutput .= '<div>'.ucwords($oDetails->sDesc).'</div>';


	$sOutput .= '<div style="padding-top:5px;color:'.$colork.';font-weight:bold;">Workz Type</div>';
	
	$sOutput .= '<div>'.ucwords($oDetails->workz_type).'</div>';

	$sOutput .= '<div style="padding-top:5px;color:'.$colork.';font-weight:bold;">Workz Date</div>';
	
	$sOutput .= '<div>'.$oDetails->sDate.'</div>';

	$sOutput .= '<hr style="margin: 10px 0px 10px 0px;border-color:'.$colork.';" />';

	$sOutput .= '<h2 style="padding-top:5px;color:'.$colork.';font-weight:bold;">Samaritan Department Information</h2>';

	$sOutput .= '<div style="padding-top:5px;color:'.$colork.';font-weight:bold;">Samaritan Department Name</div>';
	
	$sOutput .= '<div>'.ucwords($oDetails->benefactor_department_name == '' ? '-' : $oDetails->benefactor_department_name).'</div>';

	$sOutput .= '<div style="padding-top:5px;color:'.$colork.';font-weight:bold;">Samaritan Department Address</div>';
	
	$sOutput .= '<div>'.ucwords($oDetails->benefactor_department_address == '' ? '-' : $oDetails->benefactor_department_address ).'</div>';

	$sOutput .= '<div style="padding-top:5px;color:'.$colork.';font-weight:bold;">Samaritan Department Phone</div>';
	
	$sOutput .= '<div>'.ucwords($oDetails->benefactor_department_phone == '' ? '-' : $oDetails->benefactor_department_phone).'</div>';

	$sOutput .= '<div style="padding-top:5px;color:'.$colork.';font-weight:bold;">Samaritan Department Email</div>';
	
	$sOutput .= '<div>'.ucwords($oDetails->benefactor_department_email == '' ? '-': $oDetails->benefactor_department_email).'</div>';

	$sOutput .= '<hr style="margin: 10px 0px 10px 0px;border-color:'.$colork.';" />';

	$sOutput .= '<h2 style="padding-top:5px;color:'.$colork.';font-weight:bold;">Beneficiary Information</h2>';

	$sOutput .= '<div style="padding-top:5px;color:'.$colork.';font-weight:bold;">Beneficiary Name</div>';
	
	$sOutput .= '<div>'.ucwords($oDetails->sToWhom).'</div>';

	$sOutput .= '<div style="padding-top:5px;color:'.$colork.';font-weight:bold;">Beneficiary Address</div>';
	
	$sOutput .= '<div>'.ucwords($oDetails->beneficiary_address).'</div>';

	$sOutput .= '<div style="padding-top:5px;color:'.$colork.';font-weight:bold;">Beneficiary Phone</div>';
	
	$sOutput .= '<div>'.ucwords($oDetails->beneficiary_phone).'</div>';

	$sOutput .= '<div style="padding-top:5px;color:'.$colork.';font-weight:bold;">Beneficiary Email</div>';
	
	$sOutput .= '<div>'.ucwords($oDetails->beneficiary_email).'</div>';

	$sOutput .= '<div style="padding-top:5px;color:'.$colork.';font-weight:bold;">Beneficiary Tyoe</div>';
	
	$sOutput .= '<div>'.ucwords($oDetails->sToWhomType).'</div>';

	$sOutput .= '<div style="padding-top:5px;color:'.$colork.';font-weight:bold;">Beneficiary Anonymous?</div>';
	
	$sOutput .= '<div>'.ucwords($oDetails->is_benefactor_anonymous == '1' ? 'Yes' : 'No').'</div>';

	die($sOutput.$sComment);
}

function kindness_list_details2_bak($iSubmitId, $bPending="true", $env){
	global $user;
	
	$sUserType = ($user->uid == 1) ? "admin":_kindness_check_user_type();
	$sLinkName = ($bPending == "true") ? "Pending":"Approved";
	$sLinkHref = ($bPending == "true") ? "list":"approved";
	
	$aTrail = array(
					l("Home", "<front>"),
					l("Good Deeds", "kindness"),
					l($sLinkName, "kindness/".$sLinkHref),
					l("Details", "kindness/details/".$iSubmitId)
				);
	
	drupal_set_breadcrumb($aTrail);
	drupal_add_js('var kindness_sBasePath = "'.base_path().'";', "inline");
	
	$sqlDetails = "SELECT A.id, A.iUserId, B.name, A.dDatetime, DATE_FORMAT(A.dDatetime, '%M %e, %Y') AS sDate, 
						A.iDuration AS iKindnessMins, (A.iDuration/60) AS iKindnessHours, A.sTitle, A.sDesc, A.sToWhom,
						A.sLocation, A.bPromised, A.sToWhomType, A.bApprovedMentor, A.bApprovedMod, A.bApprovedAdmin
					FROM kindness_submit A
					LEFT JOIN users B ON B.uid = A.iUserId
					WHERE A.id = %d AND
					(A.iUserId IS NOT NULL OR A.is_benefactor_anonymous = 1) AND
					(A.beneficiary_id IS NOT NULL OR A.is_beneficiary_anonymous = 1)";
	$oDetails = db_fetch_object(db_query($sqlDetails, $iSubmitId));
	
	$iKindnessHours = (float)$oDetails->iKindnessHours;
	$iKindnessHours = ($iKindnessHours > 0) ? $iKindnessHours:0;
	$iTimeHour = intval($iKindnessHours);
	$iTimeMin = round(($iKindnessHours - floor($iKindnessHours)) * 60);
	
	$bWithMentor = user_hierarchy_verify($oDetails->iUserId);
	$bMentor = ($oDetails->bApprovedMentor == 1) ? true:false;
	$bMod = ($oDetails->bApprovedMod == 1) ? true:false;
	$bAdmin = ($oDetails->bApprovedAdmin == 1) ? true:false;
	
	if (!$bMentor && !$bMod && !$bAdmin){
		$sStatus = "Pending (Mentor)";
	}elseif ($bMentor && !$bMod && !$bAdmin){
		$sStatus = "Pending (Moderator)";
	}elseif ($bMentor && $bMod && !$bAdmin){
		$sStatus = "Pending (Admin)";
	}elseif ($bMentor && $bMod && $bAdmin){
		$sStatus = "<b>Approved</b>";
	}
	
	if($env == 'ext'){
	$colork = '#444';
	} else{
	$colork = '#ffe800';
	}
	
	//_kindness_converttoID
	$sOutput = '<div>';
	$sOutput = '<div style="padding-top:5px;color:'.$colork.';font-weight:bold;">Workz Title</div>';
	
	$sOutput .= '<div>'.ucwords($oDetails->sTitle).'</div>';
	
	$sOutput .= '<div style="padding-top:5px;color:'.$colork.';font-weight:bold;">Description of Citation</div>';
	
	$sOutput .= '<div>'.ucfirst($oDetails->sDesc).'</div>';
	
	$sOutput .= '<div style="padding-top:5px;color:'.$colork.';font-weight:bold;">Who was the Citation performed for</div>';
	
    $sOutput .= '<div>'.ucwords($oDetails->sToWhom).'</div>';
	
	$sOutput .= '<div style="padding-top:5px;color:'.$colork.';font-weight:bold;">Where was Citation performed</div>'; 
	
    $sOutput .= '<div>'.$oDetails->sLocation.'</div>';
	
	$sOutput .= '<div style="padding-top:5px;color:'.$colork.';font-weight:bold;">Hopefuls Relationship with Samaritan</div>';
						
	$sOutput .= '<div>'.$oDetails->sToWhomType.'</div>';
	
	$sOutput .= '<div style="padding-top:5px;color:'.$colork.';font-weight:bold;">Duration of Citation</div>';
	
	$sOutput .= '<div>'.$iTimeHour.' hour(s) and '.$iTimeMin.' minute(s)'.'</div>';
	
	$sOutput .= '<div style="padding-top:5px;color:'.$colork.';font-weight:bold;">Date of Citation</div>';
    
	$arr_Month = array(1 => "Jan", 2 => "Feb", 3 => "Mar", 4 => "Apr", 5 => "may", 6 => "Jun", 7 => "Jul",
						8 => "Aug", 9 => "Sep", 10 => "Oct", 11 => "Nov", 12 => "Dec"
				);
	
	$sOutput .= '<div>'.$oDetails->sDate.'</div>';	
	
	$sOutput .= '</div>';
	
	$sButtonPost = '<button type="button" id="kindness_button_approve" class="form-submit" style="width:100px;display:none">Approve</button>
					<button type="button" id="kindness_button_deny" class="form-submit" style="width:100px;display:none">Deny</button>';
        $user_posts = user_ext_profile_user_wall_display( $user,$iSubmitId );
        
	$sButtons = ((!$bWithMentor) ? '<div align="center" style="padding-top:15px; color:red;">You cannot approve nor deny this Good Deed because there are no mentors and moderator assigned to this child, yet.</div>':'<div id="kindness_button" align="right">'.$sButtonPost.'</div>').'
				
				<div id="kindness_comment" style="display:none; width:300px; border: 5px solid #173102; padding:5px; background-color:#E2E2D3;">
					<form action="'.base_path().'kindness/details/submit" method="post">
						<input type="hidden" id="iSubmitId" name="iSubmitId" value="'.$oDetails->id.'" />
						<input type="hidden" id="iChildId" name="iChildId" value="'.$oDetails->iUserId.'" />
						<input type="hidden" id="iAdultId" name="iAdultId" value="'.$user->uid.'" />
						<input type="hidden" id="iDuration" name="iDuration" value="'.$oDetails->iKindnessMins.'" />
						<input type="hidden" id="bApprove" name="bApprove" value="" />
						
						Comment for <span id="kindness_comment_type"></span> this good deed:<br />
						<textarea id="sComment" name="sComment" style="width:300px; height:100px;"></textarea><br />
						<div align="right" style="padding-top:5px;">
							<button id="btnCancel" type="button" name="btnCancel" class="form-submit">Cancel</button>
							<button id="btnSubmit" type="submit" name="btnSubmit" class="form-submit">Submit</button>
						</div>
					</form>
				</div>';
        $sButtons .= $user_posts;
	
	$aStatus = _kindness_get_status($oDetails->id);
	
	if ($aStatus !== false){
		$sCommentUserType = ($aStatus["iUserId"] == 1) ? "admin":_kindness_check_user_type($aStatus["iUserId"]);
	}
	
	if (!$bMentor && !$bMod && !$bAdmin && $oDetails->iUserId == $user->uid && 
			$aStatus !== false && !$aStatus["bApproved"]){
		
		/*$sOutput .= '<div align="right" style="padding-top:5px;">
						<button id="btnEdit" type="button" name="btnEdit" class="form-submit"">Edit Kindness Form</button>
					</div>';*/
	}
	
	$sOutput .= ($sUserType == "child" || ($bMentor && $bMod && $bAdmin)) ? "":$sButtons;
	/*
	$iCommentCount = 0;
	$sCommentHeader = '<table style="margin-top:10px; width:100%;">
						<tr>
							<td colspan="2"><h2>Comments</h2></td>
						</tr>';
	$sCommentFooter = '</table>';
	$sComment = "";
	$sqlComment = "SELECT A.iUserId, B.name, A.sComment, 
						DATE_FORMAT(A.dDatetime, '%M %e, %Y') AS sDate, 
						IF(A.bApproved = '1', 'Approved', 'Denied') AS sStatus
					FROM kindness_comment A
					INNER JOIN users B ON B.uid = A.iUserId
					WHERE A.iSubmitId = %d";
	$oCommentResult = db_query($sqlComment, $oDetails->id);
	
	while ($oComment = db_fetch_object($oCommentResult)){
		$iCommentCount++;
		
		$sComment .= ($sComment != "") ? '<tr><td style="padding-bottom:10px;"></td></tr>':'';
		$sComment .= '<tr>
							<td style="width:100px;">Name:</td>
							<td>'._kindness_get_name($oComment->iUserId).' <em>('.$oComment->name.')</em></td>
						</tr>
						<tr>
							<td>Date:</td>
							<td>'.$oComment->sDate.'</td>
						</tr>
						<tr>
							<td>Comment:</td>
							<td>'.$oComment->sComment.'</td>
						</tr>
						<tr>
							<td>Status:</td>
							<td>'.$oComment->sStatus.'</td>
						</tr>';
	}
	
	$sComment = ($iCommentCount > 0) ? $sCommentHeader.$sComment.$sCommentFooter:'';
	*/
	
	//if ($bAjax)
		die($sOutput.$sComment);
	//else
	//return $sOutput.$sComment;
}

function kindness_callback_comments(){
	$iKindnessId = (isset($_REQUEST["iKindnessId"])) ? $_REQUEST["iKindnessId"]:'';
	
	if ($iKindnessId != ""){
		$sqlComment = "SELECT A.iUserId, B.name, A.sComment, 
							DATE_FORMAT(A.dDatetime, '%M %e, %Y') AS sDate, 
							IF(A.bApproved = '1', 'Approved', 'Denied') AS sStatus
						FROM kindness_comment A
						INNER JOIN users B ON B.uid = A.iUserId
						WHERE A.iSubmitId = %d
						UNION ALL
						SELECT D.iUserId, E.name, D.sComment, 
							DATE_FORMAT(D.dDatetime, '%M %e, %Y') AS sDate,
							'0' AS sStatus
						FROM booster_comments D
						INNER JOIN users E ON E.uid = D.iUserId
						WHERE D.iSubmitId = %d";
		$oCommentResult = db_query($sqlComment, $iKindnessId, $iKindnessId);
		
		$iCommentCount = 0;
		$sCommentHeader = '<table style="margin-top:10px; width:100%;">';
		$sCommentFooter = '</table>';
		$sComment = '';
		
		while ($oComment = db_fetch_object($oCommentResult)){
			$iCommentCount++;
			
			$sComment .= ($sComment != "") ? '<tr><td colspan="2" style="padding-bottom:10px;"></td></tr>':'';
			$sComment .= '<tr>
								<td style="width:100px;">Name:</td>
								<td>'._kindness_get_name($oComment->iUserId).' <em>('.$oComment->name.')</em></td>
							</tr>
							<tr>
								<td>Date:</td>
								<td>'.$oComment->sDate.'</td>
							</tr>
							<tr>
								<td style="vertical-align:top;">Comment:</td>
								<td>'.$oComment->sComment.'</td>
							</tr>';
			if ($oComment->sStatus != '0') {

				$sComment .=	'<tr>
									<td>Status:</td>
									<td>'.$oComment->sStatus.'</td>
								</tr>';
			}
		}
		
		echo (($iCommentCount > 0) ? $sCommentHeader.$sComment.$sCommentFooter: 'No comments available');
	}else{
		echo 'Invalid entry point. Missing parameter.';
	}
	
	exit;
}

function workz2_boosted_comments(){
	global $user;
	$iKindnessId = (isset($_REQUEST["iKindnessId"])) ? $_REQUEST["iKindnessId"]:'';
	
	if ($iKindnessId != ""){
		$sqlComment = "
						SELECT D.iUserId, E.name, D.sComment, 
							DATE_FORMAT(D.dDatetime, '%M %e, %Y') AS sDate,
							'0' AS sStatus
						FROM booster_comments D
						INNER JOIN users E ON E.uid = D.iUserId
						WHERE D.iSubmitId = %d AND D.iUserId = %d";
		$oCommentResult = db_query($sqlComment, $iKindnessId, $user->uid);
		
		$iCommentCount = 0;
		$sCommentHeader = '<table style="margin-top:10px; width:100%;">';
		$sCommentFooter = '</table>';
		$sComment = '';
		
		while ($oComment = db_fetch_object($oCommentResult)){
			$iCommentCount++;
			
			$sComment .= ($sComment != "") ? '<tr><td colspan="2" style="padding-bottom:10px;"></td></tr>':'';
			$sComment .= '<tr>
								<td style="width:100px;">Name:</td>
								<td>'._kindness_get_name($oComment->iUserId).' <em>('.$oComment->name.')</em></td>
							</tr>
							<tr>
								<td>Date:</td>
								<td>'.$oComment->sDate.'</td>
							</tr>
							<tr>
								<td style="vertical-align:top;">Comment:</td>
								<td>'.$oComment->sComment.'</td>
							</tr>';
			if ($oComment->sStatus != '0') {

				$sComment .=	'<tr>
									<td>Status:</td>
									<td>'.$oComment->sStatus.'</td>
								</tr>';
			}
		}
		
		echo (($iCommentCount > 0) ? $sCommentHeader.$sComment.$sCommentFooter: 'No comments available');
	}else{
		echo 'Invalid entry point. Missing parameter.';
	}
	
	exit;
}

function kindness_list_details_edit(&$aFormState, $iSubmitId){
	$sJavaScript = 'if ($("div.messages.status").length == 1) setTimeout("location=\''.base_path().'kindness/details/'.$iSubmitId.'/true\'", 3000)';
	drupal_add_js($sJavaScript, "inline");
	
	$aTrail = array(
					l("Home", "<front>"),
					l("Good Deeds", "kindness"),
					l("Kindness Form Update", "kindness/list/details/".$iSubmitId."/edit")
				);
	
	drupal_set_breadcrumb($aTrail);
	
	$sqlKindness = "SELECT id, iUserId, LEFT(dDatetime, 10) AS dDate, (iDuration/60) AS iKindnessHours, sTitle, sDesc, sToWhom,
						bApprovedMentor, bApprovedMod, bApprovedAdmin
					FROM kindness_submit
					WHERE id = %d";
	$oKindness = db_fetch_object(db_query($sqlKindness, $iSubmitId));
		
	$aForm['kindness_title'] = array(
		'#type' => 'textfield',
		'#title' => 'Title',
		'#required' => true,
		'#default_value' => $oKindness->sTitle,
		'#description' => 'Give your Good Deed a title to start with.',
	);
	
	$aForm['kindness_desc'] = array(
		'#type' => 'textarea',
		'#title' => 'Description',
		'#required' => true,
		'#default_value' => $oKindness->sDesc,
		'#cols' => 30,
		'#rows' => 5,
		'#description' => 'Describe what you did and where it is located.',
	);
	
	$aForm['kindness_duration'] = array(
		'#type' => 'fieldset',
		'#title' => t('Duration'),
		'#collapsible' => FALSE,
		'#collapsed' => TRUE,
		'#description' => "Specify how long you did your Good Deed."
	);
	
	$aTimeHours = array();
	$aTimeMins = array();
	
	for ($h=0; $h<=480; $h+=60){
		$sUnit = ($h > 60) ? "hours":"hour";
		$aTimeHours[$h] = ($h/60)." ".$sUnit;
	}
	
	for ($m=0; $m<=59; $m++){
		$sUnit = ($m > 0) ? "minutes":"minute";
		$sMin = str_pad($m, 2, "0", STR_PAD_LEFT);
		
		$aTimeMins[$sMin] = $sMin." ".$sUnit;
	}
	
	$iKindnessHours = $oKindness->iKindnessHours;
	$iTimeHours = intval($iKindnessHours) * 60;
	$iTimeMins = ($iKindnessHours - floor($iKindnessHours)) * 60;
	
	$aForm['kindness_duration']["iHour"] = array(
		'#type' => 'select',
		'#title' => 'Duration (hours)',
		'#required' => true,
		'#default_value' => $iTimeHours,
		'#options' => $aTimeHours,
		'#description' => 'The Hour part of the duration.'
	);
	
	$aForm['kindness_duration']["iMinute"] = array(
		'#type' => 'select',
		'#title' => 'Duration (minutes)',
		'#required' => true,
		'#default_value' => $iTimeMins,
		'#options' => $aTimeMins,
		'#description' => 'The Minute part of the duration.'
	);
	
	$aDate = explode("-", $oKindness->dDate);
	$aNewData = array("month" => (int)$aDate[1], "day" => (int)$aDate[2], "year" => $aDate[0]);
	
	$aForm['kindness_date'] = array(
		'#type' => 'date',
		'#title' => 'Date',
		'#required' => true,
		'#default_value' => $aNewData,
		'#description' => 'The Date when you did your Dood Deed.'
	);
	
	$aForm['kindness_whom'] = array(
		'#type' => 'textfield',
		'#title' => 'The Name of the person you did your Good Deed for',
		'#required' => true,
		'#default_value' => $oKindness->sToWhom
	);
	
	$aForm['iSubmitId'] = array('#type' => 'hidden', '#value' => $iSubmitId);
	$aForm['btnUpdate'] = array("#type" => "submit", "#value" => "Update Kindness Form");
	
	return $aForm;
}

function kindness_list_details_edit_validate($oForm, &$aFormState){
	$aFormVal = $aFormState["values"];
	$iHour = $aFormVal["iHour"];
	$iMinute = $aFormVal["iMinute"];
	
	if ($iHour == 0 && $iMinute == 0){
		form_set_error("iHour", "You must specify a valid time for the Duration (hours).");
		form_set_error("iMinute", "You must specify a valid time for the Duration (minutes).");
	}
}

function kindness_list_details_edit_submit($oForm, &$aFormState){
	$aFormVal = $aFormState["values"];
	$aDate = $aFormVal["kindness_date"];
	$dDate = $aDate["year"]."-".$aDate["month"]."-".$aDate["day"];
	$iDurationMins = $aFormVal["iHour"] + $aFormVal["iMinute"];
	
	$sqlUpdate = "UPDATE {kindness_submit}
					SET iDuration = %d,
						sTitle = '%s',
						sDesc = '%s',
						sToWhom = '%s'
					WHERE id = %d";
	db_query(
		$sqlUpdate,
		array(
			$iDurationMins, 
			ucwords($aFormVal["kindness_title"]), 
			ucfirst($aFormVal["kindness_desc"]), 
			ucwords($aFormVal["kindness_whom"]), 
			$aFormVal["iSubmitId"]
		)
	);
	
	drupal_set_message("Your Kindness Form has been updated.");
}

function kindness_list_details_submit(){
	foreach ($_REQUEST as $sKey => $sData) {
		${$sKey} = trim($sData);
	}
	
	$aTrail = array(
					l("Home", "<front>"),
					l("Good Deeds", "kindness"),
					l("History", "kindness/list"),
					l("Details", "kindness/details/".$iSubmitId)
				);
	
	drupal_set_breadcrumb($aTrail);
	drupal_add_js('setTimeout("location=\''.base_path().'kindness/details/'.$iSubmitId.'\'", 5000)', "inline");
	
	if ($sComment != ""){
		$sMessage = "The selected good deed has been ".(($bApprove == "1") ? "approved":"denied").".";
		$sUserType = ($iAdultId == 1) ? "admin":_kindness_check_user_type();
		
		if ($sUserType == "mentor"){
			$sFieldToUpdate = "bApprovedMentor";
		}elseif ($sUserType == "mod"){
			$sFieldToUpdate = "bApprovedMod";
		}elseif ($sUserType == "admin"){
			$sFieldToUpdate = "bApprovedAdmin";
		}
		
		$sqlInsert = "INSERT INTO {kindness_comment} VALUES(NULL, %d, %d, '%s', '%s', '%s')";
		$sqlUpdate = "UPDATE {kindness_submit} SET %s = '%s' WHERE id = %d";
		
		db_query($sqlInsert, array($iSubmitId, $iAdultId, ucfirst($sComment), $bApprove, date("Y-m-d H:i:s")));
		db_query($sqlUpdate, array($sFieldToUpdate, $bApprove, $iSubmitId));
		
		if ($sFieldToUpdate == "bApprovedAdmin" && $bApprove){
			$sqlStatement = "INSERT INTO {kindness_statement} VALUES(NULL, %d, %d, %d, '%s')";
			db_query($sqlStatement, array($iSubmitId, $iChildId, $iDuration, date("Y-m-d H:i:s")));
		}
	}else{
		$sMessage = "No comment was specified. Please try again.";
	}
	
	drupal_set_message($sMessage);
	
	return "";
}

function kindness_approved(){
	global $user;
	
	drupal_set_breadcrumb(array(l("Home", "<front>"), l("Good Deeds", "kindness"), l("Approved", "kindness/approved")));
	_kindness_hide_tab_from_admin();
	
	$sUserType = _kindness_check_user_type();
	
	if (!$sUserType && $user->uid != 1) drupal_access_denied();
	
	if ($user->uid == 1){
		$sOutput = _kindness_approved_adult($user->uid, "admin");
	}else{
		switch ($sUserType){
			case "child":
				$sOutput = _kindness_approved_child($user->uid);
				
				break;
			case "mentor":
			case "mod":
			case "admin":
				$sOutput = _kindness_approved_adult($user->uid, $sUserType);
				
				break;
		}
	}
	
	return $sOutput;
}

function kindness_callback_approved(){
	global $user;
	
	echo json_encode(array("RETURN" => _kindness_callback_approved_child($user->uid)));
	
	exit;
}

function kindness_create(){
	global $user;
	
	drupal_set_breadcrumb(array(l("Home", "<front>"), l("Good Deeds", "kindness"), l("Kindness Form", "create")));
	
	$aForm['kindness_title'] = array(
		'#type' => 'textfield',
		'#title' => 'Title',
		'#required' => true,
		'#default_value' => '',
		'#description' => 'Give your Good Deed a title to start with.',
	);
	
	$aForm['kindness_desc'] = array(
		'#type' => 'textarea',
		'#title' => 'Description',
		'#required' => true,
		'#default_value' => '',
		'#cols' => 30,
		'#rows' => 5,
		'#description' => 'Describe what you did and where it is located.',
	);
	
	$aForm['kindness_duration'] = array(
		'#type' => 'fieldset',
		'#title' => t('Duration'),
		'#collapsible' => FALSE,
		'#collapsed' => TRUE,
		'#description' => "Specify how long you did your Good Deed."
	);
	
	$aTimeHours = array();
	$aTimeMins = array();
	
	for ($h=0; $h<=480; $h+=60){
		$sUnit = ($h > 60) ? "hours":"hour";
		$aTimeHours[$h] = ($h/60)." ".$sUnit;
	}
	
	for ($m=0; $m<=59; $m++){
		$sUnit = ($m > 0) ? "minutes":"minute";
		$sMin = str_pad($m, 2, "0", STR_PAD_LEFT);
		
		$aTimeMins[$sMin] = $sMin." ".$sUnit;
	}
	
	$aForm['kindness_duration']["iHour"] = array(
		'#type' => 'select',
		'#title' => 'Duration (hours)',
		'#required' => true,
		'#default_value' => '',
		'#options' => $aTimeHours,
		'#description' => 'The Hour part of the duration.'
	);
	
	$aForm['kindness_duration']["iMinute"] = array(
		'#type' => 'select',
		'#title' => 'Duration (minutes)',
		'#required' => true,
		'#default_value' => '',
		'#options' => $aTimeMins,
		'#description' => 'The Minute part of the duration.'
	);
	
	$aForm['kindness_date'] = array(
		'#type' => 'date',
		'#title' => 'Date',
		'#required' => true,
		'#default_value' => '',
		'#description' => 'The Date when you did your Dood Deed.'
	);
	
	$aForm['kindness_whom'] = array(
		'#type' => 'textfield',
		'#title' => 'The Name of the person you did your Good Deed for',
		'#required' => true,
		'#default_value' => ''
	);
	
	$aForm['kindness_location'] = array(
		'#type' => 'textfield',
		'#title' => 'Location',
		'#required' => true,
		'#default_value' => '',
		'#description' => 'The location where your did your Good Deed.',
	);
	
	$aForm['kindness_promise'] = array(
		'#type' => 'checkbox',
		'#title' => t("I promised that I have permission to do this good deed and I did it as it was described."),
		'#default_value' => ''
	);
	
	$aForm['kindness_recipient_type'] = array(
		'#type' => 'select',
		'#title' => 'Recipient Type',
		'#required' => true,
		'#default_value' => '',
		'#options' => array(
			"" => "Select your relationship...",
			"Family/Relative" => "Family/Relative",
			"Neighbor" => "Neighbor",
			"Stranger" => "Stranger"
		),
		'#description' => 'Select your relationship to whom you did the Good Deed.'
	);
	
	
	$aForm['btnSubmit'] = array("#type" => "submit", "#value" => "Submit Kindness Form");
	
	return $aForm;
}

function kindness_create_validate($oForm, &$aFormState){
	$aFormVal = $aFormState["values"];
	$iHour = $aFormVal["iHour"];
	$iMinute = $aFormVal["iMinute"];
	
	if ($iHour == 0 && $iMinute == 0){
		form_set_error("iHour", "You must specify a valid time for the Duration (hours).");
		form_set_error("iMinute", "You must specify a valid time for the Duration (minutes).");
	}
	
	if ($aFormVal["kindness_promise"] == 0) form_set_error("kindness_promise", "You must promise that this Good Deed is true.");
}

function kindness_create_submit($oForm, &$aFormState){
	global $user;
	
	$aFormVal = $aFormState["values"];
	$aDate = $aFormVal["kindness_date"];
	$dDate = $aDate["year"]."-".str_pad($aDate["month"], 2, '0', STR_PAD_LEFT)."-".str_pad($aDate["day"], 2, '0', STR_PAD_LEFT);
	$iDurationMins = $aFormVal["iHour"] + $aFormVal["iMinute"];
	
	$sqlInsert = "INSERT INTO {kindness_submit} VALUES(NULL, %d, '%s', %d, '%s', '%s', '%s', '%s', '%s', '%s', '0', '0', '0')";
	db_query($sqlInsert, array($user->uid, $dDate, $iDurationMins, ucwords($aFormVal["kindness_title"]), ucfirst($aFormVal["kindness_desc"]), ucwords($aFormVal["kindness_whom"]), ucwords($aFormVal["kindness_location"]), $aFormVal["kindness_promise"], $aFormVal["kindness_recipient_type"]));
	
	drupal_set_message("Your Kindness Form has been submitted.");
}

function kindness_settings(){
	_kindness_hide_tab_from_admin();
	
	$aForm['kindness_rate'] = array(
		'#type' => 'textfield',
		'#title' => t('Conversion Rate'),
		'#default_value' => variable_get("kindness_rate", 1),
		'#size' => 8,
		'#maxlength' => 8,
		'#attributes' => array("style" => "text-align:right;"),
		'#description' => t("The Conversion rate for Kindness Hours to Valiants. Formula: Kindness Hours x Conversion Rate = Valiants"),
		'#required' => true
	);
	
	return system_settings_form($aForm);
}

function kindness_convert(){
	$iKindnessHours = _kindness_get_hours();
	$iKindnessHours = ($iKindnessHours > 0) ? number_format($iKindnessHours, 2):0;
	$iTimeHour = intval($iKindnessHours);
	$iTimeMin = ($iKindnessHours - floor($iKindnessHours)) * 60;
	
	$aForm['kindness_convertions'] = array(
		'#type' => 'fieldset',
		'#title' => t('Kindness Hours'),
		'#collapsible' => false,
		'#collapsed' => true,
		'#description' => "You have accumulated a total of <b><u>".$iKindnessHours." Kindness Hours</u></b>. That's <em>".$iTimeHour." hours(s) and ".$iTimeMin." minute(s)</em>."
	);
	
	$aForm['kindness_convertions']['iTimeToConvert'] = array(
		'#type' => 'textfield',
		'#title' => t('Kindness Hours'),
		'#default_value' => '',
		'#size' => 10,
		'#maxlength' => 8,
		'#description' => t("The number of Kindness Hours you want to convert to Valiants. Example correct entries: 1, 1.5, 0.25, etc."),
		'#attributes' => array("style" => "text-align:right;"),
		'#required' => true
	);
	
	$aForm['btnConvert'] = array("#type" => "submit", "#value" => "Convert to Valiants");
	
	return $aForm;
}

function kindness_convert_validate($oForm, &$aFormState){
	$aFormVal = $aFormState["values"];
	$iTime = $aFormVal["iTimeToConvert"];
		
	if (is_numeric($iTime) && $iTime <= _kindness_get_hours()){
		$aFormState["values"]["iTimeToConvert"] = number_format($iTime, 2);
	}else{
		form_set_error("iTimeToConvert", "You have specified an invalid number. Example correct entries: 1, 1.5, 0.25, etc. >>".$iTime);
	}
}

function kindness_convert_submit($oForm, &$aFormState){
	global $user;
	
	$oBankAdmin = _bank_account(1);
	$oBankChild = _bank_account();
	$aFormVal = $aFormState["values"];
	$iTime = $aFormVal["iTimeToConvert"];
	$iDuration = ($iTime * 60) * -1;
	$mKindnessRate = variable_get("kindness_rate", 1);
	$mAmount = number_format($iTime * $mKindnessRate, 2);
	
	$aReqParam = array(
					"key" => $oBankAdmin->account_number, 
					"pass" => $oBankAdmin->account_pass, 
					"amount" => $mAmount,
					"recipient" => $oBankChild->account_number,
					"description" => "Converted ".$iTime." Kindness Hour(s) to Valiant(s). Conversion Rate: ".$mKindnessRate
				);
	
	$aBankReply = _bank_post("create", $aReqParam);
	
	if ($aBankReply["STATUS"] == "Success"){
		$sqlInsert = "INSERT INTO {kindness_statement} VALUES(NULL, 0, %d, %d, '%s')";
		db_query($sqlInsert, array($user->uid, $iDuration, date("Y-m-d H:i:s")));
		
		drupal_set_message("The ".$iTime." Kindness Hour(s) was successfully converted to ".$mAmount." Valiant(s) and was credited to your Bank Account (".$oBankChild->account_number.") with Reference Number ".$aBankReply["RETURN"]["REF"].".");
	}else{
		drupal_set_message($aBankReply["ERR_MSG"], "error");
	}
	
	return "";
}

function _kindness_hide_tab_from_admin(){
	global $user;
	
	if ($user->uid == 1){
		$sJavaScript = 'var iTabCount = 0;$("ul.tabs.primary ul li").each(function(){iTabCount++;if (iTabCount == 2 || iTabCount == 6) $(this).hide();});';
		drupal_add_js($sJavaScript, "inline", "footer");
	}
}

function _kindness_check_user_type($iUserId=null, $verify=false){
	$sUserType = "";
	
	if (is_null($iUserId)){
		global $user;
		$iUserId = $user->uid;
	}else{
		$user = user_load(array("uid" => $iUserId));
	}
	
	if (in_array("Hopeful", $user->roles)) $sUserType = "child";
	if (in_array("Volunteer - Mentor", $user->roles)) $sUserType = "mentor";
	if (in_array("Moderator", $user->roles)) $sUserType = "mod";
	
	if (!$verify)
		return $sUserType; 
	
	if ($sUserType == "child"){
		$sqlChildCheck = "SELECT COUNT(id)
							FROM {hopefuls_volunteer}
							WHERE iHopefulId = %d AND iRoleId IN ('6','11')";
		$iChildCount = db_result(db_query($sqlChildCheck, $iUserId));
		
		return ($iChildCount == 1) ? "child":false;
	}elseif ($sUserType == "mentor"){
		$sqlMentorCheck = "SELECT COUNT(id)
							FROM {hopefuls_volunteer}
							WHERE iVolunteerId = %d AND iRoleId = '6'";
		$iMentorCount = db_result(db_query($sqlMentorCheck, $iUserId));
		
		return ($iMentorCount > 0) ? "mentor":false;
	}elseif ($sUserType == "mod"){
		$sqlModCheck = "SELECT COUNT(id)
						FROM {hopefuls_volunteer}
						WHERE iVolunteerId = %d AND iRoleId = '11'";
		$iModCount = db_result(db_query($sqlModCheck, $iUserId));
		
		return ($iModCount > 0) ? "mod":false;
	}else{
		return false;
	}
}

function _kindness_get_hours($iUserId=null, $bConverted=false){
	if (is_null($iUserId)){
		global $user;
		$iUserId = $user->uid;
	}
	
	$sqlKindness = "SELECT SUM(iDuration)/60 AS iKindnessHours
					FROM kindness_statement
					WHERE iUserId = %d";
	$sqlKindness .= ($bConverted) ? " AND iRefId = 0":"";
	
	$iKindnessHours = abs((float)db_result(db_query($sqlKindness, $iUserId)));
	$iKindnessHours = ($iKindnessHours > 0) ? $iKindnessHours:0;
	/*$iKindnessHours = db_result(db_query($sqlKindness, $iUserId));
	$iKindnessHours = ($iKindnessHours > 0) ? abs((float)$iKindnessHours):0;
	$iKindnessHours = number_format($iKindnessHours, 2);*/
	
	return $iKindnessHours;
}

function _kindness_get_hours_reported_benefactor($reporter_id, $bConverted=false){

	$sqlKindness = "SELECT B.iUserId
					FROM kindness_submit B
					WHERE reporter_id = %d AND
					B.reporter_id IS NOT NULL AND 
					B.beneficiary_id IS NOT NULL";

	$oKindnessResult = db_query($sqlKindness, $reporter_id);
	$userIds = [];
	while ($oKindness = db_fetch_object($oKindnessResult)){
		array_push($userIds, $oKindness->iUserId);
	}


	$userIdsString = implode(',', $userIds);

	$sqlKindness = "SELECT SUM(iDuration)/60 AS iKindnessHours
					FROM kindness_statement
					WHERE iUserId IN (". $userIdsString .")";

	$sqlKindness .= ($bConverted) ? " AND iRefId = 0":"";

	$iKindnessHours = abs((float)db_result(db_query($sqlKindness, $iUserId)));
	$iKindnessHours = ($iKindnessHours > 0) ? $iKindnessHours:0;
	/*$iKindnessHours = db_result(db_query($sqlKindness, $iUserId));
	$iKindnessHours = ($iKindnessHours > 0) ? abs((float)$iKindnessHours):0;
	$iKindnessHours = number_format($iKindnessHours, 2);*/

	return $iKindnessHours;
}

function _kindness_get_hours_my_benefactor($beneficiary_id, $bConverted=false){

	$sqlKindness = "SELECT B.iUserId
					FROM kindness_submit B
					WHERE beneficiary_id = %d AND
					B.reporter_id IS NOT NULL AND 
					B.beneficiary_id IS NOT NULL";


	$oKindnessResult = db_query($sqlKindness, $beneficiary_id);
	$userIds = [];
	while ($oKindness = db_fetch_object($oKindnessResult)){
		array_push($userIds, $oKindness->iUserId);
	}

	$userIdsString = implode(',', $userIds);

	$sqlKindness = "SELECT SUM(iDuration)/60 AS iKindnessHours
					FROM kindness_statement
					WHERE iUserId IN (". $userIdsString .")";

	$sqlKindness .= ($bConverted) ? " AND iRefId = 0":"";


	$iKindnessHours = abs((float)db_result(db_query($sqlKindness, $iUserId)));
	$iKindnessHours = ($iKindnessHours > 0) ? $iKindnessHours:0;
	/*$iKindnessHours = db_result(db_query($sqlKindness, $iUserId));
	$iKindnessHours = ($iKindnessHours > 0) ? abs((float)$iKindnessHours):0;
	$iKindnessHours = number_format($iKindnessHours, 2);*/

	return $iKindnessHours;
}

function _kindness_get_status($iSubmitId){
	$sqlStatus = "SELECT A.iUserId, C.name, A.bApproved
					FROM {kindness_comment} A
					INNER JOIN {kindness_submit} B ON B.id = A.iSubmitId
					LEFT JOIN {users} C ON C.uid = A.iUserId
					WHERE A.iSubmitId = %d AND
					(A.iUserId IS NOT NULL OR A.is_benefactor_anonymous = 1) AND
					(A.beneficiary_id IS NOT NULL OR A.is_beneficiary_anonymous = 1)
					ORDER BY A.dDatetime DESC
					LIMIT 1";
	$oStatus = db_fetch_object(db_query($sqlStatus, $iSubmitId));
	
	if (!is_object($oStatus)) return false;
	
	return array("bApproved" => (bool)$oStatus->bApproved, "iUserId" => $oStatus->iUserId, "sUserName" => $oStatus->name);
}

function _kindness_dashboard_child($iChildId){
	$sqlDeeds = "SELECT COUNT(id)
				FROM {kindness_submit}
				WHERE iUserId = %d
					AND bApprovedMentor = '1'
					AND bApprovedMod = '1'
					AND bApprovedAdmin = '1'";
	
	$sqlPending = "SELECT COUNT(id)
					FROM {kindness_submit}
					WHERE iUserId = %d
						AND bApprovedMentor = '%s'
						AND bApprovedMod = '%s'
						AND bApprovedAdmin = '%s'";
	
	$sqlMentor = "SELECT A.iVolunteerId
					FROM {hopefuls_volunteer} A
					INNER JOIN {users} B ON B.uid = A.iVolunteerId
					WHERE A.iHopefulId = %d AND A.iRoleId = 6";
	
	$iKindnessHours = _kindness_get_hours();
	$iTimeHour = intval($iKindnessHours);
	$iTimeMin = ($iKindnessHours - floor($iKindnessHours)) * 60;
	
	$iCovertedHours = _kindness_get_hours(null, true);
	$iConvertedTimeHour = intval($iCovertedHours);
	$iConvertedTimeMin = ($iCovertedHours - floor($iCovertedHours)) * 60;
	
	$iTotalHours = $iKindnessHours + $iCovertedHours;
	$iTotalTimeHour = intval($iTotalHours);
	$iTotalTimeMin = ($iTotalHours - floor($iTotalHours)) * 60;
	
	$iDeedCount = db_result(db_query($sqlDeeds, $iChildId));
	$iPendingMentor = db_result(db_query($sqlPending, array($iChildId, 0, 0, 0)));
	$iPendingMod = db_result(db_query($sqlPending, array($iChildId, 1, 0, 0)));
	$iPendingAdmin = db_result(db_query($sqlPending, array($iChildId, 1, 1, 0)));
	
	$iMentorId = db_result(db_query($sqlMentor, $iChildId));
	$sMentorName = _kindness_get_name($iMentorId);
	
	
	$sOutput = '<table style="margin-top:10px; width:100%;">
					<tr style="font-weight:bold; font-size:1.3em;">
						<td style="width:135px;">Kindness Hours:</td>
						<td><u>'.$iTimeHour.' hour(s) and '.$iTimeMin.' minute(s)</u></td>
					</tr>
					<tr>
						<td style="width:135px; padding-top:5px;">Converted Hours:</td>
						<td style="padding-top:5px;">'.$iConvertedTimeHour.' hour(s) and '.$iConvertedTimeMin.' minute(s)</td>
					</tr>
					<tr>
						<td style="width:135px;">Total Hours:</td>
						<td><span style="border-bottom-style:double; border-top-width:thin;">'.$iTotalTimeHour.' hour(s) and '.$iTotalTimeMin.' minute(s)</span></td>
					</tr>
					<tr>
						<td style="padding-top:15px;">Your Mentor:</td>
						<td style="padding-top:15px;">'.l($sMentorName, 'user/'.$iMentorId, array('attributes' => array("target" => "_blank"))).'</td>
					</tr>
					<tr>
						<td>Approved Good Deeds:</td>
						<td>'.$iDeedCount.'</td>
					</tr>
					<tr>
						<td colspan="2">
							<h2>Pending</h2>
							<table style="width:100%;">
								<tr>
									<td style="width:100px;">Mentor:</td>
									<td><tt style="font-size:1.1em;">'.$iPendingMentor.' deed(s)</tt> waiting to be approved.</td>
								</tr>
								<tr>
									<td style="width:100px;">Moderator:</td>
									<td><tt style="font-size:1.1em;">'.$iPendingMod.' deed(s)</tt> waiting to be approved.</td>
								</tr>
								<tr>
									<td style="width:100px;">Admin:</td>
									<td><tt style="font-size:1.1em;">'.$iPendingAdmin.' deed(s)</tt> waiting to be approved.</td>
								</tr>
							</table>
						</td>
					</tr>
				</table>';
	
	return $sOutput;
}

function _kindness_dashboard_adult($iAdultId, $sUserType){
	$sTableHeader = '<table style="margin-top:10px; width:100%;">';
	$sTableFooter = '</table>';
	$sOutput = "";
	
	$aList = array();
	$iCount = 0;
	
	switch ($sUserType){
		case "mentor":
			$sqlChildren = "SELECT A.iHopefulId, B.name
							FROM hopefuls_volunteer A
							INNER JOIN users B ON B.uid = A.iHopefulId
							WHERE A.iVolunteerId = %d AND A.iRoleId = 6";
			$oChildrenResult = db_query($sqlChildren, $iAdultId);
			
			while ($oChildren = db_fetch_object($oChildrenResult)){
				$aList[$oChildren->name] = array($oChildren->child_id, _kindness_get_name($oChildren->child_id));
			}
			
			$sTableHeader .= '<tr>
									<td colspan="2" style="padding-bottom:10px;">You are mentoring the following children:<td>
								</tr>
								<tr>
									<th style="width:25px; text-align:right; padding-right:10px;">#</th>
									<th>Child\'s Name</th>
								</tr>';
			
			break;
		
		case "mod":
			$sqlMentor = "SELECT A.iHopefulId, B.name
							FROM hopefuls_volunteer A
							INNER JOIN users B ON B.uid = A.iHopefulId
							WHERE A.iVolunteerId = %d AND A.iRoleId = 11";
			$oMentorResult = db_query($sqlMentor, $iAdultId);
			
			while ($oMentor = db_fetch_object($oMentorResult)){
				$aList[$oMentor->name] = array($oMentor->mentor_id, _kindness_get_name($oMentor->mentor_id));
			}
			
			$sTableHeader .= '<tr>
									<td colspan="2" style="padding-bottom:10px;">You are moderating the following mentors:<td>
								</tr>
								<tr>
									<th style="width:25px; text-align:right; padding-right:10px;">#</th>
									<th>Mentor\'s Name</th>
								</tr>';
			
			break;
			
		case "admin":
			/* $sqlMod = "SELECT A.uid, B.name
						FROM user_hierarchy_mod A
						INNER JOIN users B ON B.uid = A.uid"; */
			$sqlMod = "SELECT A.uid, B.name
						FROM volunteer_optin A
						INNER JOIN users B ON B.uid = A.uid
						WHERE `type` = 'mentor'";
			$oModResult = db_query($sqlMod);
			
			while ($oMod = db_fetch_object($oModResult)){
				$aList[$oMod->name] = array($oMod->uid, _kindness_get_name($oMod->uid));
			}
			
			$sTableHeader .= '<tr>
									<td colspan="2" style="padding-bottom:10px;">Here are the list of your moderators:<td>
								</tr>
								<tr>
									<th style="width:25px; text-align:right; padding-right:10px;">#</th>
									<th>Moderator\'s Name</th>
								</tr>';
			
			break;
	}
	
	asort($aList);
	
	foreach($aList as $sUserName => $aDetails){
		$iCount++;
		$sOutput .= '<tr>
						<td style="text-align:right; padding-right:10px;">'.$iCount.'.</td>
						<td>'.$aDetails[1].' <em>('.l($sUserName, 'user/'.$aDetails[0], array("attributes" => array("target" => "_blank"))).')</em></td>
					</tr>';
	}
	
	if ($iCount > 0){
		$sOutput = $sTableHeader.$sOutput.$sTableFooter;
	}else{
		$sOutput = '<div style="margin-top:10px;">No hierarchy to display, yet.</div>';
	}
	
	return $sOutput;
}

function _kindness_list_child($iChildId){
	$iKindnessCount = 0;
	
	$sTableHeader = '<table style="margin-top:10px;">
						<tr>
							<th style="width:220px;">Title</th>
							<th style="width:100px; text-align:right;  padding-right:10px;">Duration</th>
							<th style="width:120px;">Date Submitted</th>
							<th style="width:160px;">Status</th>
						</tr>';
	$sTableFooter = '</table>';
	
	$sqlKindness = "SELECT id, iUserId, DATE_FORMAT(dDatetime, '%M %e, %Y') AS sDate, iDuration, sTitle, sDesc, sToWhom,
						bApprovedMentor, bApprovedMod, bApprovedAdmin
					FROM kindness_submit
					WHERE iUserId = ".$iChildId."
						AND (bApprovedMentor = '0' OR bApprovedMod = '0' OR bApprovedAdmin = '0')
					ORDER BY dDatetime DESC";
	
	$sqlCount = "SELECT COUNT(id)
				FROM kindness_submit
				WHERE iUserId = ".$iChildId."
					AND (bApprovedMentor = '0' OR bApprovedMod = '0' OR bApprovedAdmin = '0')";
	
	$oKindnessResult = pager_query($sqlKindness, KINDNESS_REC_PER_PAGE, 0, $sqlCount);
	
	while ($oKindness = db_fetch_object($oKindnessResult)){
		$iKindnessCount++;
		
		$iDuration = $oKindness->iDuration/60;
		$iTimeHour = intval($iDuration);
		$iTimeMin = str_pad(round(($iDuration - floor($iDuration)) * 60), 2, '0', STR_PAD_LEFT);
		$sDuration = $iTimeHour.":".$iTimeMin;
		
		$bMentor = ($oKindness->bApprovedMentor == 1) ? true:false;
		$bMod = ($oKindness->bApprovedMod == 1) ? true:false;
		$bAdmin = ($oKindness->bApprovedAdmin == 1) ? true:false;
		
		if (!$bMentor && !$bMod && !$bAdmin){
			$sStatus = "Pending (Mentor)";
		}elseif ($bMentor && !$bMod && !$bAdmin){
			$sStatus = "Pending (Moderator)";
		}elseif ($bMentor && $bMod && !$bAdmin){
			$sStatus = "Pending (Admin)";
		}elseif ($bMentor && $bMod && $bAdmin){
			$sStatus = "<b>Approved</b>";
		}
		
		$sOutput .= '<tr>
						<td>'.l(ucwords($oKindness->sTitle), 'kindness/details/'.$oKindness->id.'/true').'</td>
						<td style="text-align:right; padding-right:10px;">'.$sDuration.'</td>
						<td>'.$oKindness->sDate.'</td>
						<td>'.$sStatus.'</td>
					</tr>';
	}
	
	if ($iKindnessCount > 0){
		$sPagerHTML = theme("pager", null, KINDNESS_REC_PER_PAGE);
		$sOutput = $sTableHeader.$sOutput.$sTableFooter.$sPagerHTML;
	}else{
		$sOutput = '<div style="margin-top:10px;">No pending deeds to display, yet.</div>';
	}
	
	return $sOutput;
}

function kindness_callback_kindness_workz($iChildId=null){
	global $user;
	
	$iChildId = (is_null($iChildId)) ? $user->uid:$iChildId;
	$iMentorId = _kindness_hopeful_mentor($iChildId);
	$sqlKindness = "SELECT id, iUserId, DATE_FORMAT(dDatetime, '%s') AS sDateReported, 
						iDuration, sTitle, sDesc, sToWhom, bApprovedMentor, bApprovedMod, bApprovedAdmin
					FROM kindness_submit
					WHERE iUserId = %d
					ORDER BY dDatetime DESC";
	
	$sqlApproveDenied = "SELECT";
	
	$oKindnessResult = db_query($sqlKindness, array("%M %e, %Y", $iChildId));
	
	while ($oKindness = db_fetch_object($oKindnessResult)){
		$iKindnessCount++;
		
		$aStatus = _kindness_get_status($oKindness->id);
		$iDuration = $oKindness->iDuration/60;
		$iTimeHour = intval($iDuration);
		$iTimeMin = str_pad(round(($iDuration - floor($iDuration)) * 60), 2, '0', STR_PAD_LEFT);
		$sDuration = $iTimeHour.":".$iTimeMin;
		$sApproveMentor = $oKindness->bApprovedMentor;
		$sApprovedAdmin = $oKindness->bApprovedAdmin;
		
		$sqlCheck = "SELECT A.id, A.iSubmitId, B.iUserId AS iHopefulId, A.iUserId AS iVolunteerId, A.bApproved
					FROM kindness_comment A
					INNER JOIN kindness_submit B ON B.id = A.iSubmitId
					INNER JOIN volunteer_mentor_hopeful C ON C.iHopefulId = B.iUserId
					WHERE A.iSubmitId = %d
						AND B.iUserId = %d
					ORDER BY A.iUserId DESC";
		
		$oCheckResult1 = db_query($sqlCheck, $oKindness->id, $iMentorId);
		$sStatus1 = $sApproveMentor == 0 ? "Pending" : "Approved";
		
		while ($oCheck1 = db_fetch_object($oCheckResult1)){
			$sStatus1 = ($oCheck1->bApproved == 1) ? "Approved":"Disapproved";
		}

		$sErrorCSS = ($sStatus1 == "Disapproved") ? "pending_top_1_error":"";
        $sdateReported = $oKindness->sDateReported == "" ? '&nbsp;&nbsp;&nbsp;': $oKindness->sDateReported;
		$aOutput[] = '<div class="pending_top_txt">
						<div class="pending_top_title_1"><a href="javascript:void(0);" onclick="Kindness_ApproveTitle('."'".$oKindness->id."'".');" class="'.$sErrorCSS.'">'.ucwords($oKindness->sTitle).'</a></div>
						<div class="pending_top_duration_1 '.$sErrorCSS.'">'.$sDuration.'</div>
						<div class="pending_top_date_1 '.$sErrorCSS.'" style="display:table-cell;width:100px;">'.$sdateReported.'</div>
						<div class="pending_top_monitor_1 '.$sErrorCSS.'">'.$sStatus1.'</div>
					</div>';
		//<div class="pending_top_admin_1 '.$sErrorCSS.'">'.$sStatus2.'</div>
	}
	
	if ($iKindnessCount == 0) $aOutput[] = '<div style="margin-top:10px;">No pending deeds to display, yet.</div>';
	
	exit(json_encode(array("RETURN" => $aOutput)));
}

function kindness_callback_kindness_workz2_benfactors($iChildId=null, $is_return = false){
	global $user;

	$aHopefuls = _kindness_mentor_hopeful($user->uid);

	if (count($aHopefuls) == 0 ) {
		$aHopefuls = [-1];
	}
	$env = $_POST['env'];
	$iChildId = $_POST['uid'];
	$iChildId = (is_null($iChildId)) ? $user->uid:$iChildId;
	$iMentorId = _kindness_hopeful_mentor($iChildId);
	
	$sqlKindness = "SELECT B.id, B.iUserId, DATE_FORMAT(B.dDatetime, '%s') AS sDateReported, 
						B.iDuration, B.sTitle, B.sDesc, B.sToWhom, B.bApprovedMentor, B.bApprovedMod, B.bApprovedAdmin, U.name, B.workz_type, B.is_benefactor_anonymous
					FROM kindness_submit B
					LEFT JOIN users U ON U.uid = B.iUserId
					WHERE ((reporter_id = %d OR beneficiary_id = %d) AND
					B.reporter_id IS NOT NULL AND 
					B.beneficiary_id IS NOT NULL) AND
					(B.iUserId IS NOT NULL OR B.is_benefactor_anonymous = 1) AND
					(B.beneficiary_id IS NOT NULL OR B.is_beneficiary_anonymous = 1) 
					OR (B.iUserId IN (%s))
					ORDER BY B.id DESC";
	
	$sqlApproveDenied = "SELECT";

	$all_array = [];
	$pending_array = [];
	$approved_array = [];
	$disapproved_array = [];

	$oKindnessResult = db_query($sqlKindness, array("%M %e, %Y", $iChildId, $iChildId, implode(",", $aHopefuls)));

	
	while ($oKindness = db_fetch_object($oKindnessResult)){
		$all_array[] = $oKindness->id;

		$aStatus = _kindness_get_status($oKindness->id);
		$iDuration = $oKindness->iDuration/60;
		$iTimeHour = intval($iDuration);
		$iTimeMin = str_pad(round(($iDuration - floor($iDuration)) * 60), 2, '0', STR_PAD_LEFT);
		$sDuration = $iTimeHour.":".$iTimeMin;
		$sApproveMentor = $oKindness->bApprovedMentor;
		$sApprovedAdmin = $oKindness->bApprovedAdmin;
					
		$sqlCheck = "SELECT A.id, A.iSubmitId, B.iUserId AS iHopefulId, A.iUserId AS iVolunteerId, A.bApproved
					FROM kindness_comment A
					INNER JOIN kindness_submit B ON B.id = A.iSubmitId
					WHERE A.iSubmitId = %d
					ORDER BY A.iUserId DESC";
		
		$oCheckResult1 = db_query($sqlCheck, $oKindness->id, $iMentorId);
		$sStatus1 = $sApproveMentor == 0 ? "Pending" : "Approved";
		
		while ($oCheck1 = db_fetch_object($oCheckResult1)){
			$sStatus1 = ($oCheck1->bApproved == 1) ? "Approved":"Disapproved";
		}

		switch($sStatus1){
			case 'Pending':
				$pending_array[] = $oKindness->id;
				break;
			case 'Approved':
				$approved_array[] = $oKindness->id;
				break;
			case 'Disapproved':
				$disapproved_array[] = $oKindness->id ;
				break;
		}
		
		$sErrorCSS = ($sStatus1 == "Disapproved") ? "pending_top_1_error":"";
        $sdateReported = $oKindness->sDateReported == "" ? '&nbsp;&nbsp;&nbsp;': $oKindness->sDateReported;

        $benefactorName = $oKindness->name;

        if ($oKindness->workz_type === 'Random Kindness Workz' || $oKindness->is_benefactor_anonymous == '1') {
        	$benefactorName = 'Anonymous';
        }
		
		if($env == 'ext'){
		$aOutput[] = '<div class="pending_top_txt">
						<div class="pending_top_title_1"><a href="javascript:void(0);" onclick="Kindness_ApproveTitle2('."'".$oKindness->id."'".');" class="'.$sErrorCSS.'"  style="color:#444">'.ucwords($oKindness->sTitle).'</a></div>
						<div class="pending_top_duration_1 '.$sErrorCSS.'" style="color:#444">'.$sDuration.'</div>
						<div class="pending_top_date_1 '.$sErrorCSS.'" style="display:table-cell;width:100px;color:#444">'.$sdateReported.'</div>
						<div class="pending_top_monitor_1 '.$sErrorCSS.'">'.$sStatus1.'</div>
					</div>';
		} else{			
		$aOutput[] = '<div class="pending_top_txt">
						<div class="pending_top_title_1"><a href="javascript:void(0);" onclick="Kindness_ApproveTitle2('."'".$oKindness->id."'".');" class="'.$sErrorCSS.'" kindness_id="'. $oKindness->id .'"><span class="kindness_title">'.ucwords($oKindness->sTitle).'</span><br /><span class="kindness_type">'. ucwords($oKindness->workz_type) .'</span></a></div>
						<div class="pending_top_duration_1 '.$sErrorCSS.'">'.$benefactorName.'</div>
						<div class="pending_top_date_1 '.$sErrorCSS.'" style="display:table-cell;width:100px;">'.$sdateReported.'</div>
						<div class="pending_top_monitor_1 '.$sErrorCSS.'">'.$sStatus1.'</div>
					</div>';
		}				
	}
	
	if ($iKindnessCount == 0) $aOutput[] = '<div style="margin-top:10px;">No pending deeds to display, yet.</div>';
	

	$reported_benefactor_hours = _kindness_get_hours_reported_benefactor($iChildId);
	$my_benefactor_hours = _kindness_get_hours_my_benefactor($iChildId);

	$iTotalHours = $reported_benefactor_hours + $my_benefactor_hours;
	$iTimeHour = intval($iTotalHours);
	$iTimeMin = round(($iTotalHours - floor($iTotalHours)) * 60);
	
	if ($is_return) {
		return array(
				"RETURN" => $aOutput, 
				"pending_count" => count($pending_array),
				"pending_array" => $pending_array,
				"approved_count" => count($approved_array),
				"approved_array" => $approved_array,
				"disapproved_count" => count($disapproved_count),
				"disapproved_array" => $disapproved_array,
				"all_workz_count" => count($all_array),
				"all_array" => $all_array,
				"workz_hours" => $iTimeHour.' hour(s) and '.$iTimeMin.' minute(s)',
			);
	}else{
		exit(json_encode(
				array(
					"RETURN" => $aOutput, 
					"pending_count" => count($pending_array),
					"pending_array" => $pending_array,
					"approved_count" => count($approved_array),
					"approved_array" => $approved_array,
					"disapproved_count" => count($disapproved_count),
					"disapproved_array" => $disapproved_array,
					"all_workz_count" => count($all_array),
					"all_array" => $all_array,
					"workz_hours" => $iTimeHour.' hour(s) and '.$iTimeMin.' minute(s)',
				)
			)
		);
	}
}

function kindness_callback_kindness_workz2($iChildId=null){
	global $user;
	$env = $_POST['env'];
	$iChildId = $_POST['uid'];
	$iChildId = (is_null($iChildId)) ? $user->uid:$iChildId;
	$iMentorId = _kindness_hopeful_mentor($iChildId);
	
	$sqlKindness = "SELECT B.id, B.iUserId, DATE_FORMAT(B.dDatetime, '%s') AS sDateReported, 
						B.iDuration, B.sTitle, B.sDesc, B.sToWhom, B.bApprovedMentor, B.bApprovedMod, B.bApprovedAdmin, U.name, B.workz_type,
						KS.id as kindness_certificate_id
					FROM kindness_submit B
					LEFT JOIN users U ON U.uid = B.iUserId
					LEFT JOIN kindness_certificates KS ON KS.iSubmitId = B.id
					WHERE B.iUserId = %d AND
					B.reporter_id IS NOT NULL AND 
					(B.iUserId IS NOT NULL OR B.is_benefactor_anonymous = 1) AND
					(B.beneficiary_id IS NOT NULL OR B.is_beneficiary_anonymous = 1)
					ORDER BY B.id DESC";
	
	$sqlApproveDenied = "SELECT";

	$pending_count = 0;
	$approved_count = 0;
	$disapproved_count = 0;

	$oKindnessResult = db_query($sqlKindness, array("%M %e, %Y", $iChildId));
	
	while ($oKindness = db_fetch_object($oKindnessResult)){
		$iKindnessCount++;
		
		$aStatus = _kindness_get_status($oKindness->id);
		$iDuration = $oKindness->iDuration/60;
		$iTimeHour = intval($iDuration);
		$iTimeMin = str_pad(round(($iDuration - floor($iDuration)) * 60), 2, '0', STR_PAD_LEFT);
		$sDuration = $iTimeHour.":".$iTimeMin;
		$sApproveMentor = $oKindness->bApprovedMentor;
		$sApprovedAdmin = $oKindness->bApprovedAdmin;
					
		$sqlCheck = "SELECT A.id, A.iSubmitId, B.iUserId AS iHopefulId, A.iUserId AS iVolunteerId, A.bApproved
					FROM kindness_comment A
					INNER JOIN kindness_submit B ON B.id = A.iSubmitId
					WHERE A.iSubmitId = %d
					ORDER BY A.iUserId DESC";
		
		$oCheckResult1 = db_query($sqlCheck, $oKindness->id, $iMentorId);
		$sStatus1 = $sApproveMentor == 0 ? "Pending" : "Approved";
		
		while ($oCheck1 = db_fetch_object($oCheckResult1)){
			$sStatus1 = ($oCheck1->bApproved == 1) ? "Approved":"Disapproved";
		}

		switch($sStatus1){
			case 'Pending':
				$pending_count++;
				break;
			case 'Approved':
				$approved_count++;
				break;
			case 'Disapproved':
				$disapproved_count++;
				break;
		}
		
		$sErrorCSS = ($sStatus1 == "Disapproved") ? "pending_top_1_error":"";
        $sdateReported = $oKindness->sDateReported == "" ? '&nbsp;&nbsp;&nbsp;': $oKindness->sDateReported;
		
		if($env == 'ext'){
		$aOutput[] = '<div class="pending_top_txt">
						<div class="pending_top_title_1"><a href="javascript:void(0);" onclick="Kindness_ApproveTitle2('."'".$oKindness->id."'".');" class="'.$sErrorCSS.'"  style="color:#444">'.ucwords($oKindness->sTitle).'</a></div>
						<div class="pending_top_duration_1 '.$sErrorCSS.'" style="color:#444">'.$sDuration.'</div>
						<div class="pending_top_date_1 '.$sErrorCSS.'" style="display:table-cell;width:100px;color:#444">'.$sdateReported.'</div>
						<div class="pending_top_monitor_1 '.$sErrorCSS.'">'.$sStatus1.'</div>
						<div class="kindness_certificate_list '.$sErrorCSS.'">'.$oKindness->kindness_certificate_id.'</div>
					</div>';
		} else{			
		$aOutput[] = '<div class="pending_top_txt">
						<div class="pending_top_title_1"><a href="javascript:void(0);" onclick="Kindness_ApproveTitle2('."'".$oKindness->id."'".');" class="'.$sErrorCSS.'" kindness_id="'. $oKindness->id .'"><span class="kindness_title">'.ucwords($oKindness->sTitle).'</span><br /><span class="kindness_type">'. ucwords($oKindness->workz_type) .'</span></a></div>
						<div class="pending_top_duration_1 '.$sErrorCSS.'">'.$oKindness->name.'</div>
						<div class="pending_top_date_1 '.$sErrorCSS.'" style="display:table-cell;width:100px;">'.$sdateReported.'</div>
						<div class="pending_top_monitor_1 '.$sErrorCSS.'">'.$sStatus1.'</div>
						<div class="kindness_certificate_list '.$sErrorCSS.'">'.$oKindness->kindness_certificate_id.'</div>
					</div>';
		}				
	}
	
	if ($iKindnessCount == 0) $aOutput[] = '<div style="margin-top:10px;">No pending deeds to display, yet.</div>';
	
	exit(json_encode(
		array(
			"RETURN" => $aOutput, 
			"pending_count" => $pending_count,
			"approved_count" => $approved_count,
			"disapproved_count" => $disapproved_count,
			"all_workz_count" => $iKindnessCount,
		)
	)
);
}

function get_geocode_address($address){
    // url encode the address
    $address = urlencode($address);
    
    // google map geocode api url
    $url = "https://maps.google.com/maps/api/geocode/json?key=AIzaSyDXB1eo0YySoNeRwva2ALq3RcVIqlKLwfk&address={$address}";
 
    // get the json response from url
    $resp_json = file_get_contents($url);
    
    // decode the json response
    $resp = json_decode($resp_json, true);
    // var_dump($resp);exit;
    // response status will be 'OK', if able to geocode given address
    if($resp['status']=='OK'){
      //define empty array
     $data_arr = array(); 
        // get the important data
        $data_arr['latitude'] = isset($resp['results'][0]['geometry']['location']['lat']) ? $resp['results'][0]['geometry']['location']['lat'] : '';
        $data_arr['longitude'] = isset($resp['results'][0]['geometry']['location']['lng']) ? $resp['results'][0]['geometry']['location']['lng'] : '';
        $data_arr['formatted_address'] = isset($resp['results'][0]['formatted_address']) ? $resp['results'][0]['formatted_address'] : '';
        
        // verify if data is exist
        if(!empty($data_arr) && !empty($data_arr['latitude']) && !empty($data_arr['longitude'])){
            return $data_arr;
            
        }else{
            return false;
        }
        
    }else{
        return false;
    }
}

function kindess_callback_get_geocode($id){
	$sqlKindness = "SELECT B.id, B.sLocation, B.geocode
					FROM kindness_submit B
					LEFT JOIN users E ON E.uid = B.iUserId
					LEFT JOIN users C ON C.uid = B.beneficiary_id 
					LEFT JOIN users D ON D.uid = B.reporter_id
					WHERE 
					(D.uid IS NOT NULL
					AND (E.uid IS NOT NULL OR B.is_benefactor_anonymous = 1)
					AND (C.uid IS NOT NULL OR B.is_beneficiary_anonymous = 1)
					AND B.geocode IS NOT NULL
					AND B.bApprovedMentor = '1')
					OR B.id = %d
					ORDER BY id DESC";

	$oKindnessResult = db_query($sqlKindness, $id);
	$all_workz_location = [];
	$current_workz = false;

	while ($citation = db_fetch_object($oKindnessResult)){
		$geocode = $citation->geocode;
		if (!is_null($geocode) && !empty(trim($geocode)) && $citation->id != $id) {
			$citation->geocode = json_decode($geocode);
			array_push($all_workz_location, $citation);
		}

		if (!is_null($geocode) && !empty(trim($geocode)) && $citation->id == $id) {
			$current_workz = json_decode($geocode);
		}
	}

	echo json_encode([
	    'current_workz' => $current_workz,
	    'all_workz' => $all_workz_location,
	]);
}

function get_news($id){
	$most_popular_url = 'https://api.feedly.com/v3/mixes/contents?streamId=feed%2Fhttps%3A%2F%2Fwww.goodnewsnetwork.org%2Fcategory%2Fnews%2Fheroes%2Ffeed%2F&count=3&hours=15&backfill=true&ck=1683615916809&ct=feedly.desktop&cv=31.0.1793';
	$other_news_url = 'https://api.feedly.com/v3/streams/contents?streamId=feed%2Fhttps%3A%2F%2Fwww.goodnewsnetwork.org%2Fcategory%2Fnews%2Fheroes%2Ffeed%2F&count=20&ranked=newest&similar=true&findUrlDuplicates=true&ck=1683615917839&ct=feedly.desktop&cv=31.0.1793';

	$popular_response = curlNews($most_popular_url);
	$other_response = curlNews($other_news_url);
	echo json_encode([
		'popular_response' => $popular_response,
		'other_response' => $other_response,
	]);
	exit;
}

function curlNews($url)
{
	$curl = curl_init();

	curl_setopt_array($curl, [
	  CURLOPT_RETURNTRANSFER => true,
	  CURLOPT_URL => $url,
	]);

	$response = curl_exec($curl);
	$error = curl_error($curl);

	curl_close($curl);

	return json_decode($response, true);
}

// function kindness_callback_kindness_workz2($iChildId=null){
// 	global $user;
// 	$env = $_POST['env'];
// 	$iChildId = $_POST['uid'];
// 	$iChildId = (is_null($iChildId)) ? $user->uid:$iChildId;
// 	$iMentorId = _kindness_hopeful_mentor($iChildId);
	
// 	$sqlKindness = "SELECT id, iUserId, DATE_FORMAT(dDatetime, '%s') AS sDateReported, 
// 						iDuration, sTitle, sDesc, sToWhom, bApprovedMentor, bApprovedMod, bApprovedAdmin
// 					FROM kindness_submit
// 					WHERE iUserId = %d
// 					ORDER BY dDatetime DESC";
	
// 	$sqlApproveDenied = "SELECT";
	
// 	$oKindnessResult = db_query($sqlKindness, array("%M %e, %Y", $iChildId));
	
// 	while ($oKindness = db_fetch_object($oKindnessResult)){
// 		$iKindnessCount++;
		
// 		$aStatus = _kindness_get_status($oKindness->id);
// 		$iDuration = $oKindness->iDuration/60;
// 		$iTimeHour = intval($iDuration);
// 		$iTimeMin = str_pad(round(($iDuration - floor($iDuration)) * 60), 2, '0', STR_PAD_LEFT);
// 		$sDuration = $iTimeHour.":".$iTimeMin;
// 		$sApproveMentor = $oKindness->bApprovedMentor;
// 		$sApprovedAdmin = $oKindness->bApprovedAdmin;
					
// 		$sqlCheck = "SELECT A.id, A.iSubmitId, B.iUserId AS iHopefulId, A.iUserId AS iVolunteerId, A.bApproved
// 					FROM kindness_comment A
// 					INNER JOIN kindness_submit B ON B.id = A.iSubmitId
// 					WHERE A.iSubmitId = %d
// 					ORDER BY A.iUserId DESC";
		
// 		$oCheckResult1 = db_query($sqlCheck, $oKindness->id, $iMentorId);
// 		$sStatus1 = $sApproveMentor == 0 ? "Pending" : "Approved";
		
// 		while ($oCheck1 = db_fetch_object($oCheckResult1)){
// 			$sStatus1 = ($oCheck1->bApproved == 1) ? "Approved":"Disapproved";
// 		}
		
// 		$sErrorCSS = ($sStatus1 == "Disapproved") ? "pending_top_1_error":"";
//         $sdateReported = $oKindness->sDateReported == "" ? '&nbsp;&nbsp;&nbsp;': $oKindness->sDateReported;
		
// 		if($env == 'ext'){
// 		$aOutput[] = '<div class="pending_top_txt">
// 						<div class="pending_top_title_1"><a href="javascript:void(0);" onclick="Kindness_ApproveTitle2('."'".$oKindness->id."'".');" class="'.$sErrorCSS.'"  style="color:#444">'.ucwords($oKindness->sTitle).'</a></div>
// 						<div class="pending_top_duration_1 '.$sErrorCSS.'" style="color:#444">'.$sDuration.'</div>
// 						<div class="pending_top_date_1 '.$sErrorCSS.'" style="display:table-cell;width:100px;color:#444">'.$sdateReported.'</div>
// 						<div class="pending_top_monitor_1 '.$sErrorCSS.'">'.$sStatus1.'</div>
// 					</div>';
// 		} else{			
// 		$aOutput[] = '<div class="pending_top_txt">
// 						<div class="pending_top_title_1"><a href="javascript:void(0);" onclick="Kindness_ApproveTitle2('."'".$oKindness->id."'".');" class="'.$sErrorCSS.'">'.ucwords($oKindness->sTitle).'</a></div>
// 						<div class="pending_top_duration_1 '.$sErrorCSS.'">'.$sDuration.'</div>
// 						<div class="pending_top_date_1 '.$sErrorCSS.'" style="display:table-cell;width:100px;">'.$sdateReported.'</div>
// 						<div class="pending_top_monitor_1 '.$sErrorCSS.'">'.$sStatus1.'</div>
// 					</div>';
// 		}				
// 	}
	
// 	if ($iKindnessCount == 0) $aOutput[] = '<div style="margin-top:10px;">No pending deeds to display, yet.</div>';
	
// 	exit(json_encode(array("RETURN" => $aOutput)));
// }

function _kindness_callback_list_child($iChildId){
	$iKindnessCount = 0;
	$sTableHeader = '';
	$sTableFooter = '';
	$sqlKindness = "SELECT id, iUserId, DATE_FORMAT(dDatetime, '%M %e, %Y') AS sDate, iDuration, sTitle, sDesc, 
						sToWhom, bApprovedMentor, bApprovedMod, bApprovedAdmin
					FROM kindness_submit
					WHERE iUserId = ".$iChildId."
						AND (bApprovedMentor = '0' OR bApprovedMod = '0' OR bApprovedAdmin = '0')
					ORDER BY dDatetime DESC";
	
	$sqlCount = "SELECT COUNT(id)
				FROM kindness_submit
				WHERE iUserId = ".$iChildId."
					AND (bApprovedMentor = '0' OR bApprovedMod = '0' OR bApprovedAdmin = '0')";
	
	$oKindnessResult = db_query($sqlKindness);
	
	while ($oKindness = db_fetch_object($oKindnessResult)){
		$iKindnessCount++;
		
		$iDuration = $oKindness->iDuration/60;
		$iTimeHour = intval($iDuration);
		$iTimeMin = str_pad(round(($iDuration - floor($iDuration)) * 60), 2, '0', STR_PAD_LEFT);
		$sDuration = $iTimeHour.":".$iTimeMin;
		
		$bMentor = ($oKindness->bApprovedMentor == 1) ? true:false;
		$bMod = ($oKindness->bApprovedMod == 1) ? true:false;
		$bAdmin = ($oKindness->bApprovedAdmin == 1) ? true:false;
		
		if (!$bMentor && !$bMod && !$bAdmin){
			$sStatus = "Pending (Mentor)";
		}elseif ($bMentor && !$bMod && !$bAdmin){
			$sStatus = "Pending (Moderator)";
		}elseif ($bMentor && $bMod && !$bAdmin){
			$sStatus = "Pending (Admin)";
		}elseif ($bMentor && $bMod && $bAdmin){
			$sStatus = "<b>Approved</b>";
		}
		
		$sOutput[]= '<div class="pending_top_txt">
						<div class="pending_top_title_1">'.l(ucwords($oKindness->sTitle), 'kindness/details/'.$oKindness->id.'/true', array('attributes' => array('target' => '_blank'))).'</div>
						<div class="pending_top_duration_1">'.$sDuration.'</div>
						<div class="pending_top_date_1">'.$oKindness->sDate.'</div>
					</div>';
	}
	
	if ($iKindnessCount == 0){
		$sOutput[] = '<div style="margin-top:10px;">No pending deeds to display, yet.</div>';
	}
	
	return $sOutput;
}

function _kindness_callback_approved_child($iChildId){
	$iKindnessCount = 0;
	$sTableHeader = '';
	$sTableFooter = '';
	$sqlKindness = "SELECT A.id, A.iUserId, DATE_FORMAT(A.dDatetime, '%M %e, %Y') AS sDate, 
						A.iDuration, A.sTitle, A.sDesc, A.sToWhom, DATE_FORMAT(B.dDatetime, '%M %e, %Y') AS sDateApproved
					FROM kindness_submit A
					INNER JOIN kindness_statement B ON B.iRefId = A.id
					WHERE A.iUserId = ".$iChildId."
						AND A.bApprovedMentor = '1' 
						AND A.bApprovedMod = '1' 
						AND A.bApprovedAdmin = '1'
					ORDER BY A.dDatetime DESC";
	
	$sqlCount = "SELECT COUNT(id)
				FROM kindness_submit
				WHERE iUserId = ".$iChildId."
					AND bApprovedMentor = '1' 
					AND bApprovedMod = '1' 
					AND bApprovedAdmin = '1'";
	
	$oKindnessResult = pager_query($sqlKindness, KINDNESS_REC_PER_PAGE, 0, $sqlCount);
	
	while ($oKindness = db_fetch_object($oKindnessResult)){
		$iKindnessCount++;
		
		$iDuration = $oKindness->iDuration/60;
		$iTimeHour = intval($iDuration);
		$iTimeMin = round(($iDuration - floor($iDuration)) * 60);
		$sDuration = $iTimeHour.":".$iTimeMin;
		
		$sOutput[]= '<div class="pending_top_txt">
						<div class="pending_top_title_1">'.l(ucwords($oKindness->sTitle), 'kindness/details/'.$oKindness->id.'/true', array('attributes' => array('target' => '_blank'))).'</div>
						<div class="pending_top_duration_1">'.$sDuration.'</div>
						<div class="pending_top_date_1">'.$oKindness->sDate.'</div>
						<div class="pending_top_date_approvd_1">'.$oKindness->sDateApproved.'</div>
					</div>';
	}
	
	if ($iKindnessCount == 0){
		$sOutput[] = '<div style="margin-top:10px;">No approved deeds to display, yet.</div>';
	}
	
	return $sOutput;
}

function _kindness_list_adult($iAdultId, $sUserType){
	$iKindnessCount = 0;
	$sOutput = "";
	
	$sTableHeader = '<table style="margin-top:10px; width:100%;">
						<tr>
							<th style="width:130px;">Username</th>
							<th style="width:130px;">Title</th>
							<th style="width:100px; text-align:right;  padding-right:10px;">Duration</th>
							<th style="width:110px;">Date Submitted</th>
							<th>Status</th>
						</tr>';
	$sTableFooter = '</table><br/><br/>';
	
	$sqlKindness = "SELECT A.id, A.iUserId, B.name, REPLACE_THIS, 
						A.iDuration, A.sTitle, A.sDesc, A.sToWhom,
						A.bApprovedMentor, A.bApprovedMod, A.bApprovedAdmin
					FROM kindness_submit A
					LEFT JOIN users B ON B.uid = A.iUserId
					WHERE A.bApprovedMentor = '%s'
						AND A.bApprovedMod = '%s'
						AND A.bApprovedAdmin = '%s'
						AND (A.iUserId IS NOT NULL OR A.is_benefactor_anonymous = 1)
						AND (A.beneficiary_id IS NOT NULL OR A.is_beneficiary_anonymous = 1)";
	
	$sqlCount = "SELECT COUNT(A.id)
					FROM kindness_submit A
					LEFT JOIN users B ON B.uid = A.iUserId
					WHERE A.bApprovedMentor = '%s'
						AND A.bApprovedMod = '%s'
						AND A.bApprovedAdmin = '%s'
						AND (A.iUserId IS NOT NULL OR A.is_benefactor_anonymous = 1)
						AND (A.beneficiary_id IS NOT NULL OR A.is_beneficiary_anonymous = 1)";
	
	switch ($sUserType){
		case "mentor":
			$sqlKindness = sprintf($sqlKindness, 0, 0, 0);
			$sqlCount = sprintf($sqlCount, 0, 0, 0);
			
			break;
		
		/* case "mod":
			$sqlKindness = sprintf($sqlKindness, 1, 0, 0);
			$sqlCount = sprintf($sqlCount, 1, 0, 0);
			
			break; */
			
		case "admin":
			$sqlKindness = sprintf($sqlKindness, 1, 0, 0);
			$sqlCount = sprintf($sqlCount, 1, 0, 0);
			
			break;
	}
	
	$sqlKindness = str_replace("REPLACE_THIS", "DATE_FORMAT(A.dDatetime, '%M %e, %Y') AS sDate", $sqlKindness);
	$oKindnessResult = pager_query($sqlKindness." ORDER BY B.name", KINDNESS_REC_PER_PAGE, 0, $sqlCount);
	
	while ($oKindness = db_fetch_object($oKindnessResult)){
		$iKindnessCount++;
		
		$iDuration = $oKindness->iDuration/60;
		$iTimeHour = intval($iDuration);
		$iTimeMin = str_pad(round(($iDuration - floor($iDuration)) * 60), 2, '0', STR_PAD_LEFT);
		$sDuration = $iTimeHour.":".$iTimeMin;
		
		$bMentor = ($oKindness->bApprovedMentor == 1) ? true:false;
		$bMod = ($oKindness->bApprovedMod == 1) ? true:false;
		$bAdmin = ($oKindness->bApprovedAdmin == 1) ? true:false;
		
		if (!$bMentor && !$bAdmin){
			$sStatus = "Pending (Mentor)";
		}/* elseif ($bMentor && !$bMod && !$bAdmin){
			$sStatus = "Pending (Moderator)";
		} */elseif ($bMentor && !$bAdmin){
			$sStatus = "Pending (Admin)";
		}elseif ($bMentor && $bAdmin){
			$sStatus = "<b>Approved</b>";
		}
		
		$sOutput .= '<tr>
						<td>'.l($oKindness->name/* _kindness_get_name($oKindness->iUserId) */, 'user/'.$oKindness->iUserId, array("attributes" => array("target" => "_blank"))).'</td>
						<td>'.l(ucwords($oKindness->sTitle), 'kindness/details/'.$oKindness->id.'/true').'</td>
						<td style="text-align:right; padding-right:10px;">'.$sDuration.'</td>
						<td>'.$oKindness->sDate.'</td>
						<td>'.$sStatus.'</td>
					</tr>';
	}
	
	if ($iKindnessCount > 0){
		$sPagerHTML = theme("pager", null, KINDNESS_REC_PER_PAGE);
		$sOutput = $sTableHeader.$sOutput.$sTableFooter.$sPagerHTML;
	}else{
		$sOutput = '<div style="margin-top:10px;">No pending deeds to approve, yet.</div>';
	}
	
	return $sOutput;
}

function _kindness_approved_child($iChildId){
	$iKindnessCount = 0;
	
	$sTableHeader = '<table style="margin-top:10px;">
						<tr>
							<th style="width:260px;">Title</th>
							<th style="width:100px; text-align:right;  padding-right:10px;">Duration</th>
							<th style="width:120px;">Date Submitted</th>
							<th style="width:120px;">Date Approved</th>
						</tr>';
	
	$sTableFooter = '</table>';
	
	$sqlKindness = "SELECT A.id, A.iUserId, DATE_FORMAT(A.dDatetime, '%M %e, %Y') AS sDate, 
						A.iDuration, A.sTitle, A.sDesc, A.sToWhom, DATE_FORMAT(B.dDatetime, '%M %e, %Y') AS sDateApproved
					FROM kindness_submit A
					INNER JOIN kindness_statement B ON B.iRefId = A.id
					WHERE A.iUserId = ".$iChildId."
						AND A.bApprovedMentor = '1' 
						AND A.bApprovedMod = '1' 
						AND A.bApprovedAdmin = '1'
					ORDER BY A.dDatetime DESC";
	
	$sqlCount = "SELECT COUNT(id)
				FROM kindness_submit
				WHERE iUserId = ".$iChildId."
					AND bApprovedMentor = '1' 
					AND bApprovedMod = '1' 
					AND bApprovedAdmin = '1'";
	
	$oKindnessResult = pager_query($sqlKindness, KINDNESS_REC_PER_PAGE, 0, $sqlCount);
	
	while ($oKindness = db_fetch_object($oKindnessResult)){
		$iKindnessCount++;
		
		$iDuration = $oKindness->iDuration/60;
		$iTimeHour = intval($iDuration);
		$iTimeMin = round(($iDuration - floor($iDuration)) * 60);
		$sDuration = $iTimeHour.":".$iTimeMin;
		
		$sOutput .= '<tr>
						<td>'.l(ucwords($oKindness->sTitle), 'kindness/details/'.$oKindness->id.'/false').'</td>
						<td style="text-align:right; padding-right:10px;">'.$sDuration.'</td>
						<td>'.$oKindness->sDate.'</td>
						<td>'.$oKindness->sDateApproved.'</td>
					</tr>';
	}
	
	if ($iKindnessCount > 0){
		$sPagerHTML = theme("pager", null, KINDNESS_REC_PER_PAGE);
		$sOutput = $sTableHeader.$sOutput.$sTableFooter.$sPagerHTML;
	}else{
		$sOutput = '<div style="margin-top:10px;">No approved deeds to display, yet.</div>';
	}
	
	return $sOutput;
}

function _kindness_approved_adult($iAdultId, $sUserType){
	$iKindnessCount = 0;
	$sOutput = "";
	
	$sTableHeader = '<table style="margin-top:10px; width:100%;">
						<tr>
							<th style="width:170px;">Username</th>
							<th>Title</th>
							<th style="width:100px; text-align:right;  padding-right:10px;">Duration</th>
							<th style="width:110px;">Date Submitted</th>
						</tr>';
	$sTableFooter = '</table><br/><br/>';
	
	$sqlKindness = "SELECT A.id, A.iUserId, B.name, REPLACE_THIS, 
						A.iDuration, A.sTitle, A.sDesc, A.sToWhom
					FROM kindness_submit A
					LEFT JOIN users B ON B.uid = A.iUserId
					WHERE A.bApprovedMentor = '%s'
						AND A.bApprovedMod = '%s'
						AND A.bApprovedAdmin = '%s' 
						AND (A.iUserId IS NOT NULL OR A.is_benefactor_anonymous = 1)
						AND (A.beneficiary_id IS NOT NULL OR A.is_beneficiary_anonymous = 1)";
	
	$sqlCount = "SELECT COUNT(A.id)
					FROM kindness_submit A
					LEFT JOIN users B ON B.uid = A.iUserId
					WHERE A.bApprovedMentor = '%s'
						AND A.bApprovedMod = '%s'
						AND A.bApprovedAdmin = '%s' 
						AND (A.iUserId IS NOT NULL OR A.is_benefactor_anonymous = 1)
						AND (A.beneficiary_id IS NOT NULL OR A.is_beneficiary_anonymous = 1)";
	
	switch ($sUserType){
		case "mentor":
			$sqlKindness = sprintf($sqlKindness, 1, 0, 0);
			$sqlCount = sprintf($sqlCount, 1, 0, 0);
			
			break;
		
		/* case "mod":
			$sqlKindness = sprintf($sqlKindness, 1, 1, 0);
			$sqlCount = sprintf($sqlCount, 1, 1, 0);
			
			break; */
			
		case "admin":
			$sqlKindness = sprintf($sqlKindness, 1, 0, 1);
			$sqlCount = sprintf($sqlCount, 1, 0, 1);
			
			break;
	}
	
	$sqlKindness = str_replace("REPLACE_THIS", "DATE_FORMAT(A.dDatetime, '%M %e, %Y') AS sDate", $sqlKindness);
	$oKindnessResult = pager_query($sqlKindness." ORDER BY B.name", KINDNESS_REC_PER_PAGE, 0, $sqlCount);
	
	while ($oKindness = db_fetch_object($oKindnessResult)){
		$iKindnessCount++;
		
		$iDuration = $oKindness->iDuration/60;
		$iTimeHour = intval($iDuration);
		$iTimeMin = round(($iDuration - floor($iDuration)) * 60);
		$sDuration = $iTimeHour.":".$iTimeMin;
		
		$sOutput .= '<tr>
						<td>'.l($oKindness->name/* _kindness_get_name($oKindness->iUserId) */, 'user/'.$oKindness->iUserId, array("attributes" => array("target" => "_blank"))).'</td>
						<td>'.l(ucwords($oKindness->sTitle), 'kindness/details/'.$oKindness->id.'/false').'</td>
						<td style="text-align:right; padding-right:10px;">'.$sDuration.'</td>
						<td>'.$oKindness->sDate.'</td>
					</tr>';
	}
	
	if ($iKindnessCount > 0){
		$sPagerHTML = theme("pager", null, KINDNESS_REC_PER_PAGE);
		$sOutput = $sTableHeader.$sOutput.$sTableFooter.$sPagerHTML;
	}else{
		$sOutput = '<div style="margin-top:10px;">No pending deeds to approve, yet.</div>';
	}
	
	return $sOutput;
}

function _kindness_get_name($iUserId){
	$sqlName = "SELECT fid, `value`
				FROM profile_values
				WHERE fid IN (1, 2)
					AND uid = %d
				ORDER BY fid ASC";
	$oNameResult = db_query($sqlName, $iUserId);
	$sName = "";
	
	while ($oName = db_fetch_object($oNameResult)){
		$sName .= ($sName != "") ? ", ":"";
		$sName .= ucwords($oName->value);
	}
	
	return $sName;
}

function _kindness_department_address_and_name($iUserId){
	$sqlName = "SELECT fid, `value`
				FROM profile_values
				WHERE fid IN (164, 165)
					AND uid = %d
				ORDER BY fid ASC";
	$oNameResult = db_query($sqlName, $iUserId);
	$sName = "";
	
	while ($oName = db_fetch_object($oNameResult)){
		$sName .= ($sName != "") ? ", ":"";
		$sName .= ucwords($oName->value);
	}
	
	return ($sName == '') ? '-' : $sName;
}

function reviewer_anonymous_status()
{
	global $user;

	echo _reviewer_anonymous_status($user) == '1' ? true : false;exit;
}

function _reviewer_anonymous_status($user)
{
	$sqlCheck = "SELECT isAnonymousReviewer FROM volunteer_optin WHERE uid = %d AND `type` = 'mentor'";
	$isAnonymousReviewer = db_result(db_query($sqlCheck, array($user->uid)));

	return $isAnonymousReviewer;
}

function kindness_get_information($kindess_id) 
{
	$sqlDetails = "SELECT A.id, A.iUserId, A.workz_image, B.name, B.picture as benefactor_picture, C.picture as beneficiary_picture, D.picture as reporter_picture,D.name as reporter_name, A.dDatetime, A.dDatetime AS sDate, 
						A.iDuration, A.sTitle, A.sDesc, A.sToWhom,
						A.sLocation, A.beneficiary_address, A.bPromised, A.sToWhomType, A.bApprovedMentor, A.bApprovedMod, A.bApprovedAdmin, A.*
					FROM kindness_submit A
					LEFT JOIN users B ON B.uid = A.iUserId
					LEFT JOIN users C ON C.uid = A.beneficiary_id
					LEFT JOIN users D ON D.uid = A.reporter_id
					WHERE A.id = %d AND
					(A.iUserId IS NOT NULL OR A.is_benefactor_anonymous = 1) AND
					(A.beneficiary_id IS NOT NULL OR A.is_beneficiary_anonymous = 1)
					ORDER BY A.date_submitted";
	$oDetails = db_fetch_object(db_query($sqlDetails, $kindess_id));
	// Hours
	$iKindnessHours = (float)$oDetails->iDuration/60;
	$iKindnessHours = ($iKindnessHours > 0) ? $iKindnessHours:0;
	$iTimeHour = intval($iKindnessHours);
	$iTimeMin = round(($iKindnessHours - floor($iKindnessHours)) * 60);


	$oDetails->iKindnessHours = $iTimeHour * 60;
	$oDetails->iKindnessMins = str_pad($iTimeMin, 2, '0', STR_PAD_LEFT);

	$oDetails->sDate = date_format(date_create($oDetails->sDate), 'Y-m-d');
	
	echo json_encode(
		[
			'details' => $oDetails,
			'benefactor' => user_load($oDetails->iUserId),
			'beneficiary' => user_load($oDetails->beneficiary_id),
		]
	);exit;
}
function kindness_update_information($kindess_id) 
{
	global $user;

	$upload_folder = $_SERVER['DOCUMENT_ROOT'].'/hud_files/uploads/';

	$aKindnessReply = array();
	$sqlDetails = "SELECT * FROM kindness_submit WHERE id = %d";
	$oDetails = db_fetch_object(db_query($sqlDetails, $kindess_id));

	foreach ($_REQUEST as $sKey => $sData){
		${$sKey} = $sData;
	}

	$benefactor = new stdClass;
	$benefactor->uid = 0;
	$benefactor->name = '';
	$benefactor->mail = '';

	$beneficiary = new stdClass;
	$benefactor->uid = 0;

	if ($edit_workz_type != 'Random Kindness Workz') {
		if ($_REQUEST['is_benefactor_anonymous'] !== 'on') {
			$default_pass = 'pass123';
			//Samaritan Data
			$edit_benefactor_name = "$edit_benefactor_first_name $edit_benefactor_last_name";
			$benefactor_data = [
				'name' => $edit_benefactor_name,
				'profile_first_name' => $edit_benefactor_first_name,
				'profile_last_name' => $edit_benefactor_last_name,
			    'mail' => $edit_benefactor_email,
			    'profile_address' => $edit_benefactor_address,
			    'profile_phone' => $edit_benefactor_phone,
			    'profile_benefactor_department_name' => $edit_benefactor_department_name,
			    'profile_benefactor_department_address' => $edit_benefactor_department_address,
			    'profile_benefactor_department_phone' => $edit_benefactor_department_phone,
			    'profile_benefactor_department_email' => $edit_benefactor_department_email
			];
			$benefactor_account = user_load(['uid' => $oDetails->iUserId]);
			$benefactor = user_save($benefactor_account, $benefactor_data);

			if (!empty($_REQUEST['edit_benefactor-picture-filename'])) {
				$benefactor_filename = $benefactor_account->uid.'-'.end(explode('-', $_REQUEST['edit_benefactor-picture-filename']));
				rename($upload_folder.'/temp/'.$_REQUEST['edit_benefactor-picture-filename'], $upload_folder.'users/' . $benefactor_filename);

				$benefactor = user_save($benefactor, [
					'picture' => 'hud_files/uploads/users/'.$benefactor_filename
				]);
			}
		}

		if ($_REQUEST['is_beneficiary_anonymous'] !== 'on') {
			//Beneficiary Data
			$edit_sToWhom = "$edit_sToWhomFirstName $edit_sToWhomLastName";
			$beneficiary_data = $data = [
				'name' => $edit_sToWhom,
				'profile_first_name' => $edit_sToWhomFirstName,
				'profile_last_name' => $edit_sToWhomLastName,
			    'mail' => $edit_beneficiary_email,
			    'profile_address' => $edit_beneficiary_address,
			    'profile_phone' => $edit_beneficiary_phone,
			];

			$beneficiary_account = user_load(['uid' => $oDetails->beneficiary_id]);

			$beneficiary = user_save($beneficiary_account, $beneficiary_data);
			
			if (!empty($_REQUEST['edit_beneficiary-picture-filename'])) {
				$beneficiary_filename = $beneficiary->uid.'-'.end(explode('-', $_REQUEST['edit_beneficiary-picture-filename']));
				rename($upload_folder.'/temp/'.$_REQUEST['edit_beneficiary-picture-filename'], $upload_folder.'users/' . $beneficiary_filename);

				$beneficiary = user_save($beneficiary, [
					'picture' => 'hud_files/uploads/users/'.$beneficiary_filename
				]);
			}
		}
	}
	$iHour = $edit_iKindnessHour;
	$iMinute = $edit_iKindnessMinute;
	// $dDate = $iKindnessYear."-".str_pad($iKindnessMonth, 2, '0', STR_PAD_LEFT)."-".str_pad($iKindnessDay, 2, '0', STR_PAD_LEFT);
	$edit_iDurationMins = 0;//$iKindnessHour + $iKindnessMinute;
	if($edit_workz_type === 'Kindness Workz'){
		$edit_iDurationMins = $edit_iKindnessHour + $edit_iKindnessMinute;
	}

	$sqlInsert = "UPDATE workz SET INTO {kindness_submit} VALUES(
		NULL,
		%d,
		'%s',
		%d,
		'%s',
		'%s',
		'%s',
		'%s',
		'1',
		'%s',
		'0',
		'0',
		'0',
		NULL,
		'%s',
		'%s',
		'%s',
		'%s',
		%d,
		'%s',
		'%s',
		'%s',
		'%s',
		'%s',
		'%s',
		'%s',
		NULL,
		%d,
		NULL,
		'%s',
		'%s',
		'%s',
		'%s',
		'%s'
	)";

	$sqlUpdate = "UPDATE kindness_submit set 
		dDatetime = '%s',  
		iDuration = %d,
		sTitle = '%s',
		sDesc = '%s',
		sToWhom = '%s',
		sLocation = '%s',
		geocode = '%s',
		sToWhomType = '%s',
		benefactor_name = '%s',
		benefactor_address = '%s',
		benefactor_phone = '%s',
		benefactor_email = '%s',
		is_benefactor_anonymous = %d,
		benefactor_department_name = '%s',
		benefactor_department_address = '%s',
		benefactor_department_phone = '%s',
		benefactor_department_email = '%s',
		beneficiary_address = '%s',
		beneficiary_phone = '%s',
		beneficiary_email = '%s',
		is_beneficiary_anonymous = %d,
		workz_type = '%s',
		valor_act_type = '%s',
		kindness_act_type = '%s'
		WHERE id = %d";

	$workz_updated = db_query($sqlUpdate, 
		array(
			$edit_dDate, 
			$edit_iDurationMins, 
			ucwords($edit_sKindnessTitle), 
			ucfirst($edit_sKindnessDesc), 
			$benefactor->name, 
			ucwords($edit_sKindnessLocation), 
			json_encode(get_geocode_address(ucwords($edit_sKindnessLocation))), 
			$edit_sToWhomType,
			$benefactor->name,
			$edit_benefactor_address,
			$edit_benefactor_phone,
			$benefactor->mail,
			$edit_is_benefactor_anonymous == 'on' ? 1 : 0,
			$edit_benefactor_department_name,
			$edit_benefactor_department_address,
			$edit_benefactor_department_phone,
			$edit_benefactor_department_email,
			$edit_beneficiary_address,
			$edit_beneficiary_phone,
			$edit_beneficiary_email,
			$edit_is_beneficiary_anonymous == 'on' ? 1 : 0,
			$edit_workz_type,
			$edit_valor_act_type,
			$edit_kindness_act_type,
			$kindess_id, 
		)
	);

	if ($_REQUEST['edit_workz-picture-filename']) {
		$workz_filename = $kindess_id.'-'.end(explode('-', $_REQUEST['edit_workz-picture-filename']));
		$workz_image = "hud_files/uploads/workz/$workz_filename";
		rename($upload_folder.'/temp/'.$_REQUEST['edit_workz-picture-filename'], $upload_folder.'workz/' . $workz_filename);

		$query = db_query("UPDATE {kindness_submit} SET workz_image = '%s' WHERE id = %d", array($workz_filename , $kindess_id));
	}

	$aReply = array("STATUS" => "Success", "RETURN" => "Your Kindness Form has been submitted.");
	
	echo json_encode($aReply);
	
	exit;
}

function kindness_delete_information($kindess_id) 
{
	$sqlDeleteKindness = "DELETE FROM kindness_submit WHERE id = '%d'";
	db_query($sqlDeleteKindness, $kindess_id);

	$sqlDeleteStatement = "DELETE FROM kindness_statement WHERE iRefId = '%d'";
	db_query($sqlDeleteStatement, $kindess_id);
	
	$sqlDeleteComment = "DELETE FROM kindness_comment WHERE iSubmitId = '%d'";
	db_query($sqlDeleteComment, $kindess_id);
	
	exit;
}

function addUserRole()
{
	global $user;

	$role_to_add = $_REQUEST['role'];

	if ($role_to_add === 'Reporter') {
		$roles = $user->roles;
		$roles[25] = 'Reporter';
	} else if ($role_to_add === 'Reviewer') {
		$roles = $user->roles;
		$roles[6] = 'Reviewer';
	}

	user_save($user, [
		'roles' => $roles
	]);
}

function booster_dashboard()
{
	global $user;

	$boosted_array = getBoostedWorkz($user);

	echo json_encode([
		'available' => count(getWorkzAvailableForBoosting($boosted_array)), //Have been boosted by others except loggedin user
		'boosted' => count($boosted_array), //Have been boosted by the logged in user
		'waiting' => count(getWorkzWaitingForBoosting()), //Not boosted yet
	]);exit;
}

function getBoostedWorkz($user)
{
	$boosted_query = "SELECT booster_comments.iSubmitId FROM booster_comments 
		LEFT JOIN kindness_submit ON booster_comments.iSubmitId = kindness_submit.id 
		LEFT JOIN users B ON B.uid = kindness_submit.iUserId 
		LEFT JOIN users beneficiary ON beneficiary.uid = kindness_submit.beneficiary_id
		LEFT JOIN users reporter ON reporter.uid = kindness_submit.reporter_id
		WHERE booster_comments.iUserId= %d AND 
		(B.uid IS NOT NULL OR kindness_submit.is_benefactor_anonymous = 1) 
		AND (beneficiary.uid IS NOT NULL OR kindness_submit.is_beneficiary_anonymous = 1) 
		AND (reporter.uid IS NOT NULL)
		GROUP BY booster_comments.iSubmitId";

	$boosted_array = [];
	$boosted_result = db_query($boosted_query, array($user->uid));

	while($boosted = db_fetch_object($boosted_result)){
		$boosted_array[] = $boosted->iSubmitId;
	}

	return $boosted_array;
}

function getWorkzAvailableForBoosting($boosted_array)
{
	$available_query = "SELECT id FROM kindness_submit 
		LEFT JOIN users B ON B.uid = kindness_submit.iUserId 
		LEFT JOIN users beneficiary ON beneficiary.uid = kindness_submit.beneficiary_id
		LEFT JOIN users reporter ON reporter.uid = kindness_submit.reporter_id
		WHERE 
		(B.uid IS NOT NULL OR is_benefactor_anonymous = 1) 
		AND (beneficiary.uid IS NOT NULL OR is_beneficiary_anonymous = 1)
		AND (reporter.uid IS NOT NULL)";
	$available_array = [];

	if (count($boosted_array) > 0) {
		$available_query .= " AND id NOT IN (%s)";
		$available_result = db_query($available_query, array(implode(',', $boosted_array)));
	}else{
		$available_result = db_query($available_query);
	}

	while($available = db_fetch_object($available_result)){
		$available_array[] = $available->id;
	}

	return $available_array;
}

function getWorkzWaitingForBoosting()
{
	$all_boosted_query = "SELECT iSubmitId FROM booster_comments GROUP BY iSubmitId";
	$all_boosted_array = [];
	$all_boosted_result = db_query($all_boosted_query);

	while($all_boosted = db_fetch_object($all_boosted_result)){
		$all_boosted_array[] = $all_boosted->iSubmitId;
	}

	$waiting_query = "SELECT id FROM kindness_submit 
			LEFT JOIN users B ON B.uid = kindness_submit.iUserId 
			LEFT JOIN users beneficiary ON beneficiary.uid = kindness_submit.beneficiary_id
			LEFT JOIN users reporter ON reporter.uid = kindness_submit.reporter_id
			WHERE (B.uid IS NOT NULL OR is_benefactor_anonymous = 1) 
				AND (beneficiary.uid IS NOT NULL OR is_beneficiary_anonymous = 1)
				AND (reporter.uid IS NOT NULL)
				";
	$waiting_array = [];

	if (count($all_boosted_array) > 0) {
		$waiting_query .= " AND id NOT IN (%s)";
		$waiting_result = db_query($waiting_query, array(implode(',', $all_boosted_array)));
	}else{
		$waiting_result = db_query($waiting_query);
	}

	while($waiting = db_fetch_object($waiting_result)){
		$waiting_array[] = $waiting->id;
	}

	return $waiting_array;
}

function booster_workz_list()
{
	global $user;

	$boost_list_type = $_GET['boost_list_type'];

	$kindness_ids = [];
	switch($boost_list_type){
		case 'boosted':
			$kindness_ids = getBoostedWorkz($user);
			continue;
		case 'available':
			$kindness_ids = getWorkzAvailableForBoosting(getBoostedWorkz($user));
			continue;
		case 'waiting':
			$kindness_ids = getWorkzWaitingForBoosting();
			continue;
	}

	$sqlKindness = "SELECT A.id, A.iUserId, B.uid, B.name as samaritan_name, REPLACE_THIS, A.iDuration, A.sTitle, A.sDesc, A.sToWhom, A.sLocation, A.sToWhomType, A.workz_type, A.workz_image, A.date_submitted,
					beneficiary.name as beneficiary_name, reporter.name as reporter_name,
					A.is_benefactor_anonymous, A.is_beneficiary_anonymous
					FROM kindness_submit A
					LEFT JOIN users B ON B.uid = A.iUserId
					LEFT JOIN users beneficiary ON beneficiary.uid = A.beneficiary_id
					LEFT JOIN users reporter ON reporter.uid = A.reporter_id
					WHERE A.id IN (%s) 
					AND (B.uid IS NOT NULL OR A.is_benefactor_anonymous = 1) 
					AND (A.beneficiary_id IS NOT NULL OR A.is_beneficiary_anonymous = 1)
					ORDER BY A.id DESC";
	$sqlKindness = sprintf($sqlKindness, implode(",", $kindness_ids));

	// echo implode(",", $kindness_ids);exit;
	
	$sqlKindness = db_query(str_replace("REPLACE_THIS", "DATE_FORMAT(A.dDatetime, '%M %e, %Y') AS sDate", $sqlKindness));

	$list = array();

	while($workz = db_fetch_object($sqlKindness)){
		$workz->duration = setDuration($workz);
		setSamaritanName($workz);
		setBeneficiaryName($workz);
		array_push($list, $workz);
	}

	echo json_encode($list);exit;
}

function reporter_workz_list()
{
	global $user;

	$reporter_list_type = $_GET['reporter_list_type'];

	$kindness_ids = [];

	$reporter_workz = kindness_callback_kindness_workz2_benfactors(null, true);

	switch($reporter_list_type){
		case 'reports-samaritan':
		case 'reports-filed':
			$kindness_ids = $reporter_workz['all_array'];
			continue;
		case 'reports-approved':
			$kindness_ids = $reporter_workz['approved_array'];
			continue;
		case 'reports-pending':
			$kindness_ids = $reporter_workz['pending_array'];
			continue;
		case 'reports-disapproved':
			$kindness_ids = $reporter_workz['disapproved_array'];
			continue;
	}

	$sqlKindness = "SELECT A.id, A.iUserId, B.uid, B.name as samaritan_name, REPLACE_THIS, A.iDuration, A.sTitle, A.sDesc, A.sToWhom, A.sLocation, A.sToWhomType, A.workz_type, A.workz_image, A.date_submitted,
					beneficiary.name as beneficiary_name, reporter.name as reporter_name,
					A.is_benefactor_anonymous, A.is_beneficiary_anonymous
					FROM kindness_submit A
					LEFT JOIN users B ON B.uid = A.iUserId
					LEFT JOIN users beneficiary ON beneficiary.uid = A.beneficiary_id
					LEFT JOIN users reporter ON reporter.uid = A.reporter_id
					WHERE A.id IN (%s) AND
					(A.iUserId IS NOT NULL OR A.is_benefactor_anonymous = 1) AND
					(A.beneficiary_id IS NOT NULL OR A.is_beneficiary_anonymous = 1)
					ORDER BY A.id DESC";
	$sqlKindness = sprintf($sqlKindness, implode(",", $kindness_ids));

	// echo implode(",", $kindness_ids);exit;
	
	$sqlKindness = db_query(str_replace("REPLACE_THIS", "DATE_FORMAT(A.dDatetime, '%M %e, %Y') AS sDate", $sqlKindness));

	$list = array();
	$samaritan_ids = [];
	while($workz = db_fetch_object($sqlKindness)){
		$workz->duration = setDuration($workz);
		setSamaritanName($workz);
		setBeneficiaryName($workz);
		array_push($list, $workz);

		if ($workz->iUserId != 0) {
			$samaritan_ids[$workz->iUserId] = $workz->iUserId; 
		}
	}

	if ($reporter_list_type === 'reports-samaritan') {
		$samaritans = [];
		foreach ($samaritan_ids as $key => $samaritan_id) {
			$user_info = user_load(['uid' => $samaritan_id]);

			array_push($samaritans, [
				'uid' => $user_info->uid,
				'grade' => $user_info->profile_grade,
				'school' => $user_info->profile_school,
				'email' => $user_info->mail,
				'name' => $user_info->name,
			]);
		}

		echo json_encode($samaritans);exit;
	}else{
		echo json_encode($list);exit;
	}
}

function samaritan_workz_list()
{
	global $user;

	$samaritan_list_type = $_GET['samaritan_list_type'];

	$reporter_workz = kindness_callback_kindness_workz2_benfactors(null, true);
	$is_approved = $samaritan_list_type == 'pending' ? '0' : '1';

	if ($is_approved == '0') {
		$sqlKindness = "SELECT A.id, A.iUserId, B.uid, B.name as samaritan_name, REPLACE_THIS, A.iDuration, A.sTitle, A.sDesc, A.sToWhom, A.sLocation, A.sToWhomType, A.workz_type, A.workz_image, A.date_submitted,
						beneficiary.name as beneficiary_name, reporter.name as reporter_name,
						A.is_benefactor_anonymous, A.is_beneficiary_anonymous
						FROM kindness_submit A
						LEFT JOIN users B ON B.uid = A.iUserId
						LEFT JOIN users beneficiary ON beneficiary.uid = A.beneficiary_id
						LEFT JOIN users reporter ON reporter.uid = A.reporter_id
						LEFT JOIN kindness_comment C ON C.iSubmitId = A.id
						WHERE (A.iUserId  = %d) AND
						(A.beneficiary_id IS NOT NULL OR A.is_beneficiary_anonymous = 1)
						AND A.bApprovedMentor = '%s'
						AND C.iSubmitId IS NULL
						ORDER BY A.id DESC";
		$sqlKindness = sprintf($sqlKindness, $user->uid, $is_approved);

	}else{
		$sqlKindness = "SELECT A.id, A.iUserId, B.uid, B.name as samaritan_name, REPLACE_THIS, A.iDuration, A.sTitle, A.sDesc, A.sToWhom, A.sLocation, A.sToWhomType, A.workz_type, A.workz_image, A.date_submitted,
						beneficiary.name as beneficiary_name, reporter.name as reporter_name,
						A.is_benefactor_anonymous, A.is_beneficiary_anonymous
						FROM kindness_submit A
						LEFT JOIN users B ON B.uid = A.iUserId
						LEFT JOIN users beneficiary ON beneficiary.uid = A.beneficiary_id
						LEFT JOIN users reporter ON reporter.uid = A.reporter_id
						WHERE (A.iUserId  = %d) AND
						(A.beneficiary_id IS NOT NULL OR A.is_beneficiary_anonymous = 1)
						AND A.bApprovedMentor = '%s'
						ORDER BY A.id DESC";
		$sqlKindness = sprintf($sqlKindness, $user->uid, $is_approved);
	}

	// echo implode(",", $kindness_ids);exit;
	
	$sqlKindness = db_query(str_replace("REPLACE_THIS", "DATE_FORMAT(A.dDatetime, '%M %e, %Y') AS sDate", $sqlKindness));

	$list = array();
	$samaritan_ids = [];
	while($workz = db_fetch_object($sqlKindness)){
		$workz->duration = setDuration($workz);
		setSamaritanName($workz);
		setBeneficiaryName($workz);
		array_push($list, $workz);

		if ($workz->iUserId != 0) {
			$samaritan_ids[$workz->iUserId] = $workz->iUserId; 
		}
	}

	echo json_encode($list);exit;
}

function all_workz_list()
{
	$type = $_REQUEST['type'];

	if ($type === 'pending') {
		$workz = all_pending_list();
	} else if ($type === 'approved') {
		$workz = all_approved_list();
	}

	echo json_encode($workz);exit;
}

function all_pending_list()
{
	$sqlKindness = "SELECT A.id, A.iUserId, B.uid, B.name as samaritan_name, REPLACE_THIS, A.iDuration, A.sTitle, A.sDesc, A.sToWhom, A.sLocation, A.sToWhomType, A.workz_type, A.workz_image, A.date_submitted, 
					beneficiary.name as beneficiary_name, reporter.name as reporter_name,
					A.is_benefactor_anonymous, A.is_beneficiary_anonymous
					FROM kindness_submit A
					LEFT JOIN users B ON B.uid = A.iUserId
					LEFT JOIN users beneficiary ON beneficiary.uid = A.beneficiary_id
					LEFT JOIN users reporter ON reporter.uid = A.reporter_id
					WHERE A.bApprovedMentor = '0'
						AND
						reporter.uid IS NOT NULL AND 
					(B.uid IS NOT NULL OR A.is_benefactor_anonymous = 1) AND
					(beneficiary.uid IS NOT NULL OR A.is_beneficiary_anonymous = 1)
					ORDER BY A.id DESC";
	
	$sqlKindness = db_query(str_replace("REPLACE_THIS", "DATE_FORMAT(A.dDatetime, '%M %e, %Y') AS sDate", $sqlKindness));


	$pending_workz = array();

	while($workz = db_fetch_object($sqlKindness)){

		$iId = $workz->id;
		
		$sqlCheck = "SELECT COUNT(id) FROM kindness_comment WHERE bApproved = '0' AND iSubmitId = %d";
		$iCheckCount = db_result(db_query($sqlCheck, $iId));
		
		if ($iCheckCount > 0){
			continue;
		}else{
			$workz->duration = setDuration($workz);
			setSamaritanName($workz);
			setBeneficiaryName($workz);
			array_push($pending_workz, $workz);
		}
	}

	return $pending_workz;
}

function all_approved_list()
{
	global $user;

	$sqlKindness = "SELECT A.id, A.iUserId, B.uid, B.name as samaritan_name, REPLACE_THIS, A.iDuration, A.sTitle, A.sDesc, A.sToWhom, A.sLocation, A.sToWhomType, A.workz_type, A.workz_image, A.date_submitted,
					beneficiary.name as beneficiary_name, reporter.name as reporter_name,
					A.is_benefactor_anonymous, A.is_beneficiary_anonymous,
					(SELECT COUNT(id) FROM kindness_like WHERE kindness_like.iSubmitId = A.id) as likes_count,
					(SELECT COUNT(id) FROM kindness_like WHERE kindness_like.iSubmitId = A.id AND kindness_like.iUserId = '". $user->uid ."') as is_liked_by_current_user
					FROM kindness_submit A
					LEFT JOIN users B ON B.uid = A.iUserId
					LEFT JOIN users beneficiary ON beneficiary.uid = A.beneficiary_id
					LEFT JOIN users reporter ON reporter.uid = A.reporter_id
					LEFT JOIN kindness_comment C ON C.iSubmitId = A.id
					WHERE A.bApprovedMentor = '1'
						AND C.bApproved = '1'
						AND
					reporter.uid IS NOT NULL AND 
					(B.uid IS NOT NULL OR A.is_benefactor_anonymous = 1) AND
					(beneficiary.uid IS NOT NULL OR A.is_beneficiary_anonymous = 1)
					ORDER BY A.id DESC";

	$sqlKindness = sprintf($sqlKindness);
	
	$sqlKindness = db_query(str_replace("REPLACE_THIS", "DATE_FORMAT(A.dDatetime, '%M %e, %Y') AS sDate", $sqlKindness));


	$approved_workz = array();

	while($workz = db_fetch_object($sqlKindness)){

		$iId = $workz->id;
		$workz->duration = setDuration($workz);
		setSamaritanName($workz);
		setBeneficiaryName($workz);
		array_push($approved_workz, $workz);
	}

	return $approved_workz;
}

function _setSamaritanWorkzMailContent($user, array $workz)
{
	return "Hi ". $user->name .",
		<br /><br />
		Someone saw your samaritan workz! See details below:
		<br /><br />
		Title: ". $workz['title'] ." <br />
		Description: ". $workz['description'] ." <br />
		Date/Time: ". $workz['date'] ." <br />
		<br /><br />
		This will be reviewed and we will notify you once its approved. Once verified, you will have a reward from us!<br /><br />

		Your account is automatically created too!  <br /><br />

		Visit us at <a href='https://www.samaritancitation.com/'>https://www.samaritancitation.com/</a>  <br /><br />

		Username: ". $user->name ."<br />
		Password: pass123";
}

function _setBeneficiaryWorkzMailContent($user, array $workz)
{
	return "Hi ". $user->name .",
		<br /><br />
		Someone saw that you've been part of samaritan workz. See details below:
		<br /><br />
		Title: ". $workz['title'] ." <br />
		Description: ". $workz['description'] ." <br />
		Date/Time: ". $workz['date'] ." <br />
		<br /><br />

		This will be reviewed and we will notify you once its approved. Once verified, you will have a reward from us!
		<br /><br />
		Your account is automatically created too! 
		<br /><br />
		Visit us at <a href='https://www.samaritancitation.com/'>https://www.samaritancitation.com/</a>
		<br /><br />
		Username: ". $user->name ."<br />
		Password: pass123";
}

function _setReporterWorkzMailContent($user, array $workz)
{
	return "Hi ". $user->name .",
		<br /><br />
		We just received your samaritan workz report with the following details:
		<br /><br />
		Title: ". $workz['title'] ." <br />
		Description: ". $workz['description'] ." <br />
		Date/Time: ". $workz['date'] ." <br />
		<br /><br />

		This will be reviewed and we will notify you once its approved.";
}

function _setReviewerWorkzMailContent($user, array $workz)
{
	return "Hi ". $user->name .",
		<br /><br />
		A reporter submitted a samaritan workz report for your verification. See details below:
		<br /><br />
		Title: ". $workz['title'] ." <br />
		Description: ". $workz['description'] ." <br />
		Date/Time: ". $workz['date'] ." <br />
		<br /><br />

		You can check it here for more information: <a href='https://www.samaritancitation.com/'>https://www.samaritancitation.com/</a>";
}


function kindness_message_from_reviewer($kindess_id, $type) 
{
	global $user;

	$sqlDetails = "SELECT A.id, B.mail as samaritan_mail, B.name as samaritan_name, 
					C.name as beneficiary_name, C.mail as beneficiary_mail, 
					D.name as reporter_name, D.mail as reporter_mail 
					FROM kindness_submit A
					LEFT JOIN users B ON B.uid = A.iUserId
					LEFT JOIN users C ON C.uid = A.beneficiary_id
					LEFT JOIN users D ON D.uid = A.reporter_id
					WHERE A.id = %d AND
					(A.iUserId IS NOT NULL OR A.is_benefactor_anonymous = 1) AND
					(A.beneficiary_id IS NOT NULL OR A.is_beneficiary_anonymous = 1)
					ORDER BY A.date_submitted";

	$oDetails = db_fetch_object(db_query($sqlDetails, $kindess_id));
	$recipient_mail = '';
	$recipient_name = '';
	
	switch ($type) {
		case 'Reporter':
			$recipient_mail = $oDetails->reporter_mail;
			$recipient_name = $oDetails->reporter_name;
			break;
		case 'Samaritan':
			$recipient_mail = $oDetails->samaritan_mail;
			$recipient_name = $oDetails->samaritan_name;
			break;
		case 'Beneficiary':
			$recipient_mail = $oDetails->beneficiary_mail;
			$recipient_name = $oDetails->beneficiary_name;
			break;
	}

	sendCustomMailer($recipient_mail, 'You have a message from Samaritan Citation Reviewer', 'Hi '. $recipient_name .'. <br/> See message below from your Samaritan Citation Reviewer: <br /><br />"' . 
		$_REQUEST['message'] . '"', '', $user->mail);
}

function kindness_react($kindness_id, $type = 'like') 
{
	global $user;

	switch ($type){
		case 'like':

			$add_like = true;

			if ($user->uid > 0) {
				$sqlIsLikeByLoggedInUser = "SELECT COUNT(id) FROM kindness_like WHERE iSubmitId = %d AND iUserId = " . $user->uid;
				$isLikedByLoggedInUser = db_result(db_query($sqlIsLikeByLoggedInUser, $kindness_id)) > 0;

				if ($isLikedByLoggedInUser) {
					$add_like = false;
				}
			}else{
				if ($_REQUEST['anonymous_unlike'] == 'true') {
					$add_like = false;
				}
			}
			
			if ($add_like) {
				$sqlInsert1 = "INSERT INTO kindness_like VALUES(NULL, %d, '%s', '%s')";
				db_query($sqlInsert1, 
							array(
								$kindness_id, 
								$user->uid,
								date("Y-m-d H:i:s")
							)
						);
				echo json_encode(
					array(
						'is_liked' => true,
						'like_count' => _get_workz_like($kindness_id)
					)
				);exit;
			}else{
				$sqlDelete1 = "DELETE FROM kindness_like WHERE iSubmitId = %d AND iUserId = %d LIMIT 1";
				db_query($sqlDelete1, 
							array(
								$kindness_id, 
								$user->uid,
							)
						);

				echo json_encode(
					array(
						'is_liked' => false,
						'like_count' => _get_workz_like($kindness_id)
					)
				);exit;
			}
			

			break;
	}
}

function kindness_certificate($certificate_id) 
{
	$sql_certificate = "SELECT u.name, kc.dDatetime, ks.workz_type, ks.kindness_act_type, ks.valor_act_type FROM kindness_certificates kc
						LEFT JOIN kindness_submit ks ON kc.iSubmitId = ks.id
						LEFT JOIN users u ON ks.iUserId = u.uid
						WHERE kc.id = %d";
	$certificate_details = db_fetch_object(db_query($sql_certificate, $certificate_id));

	if (!$certificate_details) {
		return;exit;
	}

	$date = date_create($certificate_details->dDatetime);
	$date = date_format($date,"dS").' of '.date_format($date,"F Y");

	$commendation = $certificate_details->kindness_act_type;

	if ($certificate_details->workz_type == 'Valor Workz') {
		$commendation = $certificate_details->valor_act_type;
	}

	$data = [
		'name' => strtoupper($certificate_details->name),
		'date' => $date,
		'workz_type' => strtoupper($certificate_details->workz_type),
		'commendation' => strtoupper($commendation),
	];

	// create new PDF document
	$pdf = new TCPDF('L', 'mm', 'A4', true, 'UTF-8', false);

	// set document information
	$pdf->SetCreator('Certificate Generator');
	$pdf->SetAuthor('My Company');
	$pdf->SetTitle('Certificate of Appreciation');

	// set default header data
	$pdf->SetHeaderData('', 0, '', '', array(0, 0, 0), array(255, 255, 255));
	$pdf->setFooterData(array(0, 0, 0), array(255, 255, 255));

	// set font
	$pdf->SetFont('times', '', 35);

	// add a page
	$pdf->AddPage();

	// add certificate border image
	// $border_image = 'certificate-border.jpg';
	// $pdf->Image($border_image, 0, 0, 210, 297, '', '', '', false, 300, '', false, false, 0);

	// add certificate content

	$initial_top = 0;
	$bMargin = $pdf->getBreakMargin();
	$auto_page_break = $pdf->getAutoPageBreak();
	// disable auto-page-break
	$pdf->SetAutoPageBreak(false, 0);
	$pdf->Image($_SERVER['DOCUMENT_ROOT'].'/hud_files/images/certificate-background.png', 0, 0, 297, 211, '', '', '', false, 300, '', false, false, 0);
	// restore auto-page-break status
	// $pdf->SetAutoPageBreak($auto_page_break, $bMargin);
	// // set the starting point for the page content
	// $pdf->setPageMark();

	$initial_top += 10;
	$pdf->Image($_SERVER['DOCUMENT_ROOT'].'/hud_files/images/medal-cert-1.png', 80, $initial_top, 150, 53, '', '', '', false, 300, '', false, false, 0);

	// Title
	$initial_top += 50;
	$pdf->SetXY(80, $initial_top);
	$pdf->MultiCell(150, 10, '1ST HOPE CORPS', 0, 'C', 0, 1, '', '', true, 0, false, true, 0, 'T');

	// Description 1
	$initial_top += 18;
	$pdf->SetFont('times', '', 11);
	$pdf->SetXY(80, $initial_top);
	$pdf->MultiCell(150, 10, 'THIS IS TO CERTIFY THAT THE PRESIDENT OF THE 1ST HOPE CORPS HAS AWARDED', 0, 'C', 0, 1, '', '', true, 0, false, true, 0, 'T');

	// Medal Text
	$initial_top += 15;
	$pdf->SetFont('times', '', 30);
	$pdf->SetXY(28, $initial_top);
	$pdf->MultiCell(250, 10, 'THE SAMARITAN WORKZ '. $data['commendation'] .' CITATION', 0, 'C', 0, 1, '', '', true, 0, false, true, 0, 'T', true);

	// To
	$initial_top += 12;
	$pdf->SetFont('times', '', 15);
	$pdf->SetXY(28, $initial_top);
	$pdf->MultiCell(250, 10, 'TO', 0, 'C', 0, 1, '', '', true, 0, false, true, 0, 'T');
	// Name
	$initial_top += 10;
	$pdf->SetFont('times', 'B', 30);
	$pdf->SetXY(28, $initial_top);
	$pdf->MultiCell(250, 10, $data['name'], 0, 'C', 0, 1, '', '', true, 0, false, true, 0, 'T');

	// Bottom Description
	$initial_top += 18;
	$pdf->SetFont('times', '', 13);
	$pdf->SetXY(80, $initial_top);
	$pdf->MultiCell(150, 10, 'FOR EXCEPTIONAL SERVICE AND ACHIEVEMENT IN THE PERFORMANCE OF YOUR ' . $data['workz_type'], 0, 'C', 0, 1, '', '', true, 0, false, true, 0, 'T');

	// Left Address
	$initial_top += 40;
	$pdf->SetFont('times', '', 11);
	$pdf->SetXY(20, $initial_top);
	$pdf->MultiCell(100, 10, 'GIVEN IN THE CITY OF THE PFLUGERVILLE, TEXAS ON THE '. $data['date'], 0, 'C', 0, 1, '', '', true, 0, false, true, 0, 'T');

	// Middle Image
	$pdf->Image($_SERVER['DOCUMENT_ROOT'].'/hud_files/images/1st-hope-logo-small.png', 139, $initial_top-15, 30, 30, '', '', '', false, 300, '', false, false, 0);

	// Right Signature
	$pdf->Image($_SERVER['DOCUMENT_ROOT'].'/hud_files/images/fred-signature.png', 195, $initial_top-13, 70, 25, '', '', '', false, 300, '', false, false, 0);

	// output PDF to browser or file
	$pdf->Output('certificate.pdf', 'I');
}

function _add_like($kindess_id, $user)
{
	$sqlInsert1 = "INSERT INTO kindness_like VALUES(NULL, %d, '%s', '%s')";
	db_query($sqlInsert1, 
				array(
					$kindess_id, 
					$user->uid,
					date("Y-m-d H:i:s")
				)
			);
}

function _get_workz_like($kindness_id)
{
	$sqlLike = "SELECT COUNT(id) FROM kindness_like WHERE iSubmitId = %d";
	$likeCount = db_result(db_query($sqlLike, $kindness_id));

	return $likeCount;
}

function _number_format_short($n, $precision = 1) {
    if ($n < 900) {
        // 0 - 900
        $n_format = number_format($n, $precision);
        $suffix = '';
    } elseif ($n < 900000) {
        // 0.9k-850k
        $n_format = number_format($n * 0.001, $precision);
        $suffix = 'K';
    } elseif ($n < 900000000) {
        // 0.9m-850m
        $n_format = number_format($n * 0.000001, $precision);
        $suffix = 'M';
    } elseif ($n < 900000000000) {
        // 0.9b-850b
        $n_format = number_format($n * 0.000000001, $precision);
        $suffix = 'B';
    } else {
        // 0.9t+
        $n_format = number_format($n * 0.000000000001, $precision);
        $suffix = 'T';
    }

    // Remove unecessary zeroes after decimal. "1.0" -> "1"; "1.00" -> "1"
    // Intentionally does not affect partials, eg "1.50" -> "1.50"
    if ($precision > 0) {
        $dotzero = '.' . str_repeat('0', $precision);
        $n_format = str_replace($dotzero, '', $n_format);
    }

    return $n_format . $suffix;
}

function _getSamaritansAccountNumber()
{
	global $user;

	$sqlKindness = "SELECT BU.account_number
					FROM kindness_submit B
					LEFT JOIN users U ON U.uid = B.iUserId
					LEFT JOIN bank_users BU ON U.uid = BU.uid
					WHERE ((reporter_id = %d) AND
					B.reporter_id IS NOT NULL AND 
					B.beneficiary_id IS NOT NULL) AND
					(B.iUserId IS NOT NULL OR B.is_benefactor_anonymous = 1) AND
					(B.beneficiary_id IS NOT NULL OR B.is_beneficiary_anonymous = 1) 
					AND BU.account_number IS NOT NULL
					ORDER BY B.id DESC";

	$oKindnessResult = db_query($sqlKindness, array($user->uid));

	$accountNumbers = [];
	while($data = db_fetch_object($oKindnessResult)){
		$accountNumbers[] = $data->account_number;
	}

	return $accountNumbers;
}
